{"version":3,"sources":["helpers/Tracking.js","styles/Home.css.js","Components/base/Home.js"],"names":["Event","category","action","label","ReactGA","event","styles","container","width","height","margin","overflow","backgroundColor","scrollSnapType","fontSize","lineHeight","firstTitle","display","marginBottom","paddingTop","color","fontWeight","secondTitle","fontFamily","fontStyle","textAlign","paddingBottom","video","filter","padding","text","leftContent","leftTitle","leftHr","border","leftText","rightContent","rightTitle","rightHr","marginLeft","rightText","tryItBtn","background","boxShadow","borderRadius","textTransform","cursor","position","right","top","cardTryIt","cardContentTryIt","gridTemplateRows","marginTop","commonSection","scrollSnapAlign","scrollSnapStop","section1","sect2Img","backgroundImage","backgroundRepeat","backgroundSize","alignItems","section3","section4","sectImg","justifyContent","section5","section6","BootstrapInput","withStyles","theme","root","spacing","overflowX","input","palette","paper","transition","transitions","create","table","minWidth","InputBase","Home","state","tryButtonClicked","chosenModel","selectedModel","JsonExamples","find","x","name","models","map","buttonConfirmDisabled","showCaptcha","setState","handleModelSelect","target","value","handleModelChoiceOpen","startMindmapping","history","props","example","push","pathname","data","isPublic","classes","this","className","Card","CardContent","Typography","variant","component","FormControl","Select","labelid","id","onChange","e","model","MenuItem","captcha","sitekey","Configuration","CAPTCHA_BUTTON_TOKEN","size","tryMindmapBtn","disabled","onClick","data-cy","url","section2","style","src","alt","Component","withRouter"],"mappings":"o3MAUaA,EAAQ,SAACC,EAAUC,EAAQC,GACtCC,IAAQC,MAAM,CACZJ,WACAC,SACAC,W,QCsJWG,EApKA,CACbC,UAAW,CACTC,MAAO,OACPC,OAAQ,OACRC,OAAQ,IACRC,SAAU,OACVC,gBAAiB,UACjBC,eAAgB,cAChBC,SAAU,oBACVC,WAAY,uBAEdC,WAAY,CACVF,SAAU,OACVG,QAAS,QACTP,OAAQ,OACRQ,aAAc,QACdC,WAAY,OACZC,MAAO,OACPC,WAAY,QAEdC,YAAa,CACXF,MAAO,OACPN,SAAU,SACVS,WAAY,aACZC,UAAW,SACXH,WAAY,SACZN,WAAY,OACZU,UAAW,SACXC,cAAe,UAEjBC,MAAO,CACLC,OAAQ,+CACRX,QAAS,QACTP,OAAQ,OACRmB,QAAS,UAEXC,KAAM,CACJL,UAAW,SACXD,UAAW,SACXH,WAAY,MACZP,SAAU,OACVM,MAAO,4BACPD,WAAY,OACZU,QAAS,UAEXE,YAAa,CACXF,QAAS,UAEXG,UAAW,CACTP,UAAW,OACXD,UAAW,SACXH,WAAY,SACZP,SAAU,SACVM,MAAO,QAETa,OAAQ,CACNzB,MAAO,MACP0B,OAAQ,wBAEVC,SAAU,CACRV,UAAW,OACXD,UAAW,SACXH,WAAY,MACZP,SAAU,SACVM,MAAO,QAETgB,aAAc,CACZP,QAAS,UAEXQ,WAAY,CACVZ,UAAW,QACXD,UAAW,SACXH,WAAY,SACZP,SAAU,SACVM,MAAO,QAETkB,QAAS,CACP9B,MAAO,MACP0B,OAAQ,kBACRK,WAAY,OAEdC,UAAW,CACTf,UAAW,QACXD,UAAW,SACXH,WAAY,MACZP,SAAU,OACVM,MAAO,QAETqB,SAAU,CACRC,WAAY,UACZC,UAAW,mCACXC,aAAc,MACdC,cAAe,YACfhB,QAAS,cACTR,WAAY,MACZyB,OAAQ,UACRhC,SAAU,OACViC,SAAU,WACV3B,MAAO,QACPc,OAAQ,OACRc,MAAO,OACPC,IAAK,QAEPC,UAAW,CACTxC,OAAQ,YACRF,MAAO,cACPuC,SAAU,WACVC,MAAO,UAETG,iBAAkB,CAChBC,iBAAkB,YAClBnC,QAAS,QACTY,QAAS,oBACTwB,UAAW,OACX5B,UAAW,kBAEb6B,cAAe,CACb7C,OAAQ,SACRD,MAAO,QACP+C,gBAAiB,QACjBC,eAAgB,SAChB7C,SAAU,UAEZ8C,SAAU,CACRf,WAAY,8DAEdgB,SAAU,CACRjD,OAAQ,SACRkD,gBAAiB,oCACjBC,iBAAkB,YAClBC,eAAgB,UAChB5C,QAAS,OACT6C,WAAY,UAEdC,SAAU,CACRrB,WACE,4EACFzB,QAAS,OACT6C,WAAY,UAEdE,SAAU,CACR/C,QAAS,OACT6C,WAAY,UAEdG,QAAS,CACPzD,MAAO,MACPS,QAAS,OACTiD,eAAgB,UAElBC,SAAU,CACRzB,WACE,2EACFzB,QAAS,OACT6C,WAAY,UAEdM,SAAU,CACRnD,QAAS,OACT6C,WAAY,SACZP,gBAAiB,QACjB9C,OAAQ,QACRE,SAAU,W,UC/IR0D,G,QAAiBC,aAAW,SAAAC,GAAK,MAAK,CAC1CC,KAAM,CACJhE,MAAO,QACP6C,UAAWkB,EAAME,QAAQ,GACzBC,UAAW,OACXhE,OAAQ,YACRO,QAAS,QAEX0D,MAAO,CACL/B,aAAc,EACdG,SAAU,WACVnC,gBAAiB2D,EAAMK,QAAQlC,WAAWmC,MAC1C3C,OAAQ,oBACRpB,SAAU,GACVN,MAAO,QACPqB,QAAS,sBACTiD,WAAYP,EAAMQ,YAAYC,OAAO,CAAC,eAAgB,eACtDC,MAAO,CACLC,SAAU,SAlBOZ,CAqBnBa,MAEEC,E,2MACJC,MAAQ,CACNC,kBAAkB,EAClBC,YAAa,WACbC,cAAeC,EAAaC,MAAK,SAAAC,GAAC,MAAe,aAAXA,EAAEC,QACxCC,OAAQJ,EAAaK,KAAI,SAAAH,GAAC,OAAIA,EAAEC,QAChCG,uBAAuB,G,EAGzBC,YAAc,WACZ,EAAKC,SAAS,CAAEX,kBAAkB,K,EAGpCY,kBAAoB,SAAA7F,GAClB,EAAK4F,SAAS,CACZV,YAAalF,EAAM8F,OAAOC,MAC1BZ,cAAeC,EAAaC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,OAASvF,EAAM8F,OAAOC,Y,EAIlEC,sBAAwB,WACtB,EAAKJ,SAAS,CACZF,uBAAuB,K,EAI3BO,iBAAmB,WAAO,IAChBC,EAAY,EAAKC,MAAjBD,QACRvG,EAAM,SAAU,wBAAyB,aACzC,IAAMyG,EAAU,EAAKpB,MAAMG,cAC3Be,EAAQG,KAAK,CACXC,SAAU,QACVtB,MAAO,CAAEuB,KAAMH,EAASI,UAAU,M,wEAI5B,IAAD,OACCC,EAAYC,KAAKP,MAAjBM,QADD,EAEkEC,KAAK1B,MAAtEC,EAFD,EAECA,iBAAkBC,EAFnB,EAEmBA,YAAaQ,EAFhC,EAEgCA,sBAAuBF,EAFvD,EAEuDA,OAC9D,OACE,yBAAKmB,UAAS,UAAKF,EAAQvG,YACzB,6BAASyG,UAAS,UAAKF,EAAQxD,cAAb,YAA8BwD,EAAQrD,WACrD6B,EACC,kBAAC2B,EAAA,EAAD,CAAMD,UAAWF,EAAQ5D,WACvB,kBAACgE,EAAA,EAAD,CAAaF,UAAWF,EAAQ3D,kBAC9B,kBAACgE,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAnC,mBAGA,kBAACC,EAAA,EAAD,CAAaF,QAAQ,UACnB,kBAACG,EAAA,EAAD,CACEC,QAAQ,2BACRC,GAAG,qBACHrB,MAAOb,EACPZ,MACE,kBAACN,EAAD,CACEuB,KAAK,eACL6B,GAAG,0BAGPC,SAAU,SAAAC,GACR,EAAKzB,kBAAkByB,KAGxB9B,EAAOC,KAAI,SAAA8B,GAAK,OACf,kBAACC,EAAA,EAAD,CAAUzB,MAAOwB,GAAQA,QAI/B,kBAAC,IAAD,CACEZ,UAAWF,EAAQgB,QACnBC,QAASC,IAAcC,qBACvBC,KAAK,SACLR,SAAUX,KAAKV,wBAEjB,4BACEW,UAAS,qBAAgBF,EAAQqB,eACjCC,SAAUrC,EACVsC,QAAStB,KAAKT,kBAEd,uBAAGU,UAAU,8BALf,cAUJ,4BAAQA,UAAWF,EAAQrE,SAAU4F,QAAStB,KAAKf,YAAasC,UAAQ,cACtE,uBAAGtB,UAAU,8BADf,oBAIF,wBAAIA,UAAWF,EAAQ9F,YAAvB,WACA,wBAAIgG,UAAWF,EAAQxF,aAAvB,mCACkC,4CAElC,yBAAK0F,UAAWF,EAAQnF,OACtB,kBAAC,IAAD,CACEnB,MAAM,OACNC,OAAO,OACP8H,IAAI,kCAGR,yBAAKvB,UAAWF,EAAQhF,MACtB,6FAEE,6BAFF,2BAG+B,oDAH/B,qCAIE,6BAJF,gHAUJ,6BAASkF,UAAS,UAAKF,EAAQxD,cAAb,YAA8BwD,EAAQ0B,WACtD,yBAAKxB,UAAWF,EAAQpD,UACtB,yBAAK+E,MAAO,CAAEjI,MAAO,SACrB,yBAAKiI,MAAO,CAAEjI,MAAO,QACnB,yBAAKwG,UAAWF,EAAQ1E,cACtB,wBAAI4E,UAAWF,EAAQzE,YAAvB,oCACmC,6BADnC,wBAIA,wBAAI2E,UAAWF,EAAQxE,UACvB,yBAAK0E,UAAWF,EAAQtE,WACtB,0EAEE,6BACA,6BAHF,yFAKE,6BACA,6BANF,sDAOqD,gDAO/D,6BAASwE,UAAS,UAAKF,EAAQxD,cAAb,YAA8BwD,EAAQ/C,WACtD,yBAAK0E,MAAO,CAAEjI,MAAO,QACnB,yBAAKwG,UAAWF,EAAQ/E,aACtB,wBAAIiF,UAAWF,EAAQ9E,WAAvB,+EAGA,wBAAIgF,UAAWF,EAAQ7E,SACvB,yBAAK+E,UAAWF,EAAQ3E,UACtB,6BACE,0EACA,0FACA,yEACA,6BACA,2NAKR,yBAAKsG,MAAO,CAAEjI,MAAO,QACnB,yBAAKkI,IAAI,+BAA+BC,IAAI,cAGhD,6BAAS3B,UAAS,UAAKF,EAAQxD,cAAb,YAA8BwD,EAAQ9C,WACtD,yBAAKgD,UAAWF,EAAQ7C,SACtB,yBAAKwE,MAAO,CAAEjI,MAAO,QAAUkI,IAAI,wCAAwCC,IAAI,sBAEjF,yBAAKF,MAAO,CAAEjI,MAAO,QACnB,yBAAKwG,UAAWF,EAAQ1E,cACtB,wBAAI4E,UAAWF,EAAQzE,YAAvB,oBAGA,wBAAI2E,UAAWF,EAAQxE,UACvB,yBAAK0E,UAAWF,EAAQtE,WACtB,6BACE,qIAGE,6BACA,6BAJF,qGAME,6BACA,6BAPF,0GAeV,6BAASwE,UAAS,UAAKF,EAAQxD,cAAb,YAA8BwD,EAAQ3C,WACtD,yBAAKsE,MAAO,CAAEjI,MAAO,QACnB,yBAAKwG,UAAWF,EAAQ/E,aACtB,wBAAIiF,UAAWF,EAAQ9E,WAAvB,6BAGA,wBAAIgF,UAAWF,EAAQ7E,SACvB,yBAAK+E,UAAWF,EAAQ3E,UACtB,6BACE,mUAOE,6BACA,6BARF,yLAkBR,yBAAK6E,UAAWF,EAAQ7C,SACtB,yBAAKwE,MAAO,CAAEjI,MAAO,QAAUkI,IAAI,oCAAoCC,IAAI,YAG/E,6BAAS3B,UAAS,UAAKF,EAAQ1C,WAC7B,yBAAK4C,UAAWF,EAAQ7C,SACtB,yBAAKwE,MAAO,CAAEjI,MAAO,SAAWkI,IAAI,6BAA6BC,IAAI,WAEvE,yBAAKF,MAAO,CAAEjI,MAAO,QACnB,yBAAKwG,UAAWF,EAAQ1E,cACtB,wBAAI4E,UAAWF,EAAQzE,YAAvB,+BAGA,wBAAI2E,UAAWF,EAAQxE,UACvB,yBAAK0E,UAAWF,EAAQtE,WACtB,6BACE,wDAEE,6BAFF,iCAIE,6BAJF,mCAME,6BACA,6BAPF,oDASE,6BATF,0FAYE,6BACA,6BAbF,4J,GAnOCoG,aA+PJC,sBAAWvE,YAAWhE,EAAXgE,CAAmBc","file":"static/js/199.067e8f1f.chunk.js","sourcesContent":["import ReactGA from 'react-ga';\n\n/**\n * Event - Add custom tracking event.\n * @param {string} category\n * @param {string} action\n * @param {string} label\n */\n\n// eslint-disable-next-line import/prefer-default-export\nexport const Event = (category, action, label) => {\n  ReactGA.event({\n    category,\n    action,\n    label\n  });\n};\n","const styles = {\n  container: {\n    width: '100%',\n    height: '100%',\n    margin: '0',\n    overflow: 'auto',\n    backgroundColor: '#f3f3f3',\n    scrollSnapType: 'y mandatory',\n    fontSize: 'calc(1em + 0.6vw)',\n    lineHeight: 'calc(1.2em + 0.2vw)',\n  },\n  firstTitle: {\n    fontSize: '4rem',\n    display: 'table',\n    margin: 'auto',\n    marginBottom: '-1rem',\n    paddingTop: '3rem',\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  secondTitle: {\n    color: '#fff',\n    fontSize: '2.2rem',\n    fontFamily: 'Montserrat',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    lineHeight: '34px',\n    textAlign: 'center',\n    paddingBottom: '2.5rem',\n  },\n  video: {\n    filter: 'drop-shadow(6px 6px 4px rgba(0, 0, 0, 0.25))',\n    display: 'table',\n    margin: 'auto',\n    padding: '1rem 0',\n  },\n  text: {\n    textAlign: 'center',\n    fontStyle: 'normal',\n    fontWeight: '300',\n    fontSize: '2rem',\n    color: 'rgba(255, 255, 255, 0.81)',\n    paddingTop: '2rem',\n    padding: '0 4rem',\n  },\n  leftContent: {\n    padding: '0 4rem',\n  },\n  leftTitle: {\n    textAlign: 'left',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '2.5rem',\n    color: '#fff',\n  },\n  leftHr: {\n    width: '20%',\n    border: '2px solid whitesmoke',\n  },\n  leftText: {\n    textAlign: 'left',\n    fontStyle: 'normal',\n    fontWeight: '300',\n    fontSize: '1.8rem',\n    color: '#fff',\n  },\n  rightContent: {\n    padding: '0 4rem',\n  },\n  rightTitle: {\n    textAlign: 'right',\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontSize: '2.5rem',\n    color: '#000',\n  },\n  rightHr: {\n    width: '20%',\n    border: '2px solid black',\n    marginLeft: '80%',\n  },\n  rightText: {\n    textAlign: 'right',\n    fontStyle: 'normal',\n    fontWeight: '300',\n    fontSize: '2rem',\n    color: '#000',\n  },\n  tryItBtn: {\n    background: '#DA6343',\n    boxShadow: '6px 6px 11px rgba(0, 0, 0, 0.25)',\n    borderRadius: '8px',\n    textTransform: 'uppercase',\n    padding: '1rem 2.5rem',\n    fontWeight: '700',\n    cursor: 'pointer',\n    fontSize: '18px',\n    position: 'absolute',\n    color: 'white',\n    border: 'none',\n    right: '4rem',\n    top: '8rem',\n  },\n  cardTryIt: {\n    margin: '2rem auto',\n    width: 'fit-content',\n    position: 'absolute',\n    right: '1.5rem',\n  },\n  cardContentTryIt: {\n    gridTemplateRows: 'auto auto',\n    display: 'block',\n    padding: '0px 16px 0px 16px',\n    marginTop: '2rem',\n    textAlign: '-webkit-center',\n  },\n  commonSection: {\n    height: '93.8vh',\n    width: '100vw',\n    scrollSnapAlign: 'start',\n    scrollSnapStop: 'always',\n    overflow: 'hidden',\n  },\n  section1: {\n    background: 'linear-gradient(192.44deg, #324157 17.52%, #313354 90.79%)',\n  },\n  sect2Img: {\n    height: '93.8vh',\n    backgroundImage: \"url('/images/homepage/sect2.png')\",\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  section3: {\n    background:\n      'linear-gradient(97.99deg, #324157 40.63%, rgba(24, 23, 90, 0.98) 102.66%)',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  section4: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  sectImg: {\n    width: '50%',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  section5: {\n    background:\n      'linear-gradient(to left, #324157 40.63%, rgba(24, 23, 90, 0.98) 102.66%)',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  section6: {\n    display: 'flex',\n    alignItems: 'center',\n    scrollSnapAlign: 'start',\n    height: '100vh',\n    overflow: 'hidden',\n  },\n};\n\nexport default styles;\n","/* eslint-disable react/button-has-type */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ReactPlayer from 'react-player';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport InputBase from '@material-ui/core/InputBase';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Select, MenuItem, FormControl } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Event } from '../../helpers/Tracking';\nimport Configuration from '../../helpers/configuration';\nimport styles from '../../styles/Home.css';\nimport JsonExamples from '../../examples/simpleExamples.json';\nimport '../../css/customButton.css';\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    width: '304px',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n    margin: '20px auto',\n    display: 'flex'\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: '400px',\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    table: {\n      minWidth: 700\n    }\n  }\n}))(InputBase);\n\nclass Home extends Component {\n  state = {\n    tryButtonClicked: false,\n    chosenModel: 'products',\n    selectedModel: JsonExamples.find(x => x.name === 'products'),\n    models: JsonExamples.map(x => x.name),\n    buttonConfirmDisabled: true\n  };\n\n  showCaptcha = () => {\n    this.setState({ tryButtonClicked: true });\n  };\n\n  handleModelSelect = event => {\n    this.setState({\n      chosenModel: event.target.value,\n      selectedModel: JsonExamples.find(x => x.name === event.target.value)\n    });\n  };\n\n  handleModelChoiceOpen = () => {\n    this.setState({\n      buttonConfirmDisabled: false\n    });\n  };\n\n  startMindmapping = () => {\n    const { history } = this.props;\n    Event('Try it', 'Try it button clicked', 'Home page');\n    const example = this.state.selectedModel;\n    history.push({\n      pathname: '/tree',\n      state: { data: example, isPublic: true }\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { tryButtonClicked, chosenModel, buttonConfirmDisabled, models } = this.state;\n    return (\n      <div className={`${classes.container}`}>\n        <section className={`${classes.commonSection} ${classes.section1}`}>\n          {tryButtonClicked ? (\n            <Card className={classes.cardTryIt}>\n              <CardContent className={classes.cardContentTryIt}>\n                <Typography variant=\"h5\" component=\"h5\">\n                  Choose a Model:\n                </Typography>\n                <FormControl variant=\"filled\">\n                  <Select\n                    labelid=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={chosenModel}\n                    input={\n                      <BootstrapInput\n                        name=\"nameSelected\"\n                        id=\"age-customized-select\"\n                      />\n                    }\n                    onChange={e => {\n                      this.handleModelSelect(e);\n                    }}\n                  >\n                    {models.map(model => (\n                      <MenuItem value={model}>{model}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <ReCAPTCHA\n                  className={classes.captcha}\n                  sitekey={Configuration.CAPTCHA_BUTTON_TOKEN}\n                  size=\"normal\"\n                  onChange={this.handleModelChoiceOpen}\n                />\n                <button\n                  className={`bg-warning ${classes.tryMindmapBtn}`}\n                  disabled={buttonConfirmDisabled}\n                  onClick={this.startMindmapping}\n                >\n                  <i className=\"fas fa-exclamation-circle\" /> Confirm\n                </button>\n              </CardContent>\n            </Card>\n          ) : (\n            <button className={classes.tryItBtn} onClick={this.showCaptcha} data-cy=\"try-it-btn\">\n              <i className=\"fas fa-exclamation-circle\" /> Try it Yourself\n            </button>\n          )}\n          <h1 className={classes.firstTitle}>apigrow</h1>\n          <h2 className={classes.secondTitle}>\n            from idea to api documentation, <em>much faster</em>\n          </h2>\n          <div className={classes.video}>\n            <ReactPlayer\n              width=\"60vw\"\n              height=\"50vh\"\n              url=\"https://youtu.be/dTqGB0OtIAw\"\n            />\n          </div>\n          <div className={classes.text}>\n            <p>\n              Think & mindmap, then let apigrow generate your specifications.\n              <br />\n              apigrow&apos;s intuitive and <b>zero coding interface</b> lets you define your APIs easily.\n              <br />\n              It eliminates the pain of writing technical specifications\n              thanks to its open API documentation generator.\n            </p>\n          </div>\n        </section>\n        <section className={`${classes.commonSection} ${classes.section2}`}>\n          <div className={classes.sect2Img}>\n            <div style={{ width: '50%' }} />\n            <div style={{ width: '50%' }}>\n              <div className={classes.rightContent}>\n                <h2 className={classes.rightTitle}>\n                  Your automated api specification <br />\n                  within a few minutes\n                </h2>\n                <hr className={classes.rightHr}/>\n                <div className={classes.rightText}>\n                  <p>\n                    Design an API from scratch very efficiently:\n                    <br />\n                    <br />\n                    apigrow eliminates the need to learn any syntax or details, using a top-down approach.\n                    <br />\n                    <br />\n                    Share your specifications online with the built-in <strong>portal</strong>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className={`${classes.commonSection} ${classes.section3}`}>\n          <div style={{ width: '50%' }}>\n            <div className={classes.leftContent}>\n              <h2 className={classes.leftTitle}>\n                Two steps that save you days otherwise spent with an editor like swagger-ui\n              </h2>\n              <hr className={classes.leftHr}/>\n              <div className={classes.leftText}>\n                <div>\n                  <p>First name a business entity (ex: Recipes).</p>\n                  <p>Then enumerate its attributes (ex: ingredients, cost, ...).</p>\n                  <p>Finally get your resulting specifications.</p>\n                  <br />\n                  <p>No need to be an OpenAPI/Swagger expert to create first-class API designs. Mindmap your business data, define the query parameters and examples, and much more with apigrow&apos;s easy tool.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div style={{ width: '50%' }}>\n            <img src=\"/images/homepage/mindmap.svg\" alt=\"mindmap\" />\n          </div>\n        </section>\n        <section className={`${classes.commonSection} ${classes.section4}`}>\n          <div className={classes.sectImg}>\n            <img style={{ width: '45vw' }} src=\"/images/homepage/rocket-iterative.png\" alt=\"rocket-iterative\" />\n          </div>\n          <div style={{ width: '50%' }}>\n            <div className={classes.rightContent}>\n              <h2 className={classes.rightTitle}>\n                Iterative Design\n              </h2>\n              <hr className={classes.rightHr}/>\n              <div className={classes.rightText}>\n                <div>\n                  <p>\n                    Preview your specification in OpenAPI or Swagger format as many\n                    times as needed while adapting details.\n                    <br />\n                    <br />\n                    When you&apos;re happy with the result, download developer specifications or invite them to contribute.\n                    <br />\n                    <br />\n                    Modifications are automatically saved, and you can always get back to a tagged version if needed.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className={`${classes.commonSection} ${classes.section5}`}>\n          <div style={{ width: '50%' }}>\n            <div className={classes.leftContent}>\n              <h2 className={classes.leftTitle}>\n                Highly Compatible formats\n              </h2>\n              <hr className={classes.leftHr}/>\n              <div className={classes.leftText}>\n                <div>\n                  <p>\n                    It is possible to import existing apis specification\n                    file, and it is also possible to import/export your work to\n                    the Freemind format (Freemind is the free, open source,\n                    commonly used software for easily modeling data using\n                    mindmaps and its format is compatible with most mindmapping\n                    software).\n                    <br />\n                    <br />\n                    apigrow supports both Swagger and OpenAPI standard conventions\n                    for API description, thus making it possible to\n                    publish documention on the API Management solution of your\n                    choice.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={classes.sectImg}>\n            <img style={{ width: '45vw' }} src=\"/images/homepage/model-import.png\" alt=\"model\" />\n          </div>\n        </section>\n        <section className={`${classes.section6}`}>\n          <div className={classes.sectImg}>\n            <img style={{ width: '567px' }} src=\"/images/homepage/teams.png\" alt=\"teams\" />\n          </div>\n          <div style={{ width: '50%' }}>\n            <div className={classes.rightContent}>\n              <h2 className={classes.rightTitle}>\n                Team work and customization\n              </h2>\n              <hr className={classes.rightHr}/>\n              <div className={classes.rightText}>\n                <div>\n                  <p>\n                    For team subscribers only:\n                    <br />\n                    share, peer-review api designs\n                    <br />\n                    and resulting api documentation.\n                    <br />\n                    <br />\n                    Integrate results with your CI/CD git tool chain,\n                    <br />\n                    or alternatively publish the resulting specifications using the\n                    built-in apigrow portal\n                    <br />\n                    <br />\n                    Make all your team&apos;s specifications look the same by\n                    defining customizations, like automated\n                    camel/snake/spinal case, introduction texts, etc.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(Home));\n"],"sourceRoot":""}