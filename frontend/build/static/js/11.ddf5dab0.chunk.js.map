{"version":3,"sources":["../node_modules/@material-ui/icons/Refresh.js","Components/mindmap/frozen/ReadOnlyNode.js","Components/mindmap/frozen/ReadOnlyMindmap.js","Components/mindmap/frozen/ReadOnlyTree.js","Components/mindmap/frozen/FrozenMindmapView.js","api/ModelAPI.js","helpers/tree_helper.js","api/SwaggerAPI.js","Components/mindmap/Link.js","styles/MindmapView.css.js","Components/mindmap/LoaderIndicator.js","styles/LivePreview.css.js","Components/mindmap/LivePreview.js"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","default","_react","_default","createElement","Fragment","d","fill","Node","nodeTextLength","props","name","length","this","parent","className","width","height","y","currentNode","nodeKey","keyProp","x","textAnchor","dy","textDecoration","label","type","isArray","isSubPath","direction","textProps","fontWeight","abstract","gProps","transform","createNode","Component","Mindmap","onWheelScroll","e","zoom","state","deltaY","setState","onDragStart","nodeName","isPaning","isDragging","isDraggingMoving","draggedNodeKey","onDragStop","moveNode","onPanStart","startX","clientX","changedTouches","startY","clientY","onPanMove","panX","panY","onPanEnd","nodeContext","prevProps","isFocus","mindmap","focus","id","onFocus","ref","viewBox","minX","minY","maxX","nodeWidth","maxY","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onWheel","style","pointerEvents","links","map","link","Link","colorScheme","target","data","charCodeAt","branchColor","isDottedLine","notImplemented","key","source","x1","x2","y1","y2","pathProps","nodes","filter","n","node","labelProp","Width","keydown","defaultProps","animated","duration","easing","easeQuadOut","getChildren","children","steps","margins","bottom","left","right","top","Tree","previousStates","toCopyNodeKey","toCutNodeKey","event","fullScreen","swaggerHtml","getTreeDepthAndCardinality","depth","cardinality","maxDepth","forEach","getTreeTextWidth","textWidth","maxLength","lengths","Math","max","propagateDirection","dir","c","propagateShiftLeft","horizontalShift","nodeShift","propagateShiftRight","nodePlacementAdaptation","treeMaxLength","uncle","child","openReferenceHandler","ModelAPI","getModel","referenceId","then","populatedModel","freezeTag","history","push","pathname","modelId","model","keys","_","isString","indexOf","replace","selectedNode","allData","parentNode","searchTreeByKey","onNodeSelect","indexWhereToGo","findIndex","contentHeight","ld","contentWidth","leftData","clone","rootLeft","tree","size","hierarchy","nodesLeft","descendants","linksLeft","rightData","rd","rootRight","nodesRight","linksRight","dh","nl","ll","splice","concat","shift","centerX","centerY","MindmapFrozenView","frozenDate","isLivePreviewOpen","livePreviewSwagger","organizationId","location","intervalId","onPreviewClick","requestLivePreview","onRefreshBtnClick","m","a","trackPromise","SwaggerAPI","result","setFocus","getHeadbandInfo","isFrozen","lockedByUser","alignSelf","Date","toLocaleString","updatedAt","lockedUntil","classes","preview","handleClass","customHandle","borderClass","customResizeBorder","position","maxWidth","zIndex","LivePreview","swagger","svgContainer","treeContainer","headband","headbandFrozen","headbandReadOnly","Tooltip","arrow","title","enterDelay","leaveDelay","Button","onClick","marginLeft","order","color","minWidth","customFrozenMindmapZoom","Slide","in","mountOnEnter","unmountOnExit","IconButton","showIconFrozenTree","contextType","UserContext","withStyles","styles","teamId","params","execute","fileType","isLock","isLocked","tags","rules","ruleId","rule","BaseAPI","startnode","stack","pop","hasAncestorWithPost","root","verbs","includes","hasOperationAncestor","isAncestorOf","ofNodeKey","ofNode","cloneTree","parentNodeKey","generateId","uniqid","addNewChildNode","selectedNodeKey","nodeWhereToAdd","newNodeKey","newNode","example","description","queryable","paginable","isInPostResponse","patchable","calculated","queryParams","newTree","swaggerName","parentId","updateSubNodes","parentNodeToUpdate","changeFunction","updateParentNodes","childNode","changeFunctionParam","updateTree","nodeToUpdate","xDescription","tmpNode","jsonstring","red","green","blue","stroke","PureComponent","flexGrow","display","flexFlow","backgroundColor","previewButton","sideBarContainer","editButton","borderRadius","toggleContainer","tabButton","optionMenu","padding","exportMenu","editIcon","modalContainer","border","textAlign","formControl","buttonSaveTeam","margin","cursor","background","overflow","alignItems","alignContent","justifyContent","showIcon","marginTop","marginRight","showIconEdit","loaderContainer","swaggerSpinner","promiseInProgress","usePromiseTracker","useState","promise","setPromise","setTimeout","timeout","spinner","hideIcon","spec","docExpansion","showExtensions"],"mappings":"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","file":"static/js/11.ddf5dab0.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Refresh');\n\nexports.default = _default;","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nconst propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  keyProp: PropTypes.string.isRequired,\n  labelProp: PropTypes.string.isRequired,\n  nodeKey: PropTypes.string.isRequired\n};\n\nexport default class Node extends Component {\n  nodeTextLength = () => {\n    return this.props.name.length * 9;\n  };\n\n  createNode() {\n    if (!this.props.parent) {\n      // we are in main node\n      return (\n        <svg\n          className=\"svg-rect\"\n          width={this.nodeTextLength() + 6}\n          height=\"30\"\n          y=\"-10\"\n        >\n          <rect\n            className={\n              this.props.currentNode.nodeKey === this.props[this.props.keyProp]\n                ? 'selected-node'\n                : 'main-node'\n            }\n            width={this.nodeTextLength() + 6}\n            height={30}\n          />\n          <text\n            x=\"50%\"\n            y=\"50%\"\n            textAnchor=\"middle\"\n            dy=\".3em\"\n            textDecoration=\"underline\"\n          >\n            /{this.props.name}\n          </text>\n        </svg>\n      );\n    }\n    const label =\n      (this.props.type === 'reference' && this.props.isArray ? '[' : '') +\n      (this.props.type === 'reference' ? '#' : '') +\n      (this.props.isSubPath === true ? '/' : '') +\n      (this.props.type === 'array' ? '[' : '') +\n      this.props.name +\n      (this.props.type === 'array' ? ']' : '') +\n      (this.props.type === 'reference' && this.props.isArray ? ']' : '');\n    return (\n      <g>\n        <text\n          textAnchor={this.props.direction === 'right' ? 'start' : 'end'}\n          {...this.props.textProps}\n          textDecoration={this.props.isSubPath === true ? 'underline' : ''}\n          fontWeight={this.props.abstract === true ? 'bold' : ''}\n        >\n          {label}\n        </text>\n      </g>\n    );\n  }\n\n  render() {\n    return (\n      <g\n        {...this.props.gProps}\n        transform={`translate(${this.props.y}, ${this.props.x - 5})`}\n      >\n        <g>\n          {this.createNode()}\n        </g>\n      </g>\n    );\n  }\n}\n\nNode.propTypes = propTypes;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport keydown from 'react-keydown';\nimport Link from '../Link';\nimport Node from './ReadOnlyNode';\n\nconst propTypes = {\n  keyProp: PropTypes.string.isRequired,\n  labelProp: PropTypes.string.isRequired,\n  // gProps: PropTypes.object.isRequired,\n  // textProps: PropTypes.object.isRequired\n};\n\nclass Mindmap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      panX: 0,\n      panY: 0,\n      zoom: 0.7,\n      isPaning: false,\n      isDragging: false,\n      isDraggingMoving: false,\n    };\n\n    this.nodeContext = false;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.isFocus !== this.props.isFocus &&\n      this.props.isFocus &&\n      this.mindmap\n    ) {\n      this.mindmap.focus();\n    }\n  }\n\n  onWheelScroll = e => {\n    let zoom = this.state.zoom;\n    if (e.deltaY < 0) {\n      zoom *= 1.1;\n      if (zoom > 3) zoom = 3;\n    } else {\n      zoom *= 0.94;\n      if (zoom < 0.4) zoom = 0.4;\n    }\n    this.setState({ zoom });\n  };\n\n  onDragStart = (nodeName, nodeKey) => {\n    this.setState({\n      isPaning: false,\n      isDragging: true,\n      isDraggingMoving: false,\n      draggedNodeKey: nodeKey\n    });\n  };\n\n  onDragStop = (nodeKey, direction) => {\n    this.setState({\n      isPaning: false,\n      isDragging: false,\n      isDraggingMoving: false\n    });\n    this.props.moveNode(this.state.draggedNodeKey, nodeKey, direction);\n  };\n\n  onPanStart = e => {\n    const startX =\n      typeof e.clientX === 'undefined'\n        ? e.changedTouches[0].clientX\n        : e.clientX;\n    const startY =\n      typeof e.clientY === 'undefined'\n        ? e.changedTouches[0].clientY\n        : e.clientY;\n    this.setState({ isPaning: true, isDragging: false, startX, startY });\n  };\n\n  onPanMove = e => {\n    if (this.state.isDragging) {\n      this.setState({ isDraggingMoving: true });\n      return;\n    }\n\n    if (!this.state.isPaning) {\n      return;\n    }\n    const x =\n      typeof e.clientX === 'undefined'\n        ? e.changedTouches[0].clientX\n        : e.clientX;\n    const y =\n      typeof e.clientY === 'undefined'\n        ? e.changedTouches[0].clientY\n        : e.clientY;\n\n    this.setState({\n      panX: this.state.panX + x - this.state.startX,\n      panY: this.state.panY + y - this.state.startY,\n      startX: x,\n      startY: y\n    });\n  };\n\n  onPanEnd = () => {\n    this.setState({\n      isPaning: false,\n      isDragging: false,\n      isDraggingMoving: false\n    });\n  };\n\n  render() {\n    return (\n      <div\n        id=\"mindmap\"\n        onFocus={() => this.props.onFocus()}\n        ref={ref => {\n          this.mindmap = ref;\n        }}\n      >\n        <svg\n          viewBox={`${this.props.minX} ${this.props.minY} ${this.props.maxX -\n            this.props.minX +\n            this.props.nodeWidth +\n            1} ${this.props.maxY - this.props.minY + 1}`}\n          className=\"custom\"\n          onMouseDown={this.onPanStart}\n          onMouseMove={this.onPanMove}\n          onMouseLeave={this.onPanEnd}\n          onMouseUp={this.onPanEnd}\n          onWheel={this.onWheelScroll}\n          style={{ pointerEvents: 'auto', height: '100%' }}\n        >\n          <g\n            transform={` translate(${this.state.panX} ${this.state.panY}) scale(${this.state.zoom}) `}\n          >\n            {this.props.links.map(link => (\n              <Link\n                colorScheme={link.target.data.name.charCodeAt(0)}\n                branchColor={link.target.data.branchColor}\n                isDottedLine={link.target.data.notImplemented}\n                key={link.target.data[this.props.keyProp]}\n                keyProp={this.props.keyProp}\n                source={link.source}\n                target={link.target}\n                x1={link.source.x}\n                x2={link.target.x}\n                y1={\n                  link.source.y +\n                  (link.source.data.direction === 'right' &&\n                  link.target.data.direction === 'right'\n                    ? link.source.data.name.length * 9\n                    : 0) -\n                  (link.source.data.direction === 'left' &&\n                  link.target.data.direction === 'left'\n                    ? link.source.data.name.length * 9\n                    : 0)\n                }\n                y2={\n                  link.target\n                    .y /* + ((link.target.data.direction === \"left\"\t)?link.target.data.name.length*9:0)  */\n                }\n                pathProps={{\n                  ...this.props.pathProps,\n                  ...link.target.data.pathProps\n                }}\n              />\n            ))}\n            {this.props.nodes\n              .filter(n => n.data.nodeKey)\n              .map(node => (\n                <g key={node.data.nodeKey}>\n                  <Link\n                    branchColor={node.data.branchColor}\n                    isDottedLine={node.data.notImplemented}\n                    x1={node.x}\n                    x2={node.x}\n                    y1={\n                      node.y +\n                      (node.data.direction === 'right'\n                        ? node.data.name.length * 9\n                        : 0)\n                    }\n                    y2={\n                      node.y -\n                      (node.data.direction === 'left'\n                        ? node.data.name.length * 9\n                        : 0)\n                    }\n                    pathProps={{\n                      ...this.props.pathProps,\n                      ...node.data.pathProps\n                    }}\n                  />\n                  <Node\n                    node={node}\n                    currentNode={this.props.currentNode}\n                    onDragStart={this.onDragStart}\n                    onDragStop={this.onDragStop}\n                    isDraggingMoving={this.state.isDraggingMoving}\n                    key={node.data[this.props.keyProp]}\n                    keyProp={this.props.keyProp}\n                    labelProp={this.props.labelProp}\n                    x={node.x}\n                    y={node.y}\n                    Width={this.props.nodeWidth}\n                    gProps={{\n                      ...this.props.gProps,\n                      ...node.data.gProps\n                    }}\n                    textProps={{\n                      ...this.props.textProps,\n                      ...node.data.textProps\n                    }}\n                    {...node.data}\n                  />\n                </g>\n              ))}\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nMindmap.propTypes = propTypes;\nexport default keydown(Mindmap);\n","/* eslint-disable no-param-reassign */\n/* eslint-disable class-methods-use-this */\nimport clone from 'clone';\nimport { easeQuadOut } from 'd3-ease';\nimport { hierarchy, tree } from 'd3-hierarchy';\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport Mindmap from './ReadOnlyMindmap';\nimport ModelAPI from '../../../api/ModelAPI';\nimport { searchTreeByKey } from '../../../helpers/tree_helper';\n\nconst defaultProps = {\n  animated: false,\n  duration: 50,\n  easing: easeQuadOut,\n  getChildren: n => n.children,\n  steps: 5,\n  keyProp: 'nodeKey',\n  labelProp: 'name',\n  margins: {\n    bottom: 10,\n    left: 100,\n    right: 150,\n    top: 10\n  },\n  nodeWidth: 100,\n  pathProps: {\n    className: 'link'\n  },\n  textProps: {}\n};\n\nconst oneCharWidth = 10;\n\nexport default class Tree extends Component {\n  previousStates = [];\n\n  state = {\n    toCopyNodeKey: null,\n    toCutNodeKey: null,\n    event: '',\n    fullScreen: false,\n    swaggerHtml: ''\n  };\n\n  getTreeDepthAndCardinality = (data, depth) => {\n    this.cardinality += 1;\n    if (this.maxDepth < depth) this.maxDepth = depth;\n    if (data.children.length !== 0)\n      data.children.forEach(n => this.getTreeDepthAndCardinality(n, depth + 1));\n  };\n\n  getTreeTextWidth = (data, textWidth, maxLength) => {\n    if (data.children.length !== 0) {\n      const lengths = data.children.map(n =>\n        this.getTreeTextWidth(n, textWidth + n.name.length)\n      );\n      return Math.max(...lengths);\n    }\n\n    if (data.name && maxLength > textWidth + data.name.length) {\n      return textWidth + data.name.length;\n    }\n\n    if (data.children.length === 0) {\n      return 0;\n    }\n\n    return maxLength;\n  };\n\n  propagateDirection = (node, dir) => {\n    node.direction = dir;\n    node.children.forEach(c => {\n      this.propagateDirection(c, dir);\n    });\n  };\n\n  propagateShiftLeft = (node, horizontalShift) => {\n    let nodeShift = node.data.name.length * oneCharWidth;\n    if (node.depth === 0) nodeShift = 0;\n    node.y += horizontalShift;\n    if (node.children)\n      node.children.forEach(c => {\n        this.propagateShiftLeft(c, horizontalShift + nodeShift);\n      });\n  };\n\n  propagateShiftRight = (node, horizontalShift) => {\n    const nodeShift = node.data.name.length * oneCharWidth;\n    if (node.children)\n      node.children.forEach(c => {\n        c.y += horizontalShift + nodeShift;\n        this.propagateShiftRight(c, horizontalShift + nodeShift);\n      });\n  };\n\n  nodePlacementAdaptation = (node, treeMaxLength) => {\n    if (node.parent && node.parent.parent) {\n      let maxLength = 0;\n      node.parent.parent.children.forEach(uncle => {\n        if (uncle.data.name.length > maxLength) {\n          maxLength = uncle.data.name.length;\n        }\n      });\n      treeMaxLength += maxLength;\n      node.y +=\n        (treeMaxLength -\n          node.parent.data.name.length * (1 + 0.11 * (node.depth - 1))) *\n        9;\n    }\n\n    if (node.children) {\n      node.children = node.children.map(child => {\n        return this.nodePlacementAdaptation(child, treeMaxLength);\n      });\n    }\n\n    return node;\n  };\n\n  openReferenceHandler = () => {\n    ModelAPI.getModel(this.props.currentNode.referenceId).then(\n      populatedModel => {\n        if (populatedModel.freezeTag === '0') {\n          this.props.history.push({\n            pathname: '/tree',\n            state: {\n              modelId: this.props.currentNode.referenceId\n            }\n          });\n        } else {\n          this.props.history.push({\n            pathname: '/tree-frozen',\n            state: {\n              model: populatedModel\n            }\n          });\n        }\n      }\n    );\n  };\n\n  sanitizeNode(node) {\n    Object.keys(node).forEach(key => {\n      if (node[key] && _.isString(node[key]) && node[key].indexOf('\"') > -1) {\n        node[key] = node[key].replace('\"', '');\n      }\n    });\n  }\n\n  goToParent(selectedNode, allData) {\n    if (selectedNode.parent) {\n      const parentNode = searchTreeByKey(selectedNode.parent, allData);\n      this.props.onNodeSelect(parentNode, allData);\n    }\n  }\n\n  goToFirstChild(selectedNode, allData) {\n    if (selectedNode.children && selectedNode.children.length > 0) {\n      const indexWhereToGo = selectedNode.children.findIndex(\n        n => n.direction === selectedNode.direction\n      );\n      if (indexWhereToGo !== -1) {\n        this.props.onNodeSelect(selectedNode.children[indexWhereToGo], allData);\n      }\n    }\n  }\n\n  render() {\n    // const { isFocus, onNodeSelect, children, data, margins } = this.props;\n    const { data, margins } = this.props;\n\n    // Calcule une taille de svg adaptée à la richesse de l'arbre\n    // Pour la largeur, trouver la branche où il y a le plus de texte cumulé, à gauche puis à droite\n    const maxLeftLength = this.getTreeTextWidth(\n      {\n        children: data.children.filter(ld => ld.direction === 'left')\n      },\n      0,\n      120\n    );\n    const maxRightLength = this.getTreeTextWidth(\n      {\n        children: data.children.filter(ld => ld.direction === 'right')\n      },\n      0,\n      120\n    );\n    const contentHeight =\n      600 +\n      (maxLeftLength + maxRightLength) * oneCharWidth -\n      margins.left -\n      margins.right;\n\n    // Pour la hauteur, on fait le nombre de champs divisé par le nombre de niveaux. Poura être amélioré\n    this.maxDepth = 0;\n    this.cardinality = 0;\n    this.getTreeDepthAndCardinality(data, 0);\n    const contentWidth =\n      200 +\n      (60 * (this.cardinality + 1)) / (this.maxDepth + 1) -\n      margins.top -\n      margins.bottom;\n\n    // Crée deux sous arbres gauche et droite\n    data.children.forEach(c => {\n      this.propagateDirection(c, c.direction);\n    });\n\n    const leftData = clone(data);\n    leftData.children = leftData.children.filter(ld => ld.direction === 'left');\n    this.propagateDirection(leftData, 'left');\n\n    let rootLeft = tree().size([contentWidth, contentHeight / 2])(\n      hierarchy(leftData)\n    );\n\n    rootLeft = this.nodePlacementAdaptation(rootLeft, 0);\n    const nodesLeft = rootLeft.descendants();\n    const linksLeft = rootLeft.links();\n    this.propagateShiftLeft(nodesLeft[0], 0);\n\n    const rightData = clone(data);\n    rightData.children = rightData.children.filter(\n      rd => rd.direction === 'right'\n    );\n    this.propagateDirection(rightData, 'right', 0);\n\n    let rootRight = tree().size([contentWidth, contentHeight / 2])(\n      hierarchy(rightData)\n    );\n\n    rootRight = this.nodePlacementAdaptation(rootRight, 0);\n    const nodesRight = rootRight.descendants();\n    const linksRight = rootRight.links();\n    this.propagateShiftRight(nodesRight[0], 0);\n\n    // Retourne le sous-arbre gauche et le positionne en face du droit\n    const dh = nodesRight[0].x - nodesLeft[0].x;\n    nodesLeft.forEach(nl => {\n      nl.x += dh;\n      nl.y = -nl.y;\n    });\n\n    // Rattache au noeud racine droite les enfants du noeud racine de gauche\n    linksLeft.forEach(ll => {\n      if (ll.source.data.nodeKey === nodesLeft[0].data.nodeKey) {\n        // eslint-disable-next-line no-param-reassign\n        ll.source = nodesRight[0];\n      }\n      if (ll.target.data.nodeKey === nodesLeft[0].data.nodeKey) {\n        ll.target = nodesRight[0];\n      }\n    });\n    nodesLeft.splice(0, 1);\n\n    // Joint les deux sous-arbres\n    const nodes = nodesLeft.concat(nodesRight);\n    const links = linksLeft.concat(linksRight);\n\n    // Mesure l'arbre résultat puis recentre\n    let minX = nodesRight[0].x;\n    let maxX = nodesRight[0].x;\n    let minY = nodesRight[0].y;\n    let maxY = nodesRight[0].y;\n    nodes.forEach(n => {\n      if (minX > n.x) minX = n.x;\n      if (maxX < n.x) maxX = n.x;\n      if (minY > n.y) minY = n.y;\n      if (maxY < n.y) maxY = n.y;\n    });\n    const shift = (minX + maxX) / 2; // Hauteur mediane\n    nodes.forEach(n => {\n      n.x -= shift;\n    });\n    maxX -= shift;\n    minX -= shift;\n\n    minY -= 100; // Centrage pour les petits mindmaps, comme celui du départ from scratch\n\n    return <Mindmap\n      {...this.props}\n      {...this.state}\n      nodes={nodes}\n      links={links}\n      centerX={nodes[0].y}\n      centerY={nodes[0].x}\n      minY={minX}\n      maxY={maxX}\n      minX={minY}\n      maxX={maxY}\n    />;\n  }\n}\n\nTree.defaultProps = defaultProps;\n","import React, { Component } from 'react';\nimport Slide from '@material-ui/core/Slide';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport IconButton from '@material-ui/core/IconButton';\nimport { trackPromise } from 'react-promise-tracker';\nimport { withStyles } from '@material-ui/core/styles';\nimport ResizePanel from 'react-resize-panel';\nimport { Button } from '@material-ui/core';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport Tree from './ReadOnlyTree';\nimport LivePreview from '../LivePreview';\n\nimport ModelAPI from '../../../api/ModelAPI';\nimport SwaggerAPI from '../../../api/SwaggerAPI';\n\nimport styles from '../../../styles/MindmapView.css';\nimport { UserContext } from '../../../contexts/UserContext';\n\nclass MindmapFrozenView extends Component {\n  static contextType = UserContext;\n\n  state = {\n    data: { children: [], name: '' },\n    currentNode: { nodeKey: '' },\n    frozenDate: '',\n    isLivePreviewOpen: true,\n    livePreviewSwagger: null,\n    focus: 'tree',\n    organizationId: this.props.location.state\n      ? this.props.location.state.organizationId\n      : null\n  };\n\n  intervalId = null;\n\n  componentDidMount() {\n    const { location } = this.props.history;\n    const { model, isFrozen } = location.state;\n\n    this.setState({\n      data: model.data,\n      currentNode: { ...model.data },\n      frozenDate: model.isFrozen ? model.updatedAt : model.lockedUntil,\n      lockedByUser: model.lockedByUser,\n      isFrozen\n    });\n\n    this.requestLivePreview(model.data);\n  }\n\n  onPreviewClick = () => {\n    const { isLivePreviewOpen, data } = this.state;\n    this.setState({\n      isLivePreviewOpen: !isLivePreviewOpen\n    });\n\n    if (!isLivePreviewOpen) {\n      this.requestLivePreview(data);\n    }\n  };\n\n  onRefreshBtnClick = () => {\n    const { location } = this.props.history;\n    const { model } = location.state;\n\n    ModelAPI.getModel(model.id).then(m => {\n      this.requestLivePreview(m.data);\n      this.setState({ data: m.data });\n    });\n  };\n\n  requestLivePreview = async data => {\n    const { isLivePreviewOpen } = this.state;\n    const organizationId = this.state.organizationId\n      ? this.state.organizationId\n      : 1;\n    if (isLivePreviewOpen) {\n      // Promise tracker to display a loading spinner\n      trackPromise(\n        SwaggerAPI.requestLivePreview({ data }, organizationId).then(result => {\n          this.setState({ livePreviewSwagger: result });\n        })\n      );\n    }\n  };\n\n  setFocus = onFocus => {\n    const { focus } = this.state;\n    if (focus !== onFocus) {\n      this.setState({ focus: onFocus });\n    }\n  };\n\n  getHeadbandInfo = () => {\n    const { isFrozen, data, lockedByUser, frozenDate } = this.state;\n    if (isFrozen) {\n      return (\n        <p style={{ alignSelf: 'center' }}>\n          {`API ${data.name} - frozen on ${new Date(frozenDate).toLocaleString(\n            'en-EN'\n          )}`}\n        </p>\n      );\n    }\n    return (\n      <p style={{ alignSelf: 'center' }}>\n        {`API ${data.name} is being edited by ${lockedByUser}`}\n      </p>\n    );\n  };\n\n  render() {\n    const {\n      data,\n      currentNode,\n      isFrozen,\n      isLivePreviewOpen,\n      livePreviewSwagger\n    } = this.state;\n\n    const { classes, location } = this.props;\n    const modelId = location.state ? location.state.modelId : null;\n\n    const preview = (\n      <ResizePanel\n        direction=\"w\"\n        handleClass={classes.customHandle}\n        borderClass={classes.customResizeBorder}\n        style={{\n          position: 'inherit',\n          right: '0',\n          width: '60%',\n          maxWidth: '80%',\n          zIndex: 10\n        }}\n      >\n        <LivePreview\n          swagger={livePreviewSwagger}\n          onPreviewClick={this.onPreviewClick}\n        />\n      </ResizePanel>\n    );\n\n    const treeWidth = 'full-tree';\n\n    return (\n      <div className={classes.svgContainer}>\n        <div className={`relative-container ${classes.treeContainer}`}>\n          <div\n            className={`${classes.headband} ${\n              isFrozen\n                ? `${classes.headbandFrozen}`\n                : `${classes.headbandReadOnly}`\n            }`}\n          >\n            {this.getHeadbandInfo()}\n            {!isFrozen && (\n              <Tooltip\n                arrow\n                title=\"Refresh this model\"\n                enterDelay={500}\n                leaveDelay={200}\n              >\n                <Button\n                  size=\"small\"\n                  onClick={() => this.onRefreshBtnClick()}\n                  style={{\n                    marginLeft: 'auto',\n                    order: 2,\n                    color: 'whitesmoke',\n                    minWidth: '0.5rem'\n                  }}\n                >\n                  <RefreshIcon />\n                </Button>\n              </Tooltip>\n            )}\n          </div>\n          <div className={`${treeWidth} ${classes.customFrozenMindmapZoom}`}>\n            <Tree\n              animated={false}\n              data={data}\n              currentNode={currentNode}\n              modelId={modelId}\n              width={treeWidth}\n              onFocus={() => this.setFocus('tree')}\n            />\n          </div>\n        </div>\n        <Slide\n          direction=\"left\"\n          in={isLivePreviewOpen}\n          mountOnEnter\n          unmountOnExit\n        >\n          {preview}\n        </Slide>\n        {!isLivePreviewOpen && (\n          <IconButton\n            id=\"previewShowButton\"\n            color=\"primary\"\n            onClick={() => this.onPreviewClick()}\n            className={classes.showIconFrozenTree}\n          >\n            <VisibilityIcon />\n          </IconButton>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(MindmapFrozenView);\n","import BaseAPI from './BaseAPI';\n\nexport default class ModelAPI extends BaseAPI {\n  static getModelNames(teamId) {\n    const params = teamId ? { params: { teamId } } : {};\n    return this.execute('get', 'users/me/modelsList', params);\n  }\n\n  static getModels(params) {\n    return this.execute('get', `users/me/models`, { params }, true);\n  }\n\n  static getModelSwaggerAsFile(modelId, fileType) {\n    return this.execute('get', `models/${modelId}/swagger?type=${fileType}`);\n  }\n\n  static createModel(teamId, model) {\n    return this.execute('post', `/models/`, {\n      data: { model, teamId }\n    });\n  }\n\n  static getModel(modelId) {\n    return this.execute('get', `/models/${modelId}`);\n  }\n\n  static setModelLock(modelId, isLock) {\n    if (isLock) {\n      return this.execute('put', `/models/${modelId}/lock`);\n    }\n\n    return this.execute('delete', `/models/${modelId}/lock`);\n  }\n\n  static saveModel(modelId, model, isLocked) {\n    return this.execute('put', `/models/${modelId}?isLocked=${isLocked}`, {\n      data: model\n    });\n  }\n\n  static freezeModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=freeze`);\n  }\n\n  static revertModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=revert`);\n  }\n\n  static duplicateModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=duplicate`);\n  }\n\n  static deleteModel(modelId) {\n    return this.execute('delete', `/models/${modelId}`);\n  }\n\n  static renameModel(modelId, name) {\n    return this.execute('patch', `/models/${modelId}`, { data: { name } });\n  }\n\n  static publishToApiManager(modelId) {\n    return this.execute('post', `/models/${modelId}/gravitee`);\n  }\n\n  static changeOrganizationModel(modelId, tags, name, organizationId) {\n    return this.execute('patch', `/models/${modelId}`, {\n      data: { tags, name, organizationId }\n    });\n  }\n\n  static getModelRules(modelId) {\n    return this.execute('get', `/models/${modelId}/refinerRules`);\n  }\n\n  static testModelRule(modelId, rules) {\n    return this.execute(\n      'post',\n      `/models/${modelId}/refinerRules?testOnly=true`,\n      {\n        data: rules\n      }\n    );\n  }\n\n  static createModelRule(modelId, rules) {\n    return this.execute('put', `/models/${modelId}/refinerRules`, {\n      data: rules\n    });\n  }\n\n  static updateModelRule(modelId, ruleId, rule) {\n    return this.execute('put', `/models/${modelId}/refinerRules/${ruleId}`, {\n      data: rule\n    });\n  }\n\n  static deleteModelRule(modelId, ruleId) {\n    return this.execute('delete', `/models/${modelId}/refinerRules/${ruleId}`);\n  }\n}\n","import uniqid from 'uniqid';\n\nexport function searchTreeByKey(key, startnode) {\n  const stack = [startnode];\n  while (stack.length) {\n    const node = stack.pop();\n    if (node.nodeKey === key) return node;\n    stack.push(...node.children);\n  }\n  return stack.pop() || null;\n}\n\nexport function hasAncestorWithPost(node, root) {\n  if (node.type === 'operation') return true;\n  if (node.isSubPath === true) {\n    return node.verbs.includes('POST');\n  }\n  if (!node.parent) return node.verbs.includes('POST');\n\n  const parentNode = searchTreeByKey(node.parent, root);\n  if (!parentNode) return false;\n  return hasAncestorWithPost(parentNode, root);\n}\n\nexport function hasOperationAncestor(node, root) {\n  if (node.type === 'operation') return true;\n  if (node.isSubPath === true) return false;\n  if (!node.parent) return false;\n\n  const parentNode = searchTreeByKey(node.parent, root);\n  if (!parentNode) return false;\n  return hasOperationAncestor(parentNode, root);\n}\n\nexport function isAncestorOf(nodeKey, ofNodeKey, root) {\n  let ofNode = searchTreeByKey(ofNodeKey, root);\n\n  while (ofNode.nodeKey !== nodeKey && ofNode.parent) {\n    ofNode = searchTreeByKey(ofNode.parent, root);\n  }\n\n  return ofNode.nodeKey === nodeKey;\n}\n\nexport function cloneTree(node, parentNodeKey, generateId = true) {\n  return {\n    ...node,\n    nodeKey: generateId ? uniqid() : node.nodeKey,\n    parent: parentNodeKey,\n    children: node.children.map(child => {\n      return cloneTree(child, node.nodeKey, generateId);\n    }),\n  };\n}\n\nexport function addNewChildNode(root, selectedNodeKey, direction) {\n  if (!selectedNodeKey) {\n    return {};\n  }\n  const allData = cloneTree(root, null, false);\n  const nodeWhereToAdd = searchTreeByKey(selectedNodeKey, allData);\n  const newNodeKey = uniqid();\n  const newNode = {\n    name: '',\n    direction: direction || nodeWhereToAdd.direction,\n    parent: nodeWhereToAdd.nodeKey,\n    children: [],\n    nodeKey: newNodeKey,\n    type: 'string',\n    referenceId: '',\n    isArray: false,\n    example: '',\n    abstract: true,\n    description: '',\n    queryable: false,\n    paginable: false,\n    isInPostResponse: false,\n    patchable: false,\n    notImplemented: false,\n    isSubPath: false,\n    verbs: [],\n    calculated: false,\n    queryParams: '',\n    branchColor: nodeWhereToAdd.branchColor,\n  };\n  nodeWhereToAdd.children.push(newNode);\n  switch (nodeWhereToAdd.type) {\n    case 'array':\n      nodeWhereToAdd.type = 'array';\n      break;\n    case 'operation':\n      nodeWhereToAdd.type = 'operation';\n      break;\n    default:\n      nodeWhereToAdd.type = 'object';\n      break;\n  }\n\n  return {\n    data: allData,\n    selectedNodeKey: newNodeKey,\n    node: newNode,\n  };\n}\n\nexport function newTree(swaggerName) {\n  const parentId = uniqid();\n  return {\n    name: swaggerName,\n    direction: 'right',\n    nodeKey: parentId,\n    parent: null,\n    description: '',\n    example: '',\n    type: 'string',\n    referenceId: '',\n    isArray: false,\n    abstract: true,\n    queryable: false,\n    paginable: false,\n    isInPostResponse: false,\n    patchable: false,\n    notImplemented: false,\n    isSubPath: false,\n    calculated: false,\n    queryParams: '',\n    verbs: ['SEARCH', 'POST', 'GET', 'PUT', 'DELETE'],\n    children: [\n      {\n        name: 'id',\n        direction: 'right',\n        description: '',\n        type: 'integer',\n        referenceId: '',\n        isArray: false,\n        abstract: true,\n        queryable: false,\n        paginable: false,\n        patchable: false,\n        notImplemented: false,\n        isInPostResponse: false,\n        isSubPath: false,\n        calculated: true,\n        example: '',\n        parent: parentId,\n        nodeKey: uniqid(),\n        children: [],\n      },\n      {\n        name: 'an attribute',\n        direction: 'right',\n        description: '',\n        type: 'integer',\n        referenceId: '',\n        isArray: false,\n        abstract: true,\n        queryable: false,\n        paginable: false,\n        patchable: false,\n        notImplemented: false,\n        isInPostResponse: false,\n        isSubPath: false,\n        calculated: true,\n        example: '',\n        parent: parentId,\n        nodeKey: uniqid(),\n        children: [],\n      },\n    ],\n  };\n}\n\nfunction updateSubNodes(parentNodeToUpdate, changeFunction) {\n  changeFunction(parentNodeToUpdate);\n\n  if (parentNodeToUpdate.children && parentNodeToUpdate.children.length > 0) {\n    parentNodeToUpdate.children.map(child =>\n      updateSubNodes(child, changeFunction)\n    );\n  }\n}\n\nfunction updateParentNodes(\n  root,\n  childNode,\n  changeFunction,\n  changeFunctionParam\n) {\n  changeFunction(childNode, changeFunctionParam);\n  if (childNode.parent) {\n    const parent = searchTreeByKey(childNode.parent, root);\n\n    if (parent) {\n      updateParentNodes(root, parent, changeFunction, changeFunctionParam);\n    }\n  }\n}\n\nexport function updateTree(root, node) {\n  const data = cloneTree(root, null, false);\n  const nodeToUpdate = searchTreeByKey(node.nodeKey, data);\n  nodeToUpdate.name = node.name;\n  nodeToUpdate.description = node.description;\n  nodeToUpdate.xDescription = node.xDescription;\n  nodeToUpdate.example = node.example;\n  nodeToUpdate.type = node.type;\n  nodeToUpdate.referenceId = node.referenceId;\n  nodeToUpdate.isArray = node.isArray;\n\n  nodeToUpdate.queryable = node.queryable;\n  nodeToUpdate.isSubPath = node.isSubPath;\n  nodeToUpdate.calculated = node.calculated;\n  nodeToUpdate.isInPostResponse = node.isInPostResponse;\n  nodeToUpdate.paginable = node.paginable;\n  nodeToUpdate.patchable = node.patchable;\n\n  nodeToUpdate.queryParams = node.queryParams;\n  nodeToUpdate.verbs = node.verbs;\n  nodeToUpdate.parent = node.parent;\n\n  if (nodeToUpdate.type === 'reference') {\n    nodeToUpdate.children = node.children;\n  }\n\n  if (node.branchColor !== nodeToUpdate.branchColor) {\n    updateSubNodes(nodeToUpdate, tmpNode => {\n      tmpNode.branchColor = node.branchColor; // eslint-disable-line no-param-reassign\n    });\n  }\n\n  if (nodeToUpdate.notImplemented !== node.notImplemented) {\n    if (node.notImplemented) {\n      // Mark all subnodes as not implemented\n      updateSubNodes(nodeToUpdate, tmpNode => {\n        tmpNode.notImplemented = true; // eslint-disable-line no-param-reassign\n      });\n    } else {\n      // Mark all parent nodes as implemented\n      updateParentNodes(data, nodeToUpdate, tmpNode => {\n        tmpNode.notImplemented = false; // eslint-disable-line no-param-reassign\n      });\n    }\n  }\n\n  if (nodeToUpdate.abstract !== node.abstract) {\n    if (node.abstract) {\n      // Add the parent to abstract\n      updateParentNodes(data, nodeToUpdate, tmpNode => {\n        tmpNode.abstract = true; // eslint-disable-line no-param-reassign\n      });\n    } else {\n      // remove only this from abstract\n      nodeToUpdate.abstract = node.abstract; // eslint-disable-line no-param-reassign\n    }\n  }\n\n  return data;\n}\n","import BaseAPI from './BaseAPI';\n\nexport default class SwaggerAPI extends BaseAPI {\n  static getResourcesFromUploaded(data) {\n    return this.execute('post', '/swaggerUpload/resources', {\n      data: { jsonstring: data }\n    });\n  }\n\n  static getModelsFromResources(data) {\n    return this.execute('post', '/swaggerUpload/models', {\n      data\n    });\n  }\n\n  static requestPreview(data) {\n    return this.execute('post', '/swaggerPreviews', { data });\n  }\n\n  static requestLivePreview(data, organizationId) {\n    return this.execute(\n      'post',\n      `/swaggerLivePreviews?organizationId=${organizationId}`,\n      { data }\n    );\n  }\n}\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable no-bitwise */\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\n\nconst propTypes = {\n  x1: PropTypes.number.isRequired,\n  x2: PropTypes.number.isRequired,\n  y1: PropTypes.number.isRequired,\n  y2: PropTypes.number.isRequired,\n  pathProps: PropTypes.object.isRequired\n};\n\nfunction diagonal(x1, y1, x2, y2) {\n  return `M${y1},${x1}C${(y1 + y2) / 2},${x1} ${(y1 + y2) /\n    2},${x2} ${y2},${x2}`;\n}\n\nexport default class Link extends PureComponent {\n  render() {\n    const d = diagonal(\n      this.props.x1,\n      this.props.y1,\n      this.props.x2,\n      this.props.y2\n    );\n\n    const colorScheme = this.props.colorScheme & 31;\n    const red = 245 + colorScheme / 3;\n    const green = 166 + colorScheme;\n    const blue = 35 + colorScheme;\n    const color = this.props.branchColor || `rgb(${red}, ${green}, ${blue})`;\n    return (\n      <path\n        style={{ stroke: color }}\n        {...this.props.pathProps}\n        {...(this.props.isDottedLine && { 'stroke-dasharray': '5, 5' })}\n        d={d}\n      />\n    );\n  }\n}\n\nLink.propTypes = propTypes;\n","const styles = () => {\n  return {\n    svgContainer: {\n      flexGrow: 3,\n      display: 'flex',\n      flexFlow: 'row nowrap',\n      backgroundColor: '#ececec',\n      height: 'calc(100% - 64.237px)',\n    },\n    treeContainer: {\n      position: 'relative'\n    },\n    previewButton: {\n      marginLeft: '50%',\n      backgroundColor: 'transparent',\n      position: 'fixed'\n    },\n    sideBarContainer: {\n      display: 'contents'\n    },\n    editButton: {\n      backgroundColor: '#324157',\n      borderRadius: '0'\n    },\n    toggleContainer: {},\n    tabButton: {\n      width: 'fit-content',\n      height: '40px'\n    },\n    optionMenu: {\n      width: '250px',\n      backgroundColor: '#e0e0e0',\n      position: 'absolute',\n      zIndex: 0,\n      height: '100%'\n    },\n    headband: {\n      display: 'flex',\n      position: 'absolute',\n      width: '-webkit-fill-available',\n      color: 'whitesmoke',\n      padding: '0.5rem 1rem'\n    },\n    headbandFrozen: {\n      backgroundColor: '#2a8dff',\n    },\n    headbandReadOnly: {\n      backgroundColor: '#f2a436',\n    },\n    exportMenu: {\n      width: '250px',\n      backgroundColor: '#e0e0e0',\n      position: 'absolute',\n      zIndex: 0,\n      height: '100%'\n    },\n    editIcon: {\n      color: 'white'\n    },\n    modalContainer: {\n      backgroundColor: '#e0e0e0',\n      width: 'fit-content',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      padding: '20px',\n      transform: 'translateY(-50%) translateX(-50%)',\n      borderRadius: '10px',\n      border: 'solid 1px black',\n      textAlign: 'center'\n    },\n    formControl: {\n      minWidth: '120px'\n    },\n    buttonSaveTeam: {\n      margin: '10px'\n    },\n    customHandle: {\n      cursor: 'ew-resize',\n      width: '5px',\n      height: '100px',\n      margin: '0px -5px',\n      background: '#324157',\n      borderRadius: '2px',\n      textAlign: 'center',\n      zIndex: '999',\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    customResizeBorder: {\n      cursor: 'ew-resize',\n      width: '10px',\n      background: 'white',\n      border: '1px solid #80808066',\n      display: 'flex',\n      zIndex: '999',\n      alignItems: 'center',\n      alignContent: 'center',\n      justifyContent: 'center',\n      overflow: 'visible'\n    },\n    customFrozenMindmapZoom: {\n      // width: '115%'\n      height: '94vh'\n    },\n    showIcon: {\n      top: '0',\n      right: '0',\n      position: 'absolute',\n      marginTop: '80px',\n      marginRight: '20px',\n      color: '#2b8dff'\n    },\n    showIconFrozenTree: {\n      top: '0',\n      right: '0',\n      position: 'absolute',\n      marginTop: '6rem',\n      marginRight: '20px',\n      color: '#2b8dff',\n      zIndex: 999\n    },\n    showIconEdit: {\n      top: '0',\n      left: '0',\n      position: 'absolute',\n      marginTop: '80px',\n      marginLeft: '20px',\n      color: '#2b8dff'\n    }\n  };\n};\n\nexport default styles;\n","import React, { useState } from 'react';\nimport { usePromiseTracker } from 'react-promise-tracker';\nimport { withStyles } from '@material-ui/core/styles';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst styles = () => {\n  return {\n    loaderContainer: {\n      width: '-webkit-fill-available',\n      maxWidth: '50%%',\n      height: '100%',\n      display: 'flex',\n      backgroundColor: '#ffffff85',\n      position: 'fixed',\n      zIndex: '10'\n    },\n    swaggerSpinner: {\n      margin: 'auto'\n    }\n  };\n};\n\nconst Spinner = props => {\n  // Can pass { delay: 500 } to avoid flickering on high connection\n  const { promiseInProgress } = usePromiseTracker();\n  const [promise, setPromise] = useState('');\n  const { classes } = props;\n\n  if (promiseInProgress === true) {\n    setTimeout(() => {\n      setPromise(true);\n    }, 0);\n  }\n\n  if (promiseInProgress === false) {\n    setTimeout(() => {\n      setPromise(false);\n    }, 2000);\n  }\n\n  return (\n    promise && (\n      <div className={classes.loaderContainer}>\n        <Loader\n          className={classes.swaggerSpinner}\n          type=\"TailSpin\"\n          color=\"#324157\"\n          height={100}\n          width={100}\n          timeout={60000}\n        />\n      </div>\n    )\n  );\n};\n\nexport default withStyles(styles)(Spinner);\n","const styles = () => {\n  return {\n    spinner: {\n      position: 'absolute',\n      margin: 'auto',\n      width: 'fit-content',\n      height: 'fit-content'\n    },\n    hideIcon: {\n      top: '0',\n      left: '0',\n      position: 'absolute',\n      margin: '20px',\n      color: '#324157'\n    }\n  };\n};\n\nexport default styles;\n","import React, { PureComponent } from 'react';\nimport SwaggerUI from 'swagger-ui-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport 'swagger-ui-react/swagger-ui.css';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Spinner from './LoaderIndicator';\nimport styles from '../../styles/LivePreview.css';\n\nclass LivePreview extends PureComponent {\n  render() {\n    const { classes, swagger, id, onPreviewClick } = this.props;\n    return (\n      <div id={id} className=\"right-tree\">\n        {swagger && (\n          <>\n            <Spinner className={classes.spinner} />\n            <IconButton\n              id=\"previewHideButton\"\n              onClick={onPreviewClick}\n              className={classes.hideIcon}\n            >\n              <VisibilityOffIcon />\n            </IconButton>\n\n            <SwaggerUI\n              spec={swagger}\n              docExpansion=\"list\"\n              showExtensions=\"true\"\n            />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(LivePreview);\n"],"sourceRoot":""}