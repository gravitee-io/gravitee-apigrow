{"version":3,"sources":["assets/Example.PNG","assets/Export.PNG","assets/QuickStart.PNG","assets/swaggerExample.PNG","helpers/Tracking.js","styles/Home.css.js","Components/base/Home.js"],"names":["module","exports","Event","category","action","label","ReactGA","event","styles","bodyContainer","globalStyles","card","height","width","backgroundColor","display","details","flexDirection","content","flex","cover","borderRadius","margin","boxShadow","backgroundSize","title","padding","fontSize","color","contentText","verticalAlign","textAlign","pulse","containerCards","marginTop","cardOverrided","container","overflow","contentCard","paddingBottom","firstTitle","paddingTop","fontWeight","secondTitle","video","buttonHome","gridRow","centered","cardTryIt","cardContentTryIt","gridTemplateRows","modalItem","tryMindmapBtn","BootstrapInput","withStyles","theme","root","spacing","overflowX","input","position","palette","background","paper","border","transition","transitions","create","table","minWidth","InputBase","Home","state","tryButtonClicked","chosenModel","selectedModel","JsonExamples","find","x","name","models","map","buttonConfirmDisabled","showCaptcha","setState","handleModelSelect","target","value","handleModelChoiceOpen","startMindmapping","history","props","example","push","pathname","data","isPublic","classes","this","className","Card","CardContent","Typography","variant","component","FormControl","Select","labelid","id","onChange","e","model","MenuItem","captcha","sitekey","Configuration","CAPTCHA_BUTTON_TOKEN","size","disabled","onClick","url","right","CardMedia","image","SwaggerExample","left","Example","Export","Quickstart","Component","withRouter"],"mappings":"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","file":"static/js/14.309bd9e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Example.3808eced.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Export.de013185.PNG\";","module.exports = __webpack_public_path__ + \"static/media/QuickStart.c1406146.PNG\";","module.exports = __webpack_public_path__ + \"static/media/swaggerExample.19d5e742.PNG\";","import ReactGA from 'react-ga';\r\n\r\n/**\r\n * Event - Add custom tracking event.\r\n * @param {string} category\r\n * @param {string} action\r\n * @param {string} label\r\n */\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const Event = (category, action, label) => {\r\n  ReactGA.event({\r\n    category,\r\n    action,\r\n    label\r\n  });\r\n};\r\n","import globalStyles from './global.css';\r\n\r\nconst { bodyContainer } = globalStyles;\r\nconst styles = {\r\n  bodyContainer,\r\n  card: {\r\n    height: 300,\r\n    width: 550,\r\n    backgroundColor: '#f8f8f8',\r\n    display: 'inline-block'\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  content: {\r\n    flex: '1 0 auto',\r\n    width: 550,\r\n    height: 300\r\n  },\r\n  cover: {\r\n    width: 300,\r\n    height: 300,\r\n    borderRadius: '50%',\r\n    display: 'inline-block',\r\n    margin: '0 75px',\r\n    boxShadow:\r\n      '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\r\n    backgroundSize: 'contain'\r\n  },\r\n  title: {\r\n    width: 500,\r\n    padding: '10px',\r\n    margin: 0,\r\n    fontSize: '26px',\r\n    color: '#324157'\r\n  },\r\n  contentText: {\r\n    display: 'table-cell',\r\n    padding: '10px',\r\n    verticalAlign: 'middle',\r\n    fontSize: '19px',\r\n    width: 500,\r\n    textAlign: 'justify',\r\n    color: '#817f7f'\r\n  },\r\n  pulse: {\r\n    display: 'inline-block',\r\n    verticalAlign: 'middle'\r\n  },\r\n  containerCards: {\r\n    width: '1000px',\r\n    height: 'auto',\r\n    margin: 'auto',\r\n    marginTop: '50px'\r\n  },\r\n  cardOverrided: {\r\n    height: 'auto',\r\n    width: '550px',\r\n    display: 'inline-block',\r\n    backgroundColor: '#f8f8f8',\r\n    verticalAlign: 'middle'\r\n  },\r\n  container: {\r\n    width: '100%',\r\n    height: '100%',\r\n    margin: '0',\r\n    overflow: 'auto',\r\n    backgroundColor: '#f3f3f3'\r\n  },\r\n  contentCard: {\r\n    marginTop: '40px',\r\n    paddingBottom: 100\r\n  },\r\n  firstTitle: {\r\n    fontSize: '2.5rem',\r\n    display: 'table',\r\n    margin: 'auto',\r\n    paddingTop: '3.5rem',\r\n    color: '#324157',\r\n    fontWeight: 'bold'\r\n  },\r\n  secondTitle: {\r\n    fontSize: '2rem',\r\n    paddingBottom: '3rem',\r\n  },\r\n  video: {\r\n    fontSize: '36px',\r\n    display: 'table',\r\n    margin: 'auto',\r\n    paddingTop: '60px',\r\n    paddingBottom: '50px',\r\n    color: '#324157',\r\n    fontWeight: 'bold'\r\n  },\r\n  buttonHome: {\r\n    width: '200px',\r\n    height: '50px',\r\n    margin: '10px auto 20px auto',\r\n    display: 'flex',\r\n    fontSize: '18px',\r\n    gridRow: '1',\r\n    padding: '10px'\r\n  },\r\n  centered: {\r\n    textAlign: 'center',\r\n    display: 'block'\r\n  },\r\n  cardTryIt: {\r\n    margin: '2rem auto',\r\n    width: 'fit-content'\r\n  },\r\n  cardContentTryIt: {\r\n    gridTemplateRows: 'auto auto',\r\n    display: 'block',\r\n    padding: '0px 16px 0px 16px',\r\n    marginTop: '2rem',\r\n    textAlign: '-webkit-center'\r\n  },\r\n  modalItem: {\r\n    display: 'flex',\r\n    margin: 'auto'\r\n  },\r\n  tryMindmapBtn: {\r\n    margin: '2rem auto 1rem auto !important'\r\n  }\r\n};\r\n\r\nexport default styles;\r\n","/* eslint-disable react/no-unknown-property */\n/* eslint-disable react/button-has-type */\n/* eslint-disable no-return-assign */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ReactPlayer from 'react-player';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport InputBase from '@material-ui/core/InputBase';\nimport Fade from 'react-reveal/Fade';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Select, MenuItem, FormControl } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Example from '../../assets/Example.PNG';\nimport Export from '../../assets/Export.PNG';\nimport Quickstart from '../../assets/QuickStart.PNG';\nimport SwaggerExample from '../../assets/swaggerExample.PNG';\nimport { Event } from '../../helpers/Tracking';\nimport Configuration from '../../helpers/configuration';\nimport styles from '../../styles/Home.css';\nimport JsonExamples from '../../examples/simpleExamples.json';\nimport '../../css/customButton.css';\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    width: '304px',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n    margin: '20px auto',\n    display: 'flex'\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: '400px',\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    table: {\n      minWidth: 700\n    }\n  }\n}))(InputBase);\n\nclass Home extends Component {\n  state = {\n    tryButtonClicked: false,\n    chosenModel: 'products',\n    selectedModel: JsonExamples.find(x => x.name === 'products'),\n    models: JsonExamples.map(x => x.name),\n    buttonConfirmDisabled: true\n  };\n\n  showCaptcha = () => {\n    this.setState({ tryButtonClicked: true });\n  };\n\n  handleModelSelect = event => {\n    this.setState({\n      chosenModel: event.target.value,\n      selectedModel: JsonExamples.find(x => x.name === event.target.value)\n    });\n  };\n\n  handleModelChoiceOpen = () => {\n    this.setState({\n      buttonConfirmDisabled: false\n    });\n  };\n\n  startMindmapping = () => {\n    const { history } = this.props;\n    Event('Try it', 'Try it button clicked', 'Home page');\n    const example = this.state.selectedModel;\n    history.push({\n      pathname: '/tree',\n      state: { data: example, isPublic: true }\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { tryButtonClicked, chosenModel, buttonConfirmDisabled, models } = this.state;\n    return (\n      <div className={`${classes.container} ${classes.bodyContainer}`}>\n        <h1 className={classes.firstTitle}>autoSwagger</h1>\n        <div className={classes.centered}>\n          <h2 className={classes.secondTitle}>\n            from idea to api documentation, <em>much faster</em>\n          </h2>\n          Think & mindmap, then let autoSwagger generate your swagger.\n          <br />\n          autoSwagger&apos;s intuitive and <b>zero coding interface</b> lets you\n          define your APIs easily.\n          <br />\n          It eliminates the pain of writing swagger with its open API\n          documentation generator.\n        </div>\n\n        {tryButtonClicked ? (\n          <Card className={classes.cardTryIt}>\n            <CardContent className={classes.cardContentTryIt}>\n              <Typography variant=\"h5\" component=\"h5\">\n                Choose a Model:\n              </Typography>\n              <FormControl variant=\"filled\">\n                <Select\n                  labelid=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={chosenModel}\n                  input={\n                    <BootstrapInput\n                      name=\"nameSelected\"\n                      id=\"age-customized-select\"\n                    />\n                  }\n                  onChange={e => {\n                    this.handleModelSelect(e);\n                  }}\n                >\n                  {models.map(model => (\n                    <MenuItem value={model}>{model}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <ReCAPTCHA\n                className={classes.captcha}\n                sitekey={Configuration.CAPTCHA_BUTTON_TOKEN}\n                size=\"normal\"\n                onChange={this.handleModelChoiceOpen}\n              />\n              <button\n                className={`bg-warning ${classes.tryMindmapBtn}`}\n                disabled={buttonConfirmDisabled}\n                onClick={this.startMindmapping}\n              >\n                <i className=\"fas fa-exclamation-circle\" /> Confirm\n              </button>\n            </CardContent>\n          </Card>\n        ) : (\n          <button className=\"bg-warning\" onClick={this.showCaptcha}>\n            <i className=\"fas fa-exclamation-circle\" /> Try it Yourself\n          </button>\n        )}\n        <div className={classes.video}>\n          <ReactPlayer\n            width=\"700px\"\n            height=\"280px\"\n            url=\"https://youtu.be/gWcnKR9T7ak\"\n          />\n        </div>\n\n        <div className={classes.containerCards}>\n          <Fade>\n            <div className={classes.contentCard}>\n              <Card className={`${classes.card}, ${classes.cardOverrided}`}>\n                <CardContent>\n                  <Typography className={classes.title} component=\"h3\">\n                    Your automated api documentation within a few minutes\n                  </Typography>\n                  <Typography className={classes.contentText}>\n                    Design an API from scratch very efficiently: Autoswagger\n                    eliminates the need to learn any syntax or details, using a\n                    top-down approach.\n                  </Typography>\n                </CardContent>\n              </Card>\n              <div className={classes.pulse}>\n                <Fade right>\n                  <CardMedia\n                    className={classes.cover}\n                    image={SwaggerExample}\n                    title=\"\"\n                  />\n                </Fade>\n              </div>\n            </div>\n          </Fade>\n        </div>\n\n        <div className={classes.containerCards}>\n          <Fade>\n            <div className={classes.contentCard}>\n              <div className={classes.pulse}>\n                <Fade left>\n                  <CardMedia\n                    className={classes.cover}\n                    image={Example}\n                    title=\"\"\n                  />\n                </Fade>\n              </div>\n              <Card className={`${classes.card}, ${classes.cardOverrided}`}>\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    variant=\"h5\"\n                    component=\"h3\"\n                  >\n                    Two steps that save you days otherwise spent with an editor\n                    like swagger ui\n                  </Typography>\n                  <Typography className={classes.contentText}>\n                    1. Name a business entity (ex: Recipes). <br />\n                    2. Enumerate its attributes (ex: ingredients, cost, ...).\n                    <br />\n                    <br />\n                    Then get your resulting swagger. No need to be an\n                    OpenAPI/Swagger expert to create first-class API designs in\n                    a swagger editor. Mindmap your business data, define the\n                    query parameters and examples, and much more with\n                    AutoSwagger&apos;s easy tool.\n                  </Typography>\n                </CardContent>\n              </Card>\n            </div>\n\n            <div className={classes.contentCard}>\n              <Card className={`${classes.card}, ${classes.cardOverrided}`}>\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    variant=\"h5\"\n                    component=\"h3\"\n                  >\n                    Iterative design\n                  </Typography>\n                  <Typography className={classes.contentText}>\n                    Preview your result in swagger specification format as many\n                    times as needed while adapting details. When you&apos;re\n                    happy with the result, download the swagger file that\n                    developpers will use as a specification. Modifications are\n                    automatically saved, and you can always get back to a tagged\n                    version if needed.\n                  </Typography>\n                </CardContent>\n              </Card>\n              <div className={classes.pulse}>\n                <Fade right>\n                  <CardMedia\n                    className={classes.cover}\n                    image={Export}\n                    title=\"\"\n                  />\n                </Fade>\n              </div>\n            </div>\n\n            <div className={classes.contentCard}>\n              <div className={classes.pulse}>\n                <Fade left>\n                  <CardMedia\n                    className={classes.cover}\n                    image={Quickstart}\n                    title=\"\"\n                  />\n                </Fade>\n              </div>\n              <Card className={`${classes.card}, ${classes.cardOverrided}`}>\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    variant=\"h5\"\n                    component=\"h3\"\n                  >\n                    Highly Compatible formats\n                  </Typography>\n                  <Typography className={classes.contentText}>\n                    It is possible to import existing apis swagger specification\n                    file, and it is also possible to import/export your work to\n                    the Freemind format ( Freemind is the free, open source,\n                    commonly used software for easily modeling data using\n                    mindmaps and its format is compatible with most mindmapping\n                    software).\n                    <br />\n                    Swagger (also known as Open API specification) is the\n                    standard for API description, thus making it possible to\n                    publish documention on the API Management solution of your\n                    choice.\n                  </Typography>\n                </CardContent>\n              </Card>\n            </div>\n\n            <div className={classes.containerCards}>\n              <Fade>\n                <div className={classes.contentCard}>\n                  <Card className={`${classes.card}, ${classes.cardOverrided}`}>\n                    <CardContent>\n                      <Typography className={classes.title} component=\"h3\">\n                        Team work and customization\n                      </Typography>\n                      <Typography className={classes.contentText}>\n                        For team subscribers only: share, peer-review api\n                        designs and resulting swagger documentation.\n                        <br />\n                        Integrate results with your CI/CD git tool chain, or\n                        alternatively publish the resulting swaggers using the\n                        autoSwagger built-in portal\n                        <br />\n                        Make all your team&apos;s swaggers look the same by\n                        defining customizations, like automated\n                        camel/snake/spinal case, introduction texts, etc.\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                  <div className={classes.pulse}>\n                    <Fade right>\n                      <CardMedia\n                        className={classes.cover}\n                        image={SwaggerExample}\n                        title=\"\"\n                      />\n                    </Fade>\n                  </div>\n                </div>\n              </Fade>\n            </div>\n          </Fade>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(Home));\n"],"sourceRoot":""}