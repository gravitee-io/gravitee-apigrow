{"version":3,"sources":["styles/TeamView.css.js","Components/teams/Table.js","Components/base/TeamView.js"],"names":["bodyContainer","globalStyles","centeredCtn","styles","buttonAdd","marginTop","width","height","minWidth","marginLeft","color","backgroundColor","buttonContact","margin","display","textContact","titleContact","textAlign","dialogContent","maxWidth","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Table","state","data","ownOrgsIds","handleUpdateRole","e","username","user","Notification","error","title","message","checked","target","TeamAPI","updateMember","team","id","then","setState","map","member","isTeamLeader","success","catch","theme","createMuiTheme","overrides","MuiTablePagination","select","marginRight","MuiToolbar","root","MuiTableCell","paddingCheckbox","padding","MuiButtonBase","fontSize","MuiTableSortLabel","active","palette","primary","main","secondary","getMembers","this","members","teams","filter","level","organizations","o","isOwned","ThemeProvider","options","headerStyle","icons","columns","field","render","rowData","style","editable","Checkbox","onChange","disabled","includes","organization","float","onRowAdd","newData","Promise","resolve","setTimeout","addMember","push","err","response","status","errorMessage","onRowDelete","oldData","deleteMember","index","indexOf","splice","Component","withStyles","BootstrapInput","spacing","overflowX","input","borderRadius","position","background","paper","border","transition","transitions","create","table","InputBase","TeamView","selectTeam","event","value","allTeams","context","t","name","classes","className","Card","paddingTop","userSelect","FormControl","Select","selectEmpty","MenuItem","key","contextType","UserContext"],"mappings":"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","file":"static/js/21.0190590b.chunk.js","sourcesContent":["import globalStyles from './global.css';\r\n\r\nconst { bodyContainer, centeredCtn } = globalStyles;\r\nconst styles = () => {\r\n  return {\r\n    bodyContainer,\r\n    centeredCtn,\r\n    buttonAdd: {\r\n      marginTop: '24px',\r\n      width: '42px',\r\n      height: '42px',\r\n      minWidth: '0px',\r\n      marginLeft: '4px',\r\n      color: 'white',\r\n      backgroundColor: '#324157;'\r\n    },\r\n    buttonContact: {\r\n      margin: '20px auto',\r\n      display: 'flex'\r\n    },\r\n    textContact: {\r\n      margin: '20px auto',\r\n      display: 'flex'\r\n    },\r\n    titleContact: {\r\n      margin: '20px auto',\r\n      width: '500px',\r\n      textAlign: 'center'\r\n    },\r\n    dialogContent: {\r\n      display: 'grid',\r\n      maxWidth: '700px'\r\n    }\r\n  };\r\n};\r\n\r\nexport default styles;\r\n","/* eslint-disable camelcase */\r\nimport React, { Component, forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport { Notification } from 'element-react';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { withStyles , createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport styles from '../../styles/TeamView.css';\r\nimport TeamAPI from '../../api/TeamAPI';\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nclass Table extends Component {\r\n  state = {\r\n    data: [],\r\n    ownOrgsIds: []\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.theme = createMuiTheme({\r\n      overrides: {\r\n        MuiTablePagination: {\r\n          select: {\r\n            marginRight: '20px'\r\n          }\r\n        },\r\n        MuiToolbar: {\r\n          root: {\r\n            backgroundColor: 'white'\r\n          }\r\n        },\r\n        MuiTableCell: {\r\n          paddingCheckbox: {\r\n            width: 'auto',\r\n            padding: 'auto'\r\n          }\r\n        },\r\n        MuiButtonBase: {\r\n          root: {\r\n            fontSize: '16px'\r\n          }\r\n        },\r\n        MuiTableSortLabel: {\r\n          active: {\r\n            color: 'white'\r\n          }\r\n        }\r\n      },\r\n      palette: {\r\n        primary: {\r\n          main: '#4caf50'\r\n        },\r\n        secondary: {\r\n          main: '#ff9100'\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    TeamAPI.getMembers(this.props.team.team.id).then(members => {\r\n      this.setState({\r\n        data: members.map(member => {\r\n          return {\r\n            username: member.username,\r\n            isTeamLeader:\r\n              member.teams.filter(\r\n                team => team.team === this.props.team.team.id\r\n              )[0].level === 'LEADER'\r\n          };\r\n        })\r\n      });\r\n    });\r\n    this.setState({\r\n      ownOrgsIds: this.props.user.organizations.filter(o => o.isOwned === true).map(o => o.id)\r\n    })\r\n  }\r\n\r\n  handleUpdateRole = (e, username) => {\r\n    if (username === this.props.user.username) {\r\n      Notification.error({\r\n        title: 'Error',\r\n        message: \"You can't change your own rights\"\r\n      });\r\n    } else {\r\n      const checked = e.target.checked;\r\n      TeamAPI.updateMember(\r\n        this.props.team.team.id,\r\n        username,\r\n        checked ? 'LEADER' : 'MEMBER'\r\n      ).then(() => {\r\n        this.setState({\r\n          data: this.state.data.map(member => {\r\n            if (member.username === username) {\r\n              return {\r\n                username,\r\n                isTeamLeader: checked\r\n              };\r\n            }\r\n            return member;\r\n          })\r\n        });\r\n        Notification.success({\r\n          title: 'Success',\r\n          message: 'Rights have been changed'\r\n        });\r\n      }).catch(() => {\r\n        Notification.error({\r\n          title: 'Error',\r\n          message: 'An error occurred while changing the rights'\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    TeamAPI.getMembers(props.team.team.id).then(members => {\r\n      this.setState({\r\n        data: members.map(member => {\r\n          return {\r\n            username: member.username,\r\n            isTeamLeader:\r\n              member.teams.filter(team => team.team === props.team.team.id)[0].level === 'LEADER'\r\n          };\r\n        })\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={this.theme}>\r\n        <MaterialTable\r\n          title=\"Team members\"\r\n          options={{\r\n            headerStyle: {\r\n              backgroundColor: '#324157',\r\n              color: '#FFF'\r\n            }\r\n          }}\r\n          icons={tableIcons}\r\n          columns={[\r\n            {\r\n              title: 'User e-mail',\r\n              field: 'username',\r\n              render: rowData => <p style={{ width: '16rem' }}>{rowData.username}</p>\r\n            },\r\n            {\r\n              title: 'Team Leader',\r\n              field: 'isTeamLeader',\r\n              editable: 'onUpdate',\r\n              render: rowData => {\r\n                return (\r\n                  rowData && (\r\n                    <Checkbox\r\n                      checked={rowData.isTeamLeader}\r\n                      onChange={e => this.handleUpdateRole(e, rowData.username)}\r\n                      disabled={\r\n                        this.props.team.level === 'MEMBER'\r\n                          && !this.state.ownOrgsIds.includes(this.props.team.team.organization)\r\n                          || rowData.username === this.props.user.username\r\n                      }\r\n                      style={{ float: \"right\" }}\r\n                    />\r\n                  )\r\n                );\r\n              }\r\n            }\r\n          ]}\r\n          data={this.state.data}\r\n          editable={{\r\n            onRowAdd: newData =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  TeamAPI.addMember(\r\n                    this.props.team.team.id,\r\n                    newData.username,\r\n                    newData.isTeamLeader ? 'LEADER' : 'MEMBER'\r\n                  ).then(() => {\r\n                      const data = this.state.data;\r\n                      data.push(newData);\r\n                      this.setState({ data }, () => resolve());\r\n                      Notification.success({\r\n                        title: 'Success',\r\n                        message: 'User successfully added to the team'\r\n                      });\r\n                    }).catch(err => {\r\n                      if (err.response.status === 403) {\r\n                        Notification.error({\r\n                          title: 'Error',\r\n                          message: 'Only team leaders can add a member to your team.'\r\n                        });\r\n                      } else {\r\n                        Notification.error({\r\n                          title: 'Error',\r\n                          message: err.response.data.errorMessage || 'An error occurred while adding the user to the team'\r\n                        });\r\n                      }\r\n                    });\r\n                  resolve();\r\n                }, 1000);\r\n              }),\r\n            onRowDelete: oldData =>\r\n              new Promise((resolve) => {\r\n                setTimeout(() => {\r\n                  TeamAPI.deleteMember(\r\n                    this.props.team.team.id,\r\n                    oldData.username\r\n                  )\r\n                    .then(() => {\r\n                      const data = this.state.data;\r\n                      const index = data.indexOf(oldData);\r\n                      data.splice(index, 1);\r\n                      this.setState({ data }, () => resolve());\r\n                      Notification.success({\r\n                        title: 'Success',\r\n                        message: 'User successfully removed from the team'\r\n                      });\r\n                    })\r\n                    .catch(() => {\r\n                      Notification.error({\r\n                        title: 'Error',\r\n                        message:\r\n                          'An error occurred while deleting the user from the team'\r\n                      });\r\n                    });\r\n                  resolve();\r\n                }, 1000);\r\n              })\r\n          }}\r\n        />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Table);\r\n","/* eslint-disable import/no-duplicates */\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  InputBase,\n  Card,\n} from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport Table from '../teams/Table';\nimport styles from '../../styles/TeamView.css';\nimport { UserContext } from '../../contexts/UserContext';\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    width: '300px',\n    height: '42px',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto',\n    margin: '20px auto',\n    display: 'flex'\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: '400px',\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    table: {\n      minWidth: 700\n    }\n  }\n}))(InputBase);\n\nclass TeamView extends Component {\n  static contextType = UserContext;\n\n  constructor(props) {\n    super(props);\n    this.theme = createMuiTheme({\n      overrides: {\n        MuiToolbar: {\n          root: {\n            backgroundColor: 'white'\n          }\n        }\n      }\n    });\n  }\n\n  state = {\n    team: null,\n  };\n\n  componentDidMount() {\n    const { teams: allTeams } = this.context;\n    this.setState({\n      team: allTeams.filter(t => t.team.name !== 'Personal')[0]\n    });\n  }\n\n  selectTeam = event => {\n    this.setState({ team: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { team } = this.state;\n    const { user, teams: allTeams } = this.context;\n\n    const teams = allTeams.filter(t => t.team.name !== 'Personal');\n\n    return (\n      <div className={classes.bodyContainer} style={{ display: 'flex' }}>\n        <Card style={{ margin: 'auto' }}>\n          <div\n            style={{\n              width: 'fit-content',\n              margin: 'auto',\n              paddingTop: '30px',\n              fontSize: '35px',\n              userSelect: 'none'\n            }}\n          >\n            Teams\n            <span\n              style={{\n                width: '73px',\n                height: '4px',\n                margin: '8px auto 0',\n                display: 'block',\n                backgroundColor: '#f5a623'\n              }}\n            />\n          </div>\n          <div style={{ padding: '30px', margin: 'auto' }}>\n            <div style={{ margin: 'auto', width: 'fit-content' }}>\n              <FormControl className={classes.margin}>\n                <Select\n                  className={classes.selectEmpty}\n                  value={team || {}}\n                  onChange={e => this.selectTeam(e)}\n                  input={\n                    <BootstrapInput\n                      name=\"nameSelected\"\n                      id=\"age-customized-select\"\n                    />\n                  }\n                >\n                  {teams.map(t => {\n                    return (\n                      <MenuItem key={t.team.id} value={t}>\n                        {t.team.name}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            </div>\n\n            {team && <Table team={team} user={user} />}\n          </div>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(TeamView);\n"],"sourceRoot":""}