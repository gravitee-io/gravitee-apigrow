{"version":3,"sources":["Components/mindmap/Link.js","Components/mindmap/Node.js","Components/mindmap/ContextMenu.js","Components/mindmap/Mindmap.js","Components/mindmap/Animated.js","Components/mindmap/Tree.js","Components/mindmap/LoaderIndicator.js","styles/LivePreview.css.js","Components/mindmap/LivePreview.js","api/ModelAPI.js","api/SwaggerAPI.js","helpers/tree_helper.js","styles/MindmapView.css.js"],"names":["Link","x1","y1","x2","y2","d","this","props","colorScheme","red","green","blue","color","branchColor","style","stroke","pathProps","isDottedLine","PureComponent","Node","plusSignHandler","event","stopPropagation","addNewChildNode","nodeKey","mainNodeLeftPlusSignHandler","onDragStart","name","onDragStopRight","onDragStop","onDragStopLeft","onDragStopAbove","onDragStopBelow","nodeTextLength","length","handleLeftClick","onNodeSelect","node","data","handleRightClick","e","openContextMenu","parent","className","width","height","y","currentNode","keyProp","x","textAnchor","dy","textDecoration","label","type","isArray","isSubPath","direction","textProps","fontWeight","abstract","r","isDraggingMoving","cy","cx","onMouseUp","leftPlusSign","onClick","gProps","transform","onContextMenu","onMouseDown","createNode","Component","ContextMenu","id","data-action","insert","open","copy","cut","paste","delete","Mindmap","openNodeContextMenu","preventDefault","nodeContext","setState","showContext","contextContainerStyle","display","top","clientY","left","clientX","closeContextMenu","onWheelScroll","zoom","state","deltaY","nodeName","isPaning","isDragging","draggedNodeKey","moveNode","onPanStart","startX","changedTouches","startY","onPanMove","panX","panY","onPanEnd","keydown","onKeyPress","prevProps","isFocus","mindmap","focus","tabIndex","onFocus","ref","viewBox","minX","minY","maxX","nodeWidth","maxY","onMouseMove","onMouseLeave","onWheel","pointerEvents","links","map","link","target","charCodeAt","notImplemented","key","source","nodes","filter","n","labelProp","Width","Animated","animated","initialX","initialY","l","animate","initialState","newState","addedNodes","n1","every","n2","areNodesSame","base","old","getClosestAncestor","new","changedNodes","some","find","removedNodes","addedLinks","l1","l2","areLinksSame","changedLinks","removedLinks","concat","stateWithNode","stateWithoutNode","oldParent","newParent","getChildren","c","nextProps","clearInterval","animation","counter","animationContext","getAnimationContext","setInterval","steps","calculateNewState","duration","a","b","interval","calculateNodePosition","calculateLinkPosition","start","end","calculateNewValue","easing","defaultProps","easeQuadOut","children","margins","bottom","right","Tree","previousStates","toCopyNodeKey","toCutNodeKey","fullScreen","swaggerHtml","keyHandler","which","f2Key","downKeyHandler","upKeyHandler","leftKeyHandler","rightKeyHandler","ctrlKey","boldHandler","copyHandler","cutHandler","pasteHandler","metaKey","onUndo","enterKeyHandler","insertKeyHandler","deleteKeyHandler","onLetterDown","destinationNodeKey","isAncestorOf","allData","cloneTree","nodeWhereToAdd","searchTreeByKey","nodeToDelete","parentNode","splice","findIndex","v","newNode","push","onTreeUpdate","dataUpdated","destIndex","getTreeDepthAndCardinality","depth","cardinality","maxDepth","forEach","getTreeTextWidth","textWidth","maxLength","lengths","Math","max","propagateDirection","dir","propagateShiftLeft","horizontalShift","nodeShift","propagateShiftRight","nodePlacementAdaptation","treeMaxLength","uncle","child","selectedNodeKey","openReferenceHandler","ModelAPI","getModel","referenceId","then","populatedModel","freezeTag","history","pathname","modelId","model","nodeToCopy","Object","keys","_","isString","indexOf","replace","onToolsMenuChange","indexWhereToAdd","newNodeKey","uniqid","example","description","queryParams","queryable","paginable","patchable","calculated","selectedNode","indexWhereToGo","goToParent","goToFirstChild","contentHeight","ld","contentWidth","leftData","clone","rootLeft","tree","size","hierarchy","nodesLeft","descendants","linksLeft","rightData","rd","rootRight","nodesRight","linksRight","dh","nl","ll","shift","centerX","centerY","onSaveTree","saveTree","withStyles","loaderContainer","maxWidth","backgroundColor","position","zIndex","swaggerSpinner","margin","promiseInProgress","usePromiseTracker","useState","promise","setPromise","classes","setTimeout","timeout","styles","spinner","hideIcon","LivePreview","swagger","onPreviewClick","IconButton","spec","docExpansion","showExtensions","teamId","params","execute","fileType","hasExited","tags","organizationId","rules","ruleId","rule","BaseAPI","SwaggerAPI","jsonstring","startnode","stack","pop","ofNodeKey","root","ofNode","parentNodeKey","generateId","verbs","newTree","swaggerName","parentId","updateSubNodes","parentNodeToUpdate","changeFunction","updateParentNodes","childNode","changeFunctionParam","updateTree","nodeToUpdate","xDescription","tmpNode","svgContainer","flexGrow","flexFlow","treeContainer","previewButton","marginLeft","sideBarContainer","editButton","borderRadius","toggleContainer","tabButton","optionMenu","transparentFilter","headbandFrozenVersion","padding","exportMenu","editIcon","modalContainer","border","textAlign","formControl","minWidth","buttonSaveTeam","customHandle","cursor","background","overflow","alignItems","customResizeBorder","alignContent","justifyContent","customFrozenMindmapZoom","showIcon","marginTop","marginRight","showIconFrozenTree","showIconEdit"],"mappings":"mQAkBqBA,E,iLAEjB,IAPcC,EAAIC,EAAIC,EAAIC,EAOpBC,GAPQJ,EAQZK,KAAKC,MAAMN,GARKC,EAShBI,KAAKC,MAAML,GATSC,EAUpBG,KAAKC,MAAMJ,GAVaC,EAWxBE,KAAKC,MAAMH,GAVT,IAAN,OAAWF,EAAX,YAAiBD,EAAjB,aAAwBC,EAAKE,GAAM,EAAnC,YAAwCH,EAAxC,aAA+CC,EAAKE,GAClD,EADF,YACOD,EADP,YACaC,EADb,YACmBD,IAYXK,EAAuC,GAAzBF,KAAKC,MAAMC,YACzBC,EAAM,IAAMD,EAAc,EAC1BE,EAAQ,IAAMF,EACdG,EAAO,GAAKH,EACZI,EAAQN,KAAKC,MAAMM,aAAX,cAAiCJ,EAAjC,aAAyCC,EAAzC,aAAmDC,EAAnD,KACd,OACE,wCACEG,MAAO,CAAEC,OAAQH,IACbN,KAAKC,MAAMS,UACVV,KAAKC,MAAMU,cAAgB,CAAE,mBAAoB,QAHxD,CAIEZ,EAAGA,S,GAnBuBa,iBCPbC,E,2MACnBC,gBAAkB,SAAAC,GAGhB,OAFAA,EAAMC,kBACN,EAAKf,MAAMgB,gBAAgB,EAAKhB,MAAMiB,SAC/BH,G,EAGTI,4BAA8B,SAAAJ,GAI5B,OAFAA,EAAMC,kBACN,EAAKf,MAAMgB,gBAAgB,EAAKhB,MAAMiB,QAAS,QACxCH,G,EAGTK,YAAc,SAAAL,GAGZ,OAFAA,EAAMC,kBACN,EAAKf,MAAMmB,YAAY,EAAKnB,MAAMoB,KAAM,EAAKpB,MAAMiB,SAC5CH,G,EAGTO,gBAAkB,SAAAP,GAGhB,OAFAA,EAAMC,kBACN,EAAKf,MAAMsB,WAAW,EAAKtB,MAAMiB,QAAS,SACnCH,G,EAGTS,eAAiB,SAAAT,GAGf,OAFAA,EAAMC,kBACN,EAAKf,MAAMsB,WAAW,EAAKtB,MAAMiB,QAAS,QACnCH,G,EAGTU,gBAAkB,SAAAV,GAGhB,OAFAA,EAAMC,kBACN,EAAKf,MAAMsB,WAAW,EAAKtB,MAAMiB,QAAS,SACnCH,G,EAGTW,gBAAkB,SAAAX,GAGhB,OAFAA,EAAMC,kBACN,EAAKf,MAAMsB,WAAW,EAAKtB,MAAMiB,QAAS,SACnCH,G,EAGTY,eAAiB,WACf,OAAgC,EAAzB,EAAK1B,MAAMoB,KAAKO,Q,EAGzBC,gBAAkB,WAChB,EAAK5B,MAAM6B,aAAa,EAAK7B,MAAM8B,KAAKC,O,EAG1CC,iBAAmB,SAAAC,GACjB,EAAKjC,MAAM6B,aAAa,EAAK7B,MAAM8B,KAAKC,MACxC,EAAK/B,MAAMkC,gBAAgBD,I,4EAI3B,IAAKlC,KAAKC,MAAMmC,OAEd,OACE,yBACEC,UAAU,WACVC,MAAOtC,KAAK2B,iBAAmB,EAC/BY,OAAO,KACPC,EAAE,OAEF,0BACEH,UACErC,KAAKC,MAAMwC,YAAYvB,UAAYlB,KAAKC,MAAMD,KAAKC,MAAMyC,SACrD,gBACA,YAENJ,MAAOtC,KAAK2B,iBAAmB,EAC/BY,OAAQ,KAEV,0BACEI,EAAE,MACFH,EAAE,MACFI,WAAW,SACXC,GAAG,OACHC,eAAe,YACfT,UAAU,QANZ,IAQIrC,KAAKC,MAAMoB,OAKrB,IAAM0B,GACiB,cAApB/C,KAAKC,MAAM+C,MAAwBhD,KAAKC,MAAMgD,QAAU,IAAM,KAC1C,cAApBjD,KAAKC,MAAM+C,KAAuB,IAAM,MACf,IAAzBhD,KAAKC,MAAMiD,UAAqB,IAAM,KAClB,UAApBlD,KAAKC,MAAM+C,KAAmB,IAAM,IACrChD,KAAKC,MAAMoB,MACU,UAApBrB,KAAKC,MAAM+C,KAAmB,IAAM,KAChB,cAApBhD,KAAKC,MAAM+C,MAAwBhD,KAAKC,MAAMgD,QAAU,IAAM,IACjE,OACE,2BACE,0BACEZ,UAC4B,IAA1BrC,KAAK2B,iBAAyB,aAAe,eAE/CW,MAAO,GACPC,OAAQ,GACRC,EAAE,MACFG,EAA4B,SAAzB3C,KAAKC,MAAMkD,WAAwB,GAAK,IAE7C,0BACEd,UACErC,KAAKC,MAAMwC,YAAYvB,UAAYlB,KAAKC,MAAMD,KAAKC,MAAMyC,SACrD,gBACA,kBAENJ,MAAOtC,KAAK2B,iBACZY,OAAQ,GACRC,EAAE,MACFG,EAA4B,SAAzB3C,KAAKC,MAAMkD,WAAwBnD,KAAK2B,iBAAmB,IAEhE,wCACEiB,WAAqC,UAAzB5C,KAAKC,MAAMkD,UAAwB,QAAU,OACrDnD,KAAKC,MAAMmD,UAFjB,CAGEf,UAAU,OACVS,gBAAyC,IAAzB9C,KAAKC,MAAMiD,UAAqB,YAAc,GAC9DG,YAAoC,IAAxBrD,KAAKC,MAAMqD,SAAoB,OAAS,KAEnDP,GAEH,4BACEQ,EAAE,KACFlB,UAAWrC,KAAKC,MAAMuD,iBAAmB,SAAW,WACpDC,GAAG,MACHC,GAC2B,SAAzB1D,KAAKC,MAAMkD,WACNnD,KAAK2B,iBAAmB,EACzB3B,KAAK2B,iBAAmB,EAE9BgC,UAAW3D,KAAKyB,kBAElB,4BACE8B,EAAE,KACFlB,UAAWrC,KAAKC,MAAMuD,iBAAmB,SAAW,WACpDC,GAAG,IACHC,GAC2B,SAAzB1D,KAAKC,MAAMkD,WACNnD,KAAK2B,iBAAmB,EACzB3B,KAAK2B,iBAAmB,EAE9BgC,UAAW3D,KAAK0B,qB,+BAMd,IACJkC,EADG,OAaP,OAX0B,OAAtB5D,KAAKC,MAAMmC,SACbwB,EACE,uBAAGC,QAAS7D,KAAKmB,6BACf,0BAAMkB,UAAU,WAAWC,MAAM,KAAKC,OAAO,KAAKC,EAAE,IAAIG,EAAE,OAC1D,0BAAMN,UAAU,WAAWG,EAAE,KAAKG,EAAE,MAApC,OAQJ,uCACM3C,KAAKC,MAAM6D,OADjB,CAEEC,UAAS,oBAAe/D,KAAKC,MAAMuC,EAA1B,aAAgCxC,KAAKC,MAAM0C,EAAI,EAA/C,KACTqB,cAAe,SAAA9B,GAAC,OAAI,EAAKD,iBAAiBC,IAC1C+B,YAAmC,OAAtBjE,KAAKC,MAAMmC,OAAkBpC,KAAKoB,YAAc,OAE7D,uBAAGiB,UAAU,WAAWwB,QAAS7D,KAAK6B,iBACnC7B,KAAKkE,aACN,4BACEX,EAAE,KACFlB,WACErC,KAAKC,MAAMuD,kBACe,SAAzBxD,KAAKC,MAAMkD,WAA8C,OAAtBnD,KAAKC,MAAMmC,OAE3C,WADA,SAGNqB,GAAG,KACHC,IACG,IACyB,SAAzB1D,KAAKC,MAAMkD,UAAuBnD,KAAK2B,iBAAmB,GAE7DgC,UAAW3D,KAAKwB,iBAElB,4BACE+B,EAAE,KACFlB,UACErC,KAAKC,MAAMuD,kBAA6C,UAAzBxD,KAAKC,MAAMkD,UACtC,SACA,WAENM,GAAG,KACHC,IAC4B,UAAzB1D,KAAKC,MAAMkD,UAAwBnD,KAAK2B,iBAAmB,GAC5D,GAEFgC,UAAW3D,KAAKsB,kBAEjBsC,EACoB,cAApB5D,KAAKC,MAAM+C,MACV,uBAAGa,QAAS7D,KAAKc,iBACf,0BACEuB,UACErC,KAAKC,MAAMuD,iBAAmB,oBAAsB,WAEtDlB,MAAM,KACNC,OAAO,KACPC,EAAE,IACFG,EAC2B,UAAzB3C,KAAKC,MAAMkD,UACPnD,KAAK2B,kBACJ,EAAI3B,KAAK2B,mBAGlB,0BACEU,UACErC,KAAKC,MAAMuD,iBAAmB,oBAAsB,WAEtDhB,EAAE,KACFG,EAC2B,UAAzB3C,KAAKC,MAAMkD,UACP,EAAInD,KAAK2B,kBACR,EAAI3B,KAAK2B,kBARlB,Y,GA7NoBwC,aCPbC,E,iLAEjB,OACE,wBAAI/B,UAAU,YAAYgC,GAAG,kBACO,cAAhCrE,KAAKC,MAAMwC,YAAYO,MACvB,wBAAIsB,cAAY,WAAWT,QAAS7D,KAAKC,MAAMsE,QAA/C,cAIA,wBAAID,cAAY,OAAOT,QAAS7D,KAAKC,MAAMuE,MAA3C,QAIF,wBAAIF,cAAY,OAAOT,QAAS7D,KAAKC,MAAMwE,MAA3C,QAGA,wBAAIH,cAAY,MAAMT,QAAS7D,KAAKC,MAAMyE,KAA1C,OAGA,wBAAIJ,cAAY,QAAQT,QAAS7D,KAAKC,MAAM0E,OAA5C,SAGA,wBAAIL,cAAY,SAAST,QAAS7D,KAAKC,MAAM2E,QAA7C,e,GAtBiChE,iBCkBnCiE,E,YACJ,WAAY5E,GAAQ,IAAD,8BACjB,4CAAMA,KAgCR6E,oBAAsB,SAAA5C,GACpBA,EAAE6C,iBACF,EAAKC,aAAc,EACnB,EAAKC,SAAS,CACZC,aAAa,EACbC,sBAAuB,CACrBC,QAAS,QACTC,IAAI,GAAD,OAAKnD,EAAEoD,QAAP,MACHC,KAAK,GAAD,OAAKrD,EAAEsD,QAAP,UAzCS,EA8CnBC,iBAAmB,WACjB,EAAKR,SAAS,CACZC,aAAa,KAhDE,EAoDnBQ,cAAgB,SAAAxD,GACd,IAAIyD,EAAO,EAAKC,MAAMD,KAClBzD,EAAE2D,OAAS,GACbF,GAAQ,KACG,IAAGA,EAAO,IAErBA,GAAQ,KACG,KAAKA,EAAO,IAEzB,EAAKV,SAAS,CAAEU,UA7DC,EAgEnBvE,YAAc,SAAC0E,EAAU5E,GACvB,EAAK+D,SAAS,CACZc,UAAU,EACVC,YAAY,EACZxC,kBAAkB,EAClByC,eAAgB/E,KArED,EAyEnBK,WAAa,SAACL,EAASiC,GACrB,EAAK8B,SAAS,CACZc,UAAU,EACVC,YAAY,EACZxC,kBAAkB,IAEpB,EAAKvD,MAAMiG,SAAS,EAAKN,MAAMK,eAAgB/E,EAASiC,IA/EvC,EAkFnBgD,WAAa,SAAAjE,GACX,IAAMkE,EACiB,qBAAdlE,EAAEsD,QACLtD,EAAEmE,eAAe,GAAGb,QACpBtD,EAAEsD,QACFc,EACiB,qBAAdpE,EAAEoD,QACLpD,EAAEmE,eAAe,GAAGf,QACpBpD,EAAEoD,QACR,EAAKL,SAAS,CAAEc,UAAU,EAAMC,YAAY,EAAOI,SAAQE,YA3F1C,EA8FnBC,UAAY,SAAArE,GACV,GAAI,EAAK0D,MAAMI,WACb,EAAKf,SAAS,CAAEzB,kBAAkB,SAIpC,GAAK,EAAKoC,MAAMG,SAAhB,CAGA,IAAMpD,EACiB,qBAAdT,EAAEsD,QACLtD,EAAEmE,eAAe,GAAGb,QACpBtD,EAAEsD,QACFhD,EACiB,qBAAdN,EAAEoD,QACLpD,EAAEmE,eAAe,GAAGf,QACpBpD,EAAEoD,QAER,EAAKL,SAAS,CACZuB,KAAM,EAAKZ,MAAMY,KAAO7D,EAAI,EAAKiD,MAAMQ,OACvCK,KAAM,EAAKb,MAAMa,KAAOjE,EAAI,EAAKoD,MAAMU,OACvCF,OAAQzD,EACR2D,OAAQ9D,MApHO,EAwHnBkE,SAAW,WACT,EAAKzB,SAAS,CACZc,UAAU,EACVC,YAAY,EACZxC,kBAAkB,KAzHpB,EAAKoC,MAAQ,CACXY,KAAM,EACNC,KAAM,EACNd,KAAM,GACNI,UAAU,EACVC,YAAY,EACZxC,kBAAkB,EAClB0B,aAAa,EACbC,sBAAuB,IAGzB,EAAKH,aAAc,EAdF,E,iGAiB4B,IAAZ2B,EAAW,EAAXA,QAC7BA,EAAQ5F,OACVf,KAAKC,MAAM2G,WAAW,CAAED,c,yCAITE,GAEfA,EAAUC,UAAY9G,KAAKC,MAAM6G,SACjC9G,KAAKC,MAAM6G,SACX9G,KAAK+G,SAEL/G,KAAK+G,QAAQC,U,+BAmGP,IAAD,OACP,OACE,yBACEC,SAAS,IACT5C,GAAG,UACHR,QAAS7D,KAAKyF,iBACdyB,QAAS,kBAAM,EAAKjH,MAAMiH,WAC1BC,IAAK,SAAAA,GACH,EAAKJ,QAAUI,IAGjB,yBACE9E,UAAU,cACVgC,GAAG,oBACH7D,MAAOR,KAAK4F,MAAMT,uBAEjBnF,KAAK4F,MAAMV,aAAe,kBAAC,EAAgBlF,KAAKC,QAEnD,yBACEmH,QAAO,UAAKpH,KAAKC,MAAMoH,KAAhB,YAAwBrH,KAAKC,MAAMqH,KAAnC,YAA2CtH,KAAKC,MAAMsH,KAC3DvH,KAAKC,MAAMoH,KACXrH,KAAKC,MAAMuH,UACX,EAHK,YAGAxH,KAAKC,MAAMwH,KAAOzH,KAAKC,MAAMqH,KAAO,GAC3CjF,UAAU,SACV4B,YAAajE,KAAKmG,WAClBuB,YAAa1H,KAAKuG,UAClBoB,aAAc3H,KAAK0G,SACnB/C,UAAW3D,KAAK0G,SAChBkB,QAAS5H,KAAK0F,cACdlF,MAAO,CAAEqH,cAAe,OAAQtF,OAAQ,SAExC,uBACEwB,UAAS,qBAAgB/D,KAAK4F,MAAMY,KAA3B,YAAmCxG,KAAK4F,MAAMa,KAA9C,mBAA6DzG,KAAK4F,MAAMD,KAAxE,OAER3F,KAAKC,MAAM6H,MAAMC,KAAI,SAAAC,GAAI,OACxB,kBAAC,EAAD,CACE9H,YAAa8H,EAAKC,OAAOjG,KAAKX,KAAK6G,WAAW,GAC9C3H,YAAayH,EAAKC,OAAOjG,KAAKzB,YAC9BI,aAAcqH,EAAKC,OAAOjG,KAAKmG,eAC/BC,IAAKJ,EAAKC,OAAOjG,KAAK,EAAK/B,MAAMyC,SACjCA,QAAS,EAAKzC,MAAMyC,QACpB2F,OAAQL,EAAKK,OACbJ,OAAQD,EAAKC,OACbtI,GAAIqI,EAAKK,OAAO1F,EAChB9C,GAAImI,EAAKC,OAAOtF,EAChB/C,GACEoI,EAAKK,OAAO7F,GACoB,UAA/BwF,EAAKK,OAAOrG,KAAKmB,WACa,UAA/B6E,EAAKC,OAAOjG,KAAKmB,UACkB,EAA/B6E,EAAKK,OAAOrG,KAAKX,KAAKO,OACtB,IAC4B,SAA/BoG,EAAKK,OAAOrG,KAAKmB,WACa,SAA/B6E,EAAKC,OAAOjG,KAAKmB,UACkB,EAA/B6E,EAAKK,OAAOrG,KAAKX,KAAKO,OACtB,GAEN9B,GACEkI,EAAKC,OACFzF,EAEL9B,UAAS,eACJ,EAAKT,MAAMS,UACXsH,EAAKC,OAAOjG,KAAKtB,gBAIzBV,KAAKC,MAAMqI,MACTC,QAAO,SAAAC,GAAC,OAAIA,EAAExG,KAAKd,WACnB6G,KAAI,SAAAhG,GAAI,OACP,uBAAGqG,IAAKrG,EAAKC,KAAKd,SAChB,kBAAC,EAAD,CACEX,YAAawB,EAAKC,KAAKzB,YACvBI,aAAcoB,EAAKC,KAAKmG,eACxBxI,GAAIoC,EAAKY,EACT9C,GAAIkC,EAAKY,EACT/C,GACEmC,EAAKS,GACoB,UAAxBT,EAAKC,KAAKmB,UACiB,EAAxBpB,EAAKC,KAAKX,KAAKO,OACf,GAEN9B,GACEiC,EAAKS,GACoB,SAAxBT,EAAKC,KAAKmB,UACiB,EAAxBpB,EAAKC,KAAKX,KAAKO,OACf,GAENlB,UAAS,eACJ,EAAKT,MAAMS,UACXqB,EAAKC,KAAKtB,aAGjB,kBAAC,EAAD,eACEqB,KAAMA,EACNU,YAAa,EAAKxC,MAAMwC,YACxBX,aAAc,EAAK7B,MAAM6B,aACzBb,gBAAiB,EAAKhB,MAAMgB,gBAC5BG,YAAa,EAAKA,YAClBG,WAAY,EAAKA,WACjBY,gBAAiB,EAAK2C,oBACtBtB,iBAAkB,EAAKoC,MAAMpC,iBAC7B4E,IAAKrG,EAAKC,KAAK,EAAK/B,MAAMyC,SAC1BA,QAAS,EAAKzC,MAAMyC,QACpB+F,UAAW,EAAKxI,MAAMwI,UACtB9F,EAAGZ,EAAKY,EACRH,EAAGT,EAAKS,EACRkG,MAAO,EAAKzI,MAAMuH,UAClB1D,OAAM,eACD,EAAK7D,MAAM6D,OACX/B,EAAKC,KAAK8B,QAEfV,UAAS,eACJ,EAAKnD,MAAMmD,UACXrB,EAAKC,KAAKoB,YAEXrB,EAAKC,kB,GApPPmC,aAgQPwC,cAAQ9B,GCpQF8D,E,YACnB,WAAY1I,GAAQ,IAAD,EAEjB,GAFiB,oBACjB,4CAAMA,IACFA,EAAM2I,SAAU,CAGlB,IAAMC,EAAW5I,EAAMqI,MAAM,GAAG3F,EAC1BmG,EAAW7I,EAAMqI,MAAM,GAAG9F,EAChC,EAAKoD,MAAQ,CACX0C,MAAOrI,EAAMqI,MAAMP,KAAI,SAAAS,GAAC,sBAChBA,EADgB,CACb7F,EAAGkG,EAAUrG,EAAGsG,OAE3BhB,MAAO7H,EAAM6H,MAAMC,KAAI,SAAAgB,GAAC,MAAK,CAC3BV,OAAO,eACFU,EAAEV,OADD,CAEJ1F,EAAGkG,EACHrG,EAAGsG,IAELb,OAAO,eACFc,EAAEd,OADD,CAEJtF,EAAGkG,EACHrG,EAAGsG,cAKT,EAAKlD,MAAQ,CACX0C,MAAOrI,EAAMqI,MACbR,MAAO7H,EAAM6H,OA3BA,S,iFAiCb9H,KAAKC,MAAM2I,UACb5I,KAAKgJ,QAAQhJ,KAAKC,S,0CAIFgJ,EAAcC,GAAW,IAAD,OAUpCC,EAAaD,EAASZ,MACzBC,QAAO,SAAAa,GAAE,OAAIH,EAAaX,MAAMe,OAAM,SAAAC,GAAE,OAAK,EAAKC,aAAaH,EAAIE,SACnEvB,KAAI,SAAAqB,GAAE,MAAK,CACVI,KAAMJ,EACNK,IAAK,EAAKC,mBAAmBN,EAAIF,EAAUD,GAC3CU,IAAKP,MAEHQ,EAAeV,EAASZ,MAC3BC,QAAO,SAAAa,GAAE,OAAIH,EAAaX,MAAMuB,MAAK,SAAAP,GAAE,OAAI,EAAKC,aAAaH,EAAIE,SACjEvB,KAAI,SAAAqB,GAAE,MAAK,CACVI,KAAMJ,EACNK,IAAKR,EAAaX,MAAMwB,MAAK,SAAAR,GAAE,OAAI,EAAKC,aAAaH,EAAIE,MACzDK,IAAKP,MAEHW,EAAed,EAAaX,MAC/BC,QAAO,SAAAa,GAAE,OAAIF,EAASZ,MAAMe,OAAM,SAAAC,GAAE,OAAK,EAAKC,aAAaH,EAAIE,SAC/DvB,KAAI,SAAAqB,GAAE,MAAK,CACVI,KAAMJ,EACNK,IAAKL,EACLO,IAAK,EAAKD,mBAAmBN,EAAIH,EAAcC,OAG7Cc,EAAad,EAASpB,MACzBS,QAAO,SAAA0B,GAAE,OAAIhB,EAAanB,MAAMuB,OAAM,SAAAa,GAAE,OAAK,EAAKC,aAAaF,EAAIC,SACnEnC,KAAI,SAAAkC,GAAE,MAAK,CACVT,KAAMS,EACNR,IAAK,EAAKC,mBAAmBO,EAAGhC,OAAQiB,EAAUD,GAClDU,IAAKM,MAEHG,EAAelB,EAASpB,MAC3BS,QAAO,SAAA0B,GAAE,OAAIhB,EAAanB,MAAM+B,MAAK,SAAAK,GAAE,OAAI,EAAKC,aAAaF,EAAIC,SACjEnC,KAAI,SAAAkC,GAAE,MAAK,CACVT,KAAMS,EACNR,IAAKR,EAAanB,MAAMgC,MAAK,SAAAI,GAAE,OAAI,EAAKC,aAAaF,EAAIC,MACzDP,IAAKM,MAEHI,EAAepB,EAAanB,MAC/BS,QAAO,SAAA0B,GAAE,OAAIf,EAASpB,MAAMuB,OAAM,SAAAa,GAAE,OAAK,EAAKC,aAAaF,EAAIC,SAC/DnC,KAAI,SAAAkC,GAAE,MAAK,CACVT,KAAMS,EACNR,IAAKQ,EACLN,IAAK,EAAKD,mBAAmBO,EAAGhC,OAAQgB,EAAcC,OAG1D,MAAO,CACLZ,MAAOsB,EAAaU,OAAOnB,GAAYmB,OAAOP,GAC9CjC,MAAOsC,EAAaE,OAAON,GAAYM,OAAOD,M,yCAI/BtI,EAAMwI,EAAeC,GAGtC,IAHyD,IAAD,OACpDC,EAAY1I,EAET0I,GAAW,CAEhB,IAAIC,EAAYF,EAAiBlC,MAAMwB,MAAK,SAAAtB,GAAC,OAC3C,EAAKe,aAAakB,EAAWjC,MAG/B,GAAIkC,EACF,OAAOA,EAGTD,EAAYF,EAAcjC,MAAMwB,MAAK,SAAAtB,GAAC,OACnC,EAAKvI,MAAM0K,YAAYnC,IAAM,IAAIqB,MAAK,SAAAe,GAAC,OACtC,EAAKrB,aAAakB,EAAWG,SAKnC,OAAOJ,EAAiBlC,MAAM,K,uDAGCuC,GAE7BA,EAAUvC,QAAUtI,KAAKC,MAAMqI,OAC/BuC,EAAU/C,QAAU9H,KAAKC,MAAM6H,QAK5B+C,EAAUjC,SAQf5I,KAAKgJ,QAAQ6B,GAPX7K,KAAKiF,SAAS,CACZqD,MAAOuC,EAAUvC,MACjBR,MAAO+C,EAAU/C,W,8BAQf7H,GAAQ,IAAD,OAGb6K,cAAc9K,KAAK+K,WAEnB,IAAIC,EAAU,EAGRC,EAAmBjL,KAAKkL,oBAAoBlL,KAAK4F,MAAO3F,GAE9DD,KAAK+K,UAAYI,aAAY,WAG3B,IAFAH,GAAW,KAEK/K,EAAMmL,MAOpB,OANAN,cAAc,EAAKC,WACnB,EAAKA,UAAY,UACjB,EAAK9F,SAAS,CACZqD,MAAOrI,EAAMqI,MACbR,MAAO7H,EAAM6H,QAKjB,EAAK7C,SACH,EAAKoG,kBAAkBJ,EAAkBD,EAAU/K,EAAMmL,UAE1DnL,EAAMqL,SAAWrL,EAAMmL,S,mCAGfG,EAAGC,GACd,OAAOD,EAAEvJ,KAAKhC,KAAKC,MAAMyC,WAAa8I,EAAExJ,KAAKhC,KAAKC,MAAMyC,W,mCAG7C6I,EAAGC,GACd,OACED,EAAElD,OAAOrG,KAAKhC,KAAKC,MAAMyC,WAAa8I,EAAEnD,OAAOrG,KAAKhC,KAAKC,MAAMyC,UAC/D6I,EAAEtD,OAAOjG,KAAKhC,KAAKC,MAAMyC,WAAa8I,EAAEvD,OAAOjG,KAAKhC,KAAKC,MAAMyC,W,wCAIjDuI,EAAkBQ,GAAW,IAAD,OAC5C,MAAO,CACLnD,MAAO2C,EAAiB3C,MAAMP,KAAI,SAAAS,GAAC,OACjC,EAAKkD,sBAAsBlD,EAAEgB,KAAMhB,EAAEiB,IAAKjB,EAAEmB,IAAK8B,MAEnD3D,MAAOmD,EAAiBnD,MAAMC,KAAI,SAAAgB,GAAC,OACjC,EAAK4C,sBAAsB5C,EAAES,KAAMT,EAAEU,IAAKV,EAAEY,IAAK8B,S,4CAKjC1J,EAAM6J,EAAOC,EAAKJ,GACtC,OAAO,eACF1J,EADL,CAEEY,EAAG3C,KAAK8L,kBAAkBF,EAAMjJ,EAAGkJ,EAAIlJ,EAAG8I,GAC1CjJ,EAAGxC,KAAK8L,kBAAkBF,EAAMpJ,EAAGqJ,EAAIrJ,EAAGiJ,O,4CAIxBzD,EAAM4D,EAAOC,EAAKJ,GACtC,MAAO,CACLpD,OAAO,eACFL,EAAKK,OADJ,CAEJ1F,EAAG3C,KAAK8L,kBACNF,EAAMvD,OAASuD,EAAMvD,OAAO1F,EAAIiJ,EAAMjJ,EACtCkJ,EAAIxD,OAASwD,EAAIxD,OAAO1F,EAAIkJ,EAAIlJ,EAChC8I,GAEFjJ,EAAGxC,KAAK8L,kBACNF,EAAMvD,OAASuD,EAAMvD,OAAO7F,EAAIoJ,EAAMpJ,EACtCqJ,EAAIxD,OAASwD,EAAIxD,OAAO7F,EAAIqJ,EAAIrJ,EAChCiJ,KAGJxD,OAAO,eACFD,EAAKC,OADJ,CAEJtF,EAAG3C,KAAK8L,kBACNF,EAAM3D,OAAS2D,EAAM3D,OAAOtF,EAAIiJ,EAAMjJ,EACtCkJ,EAAI5D,OAAS4D,EAAI5D,OAAOtF,EAAIkJ,EAAIlJ,EAChC8I,GAEFjJ,EAAGxC,KAAK8L,kBACNF,EAAM3D,OAAS2D,EAAM3D,OAAOzF,EAAIoJ,EAAMpJ,EACtCqJ,EAAI5D,OAAS4D,EAAI5D,OAAOzF,EAAIqJ,EAAIrJ,EAChCiJ,Q,wCAMUG,EAAOC,EAAKJ,GAC5B,OAAOG,GAASC,EAAMD,GAAS5L,KAAKC,MAAM8L,OAAON,K,+BAIjD,OAAO,kBAAC,EAAD,iBAAazL,KAAKC,MAAWD,KAAK4F,Y,GA5OPzB,a,oDCyBtC,IAAM6H,EAAe,CACnBpD,UAAU,EACV0C,SAAU,GACVS,OAAQE,IACRtB,YAAa,SAAAnC,GAAC,OAAIA,EAAE0D,UACpBd,MAAO,EACP1I,QAAS,UACT+F,UAAW,OACX0D,QAAS,CACPC,OAAQ,GACR7G,KAAM,IACN8G,MAAO,IACPhH,IAAK,IAEPmC,UAAW,IACX1D,OAAQ,CACNzB,UAAW,QAEb3B,UAAW,CACT2B,UAAW,QAEbe,UAAW,IAKQkJ,E,2MACnBC,eAAiB,G,EAEjB3G,MAAQ,CACN4G,cAAe,KACfC,aAAc,KACd1L,MAAO,GACP2L,YAAY,EACZC,YAAa,I,EAGfC,WAAa,YAAkB,IAAfjG,EAAc,EAAdA,QACVA,EAAQ5F,QACkB,MAAxB4F,EAAQ5F,MAAM8L,OAChB,EAAKC,QAEqB,KAAxBnG,EAAQ5F,MAAM8L,OAChB,EAAKE,iBAEqB,KAAxBpG,EAAQ5F,MAAM8L,OAChB,EAAKG,eAEqB,KAAxBrG,EAAQ5F,MAAM8L,OAChB,EAAKI,iBAEqB,KAAxBtG,EAAQ5F,MAAM8L,OAChB,EAAKK,kBAEqB,KAAxBvG,EAAQ5F,MAAM8L,OAAgBlG,EAAQ5F,MAAMoM,SAC9C,EAAKC,cAEqB,KAAxBzG,EAAQ5F,MAAM8L,OAAgBlG,EAAQ5F,MAAMoM,SAC9C,EAAKE,cAEqB,KAAxB1G,EAAQ5F,MAAM8L,OAAgBlG,EAAQ5F,MAAMoM,SAC9C,EAAKG,aAEqB,KAAxB3G,EAAQ5F,MAAM8L,OAAgBlG,EAAQ5F,MAAMoM,SAC9C,EAAKI,gBAGoB,KAAxB5G,EAAQ5F,MAAM8L,OAAgBlG,EAAQ5F,MAAMoM,SACpB,KAAxBxG,EAAQ5F,MAAM8L,OAAgBlG,EAAQ5F,MAAMyM,UAE7C,EAAKvN,MAAMwN,SAEe,KAAxB9G,EAAQ5F,MAAM8L,OAChB,EAAKa,kBAEqB,KAAxB/G,EAAQ5F,MAAM8L,OAChB,EAAKc,mBAEqB,KAAxBhH,EAAQ5F,MAAM8L,OAAwC,IAAxBlG,EAAQ5F,MAAM8L,OAC9C,EAAKe,mBAGLjH,EAAQ5F,MAAM8L,OAAS,IACvBlG,EAAQ5F,MAAM8L,OAAS,KACtBlG,EAAQ5F,MAAMoM,UACdxG,EAAQ5F,MAAMyM,SAEf,EAAKvN,MAAM4N,iB,EAKjB3H,SAAW,SAACD,EAAgB6H,EAAoB3K,GAC9C,GACE2K,GACA7H,GACAA,IAAmB6H,IAClBC,YAAa9H,EAAgB6H,EAAoB,EAAK7N,MAAM+B,MAC7D,CACA,IAAMgM,EAAUC,YAAU,EAAKhO,MAAM+B,KAAM,MAAM,GAC3CkM,EAAiBC,YAAgBL,EAAoBE,GACrDI,EAAeD,YAAgBlI,EAAgB+H,GACrD,GAAII,EAAahM,OAAQ,CACvB,IAAIiM,EAAaF,YAAgBC,EAAahM,OAAQ4L,GAKtD,GAJAK,EAAWnC,SAASoC,OAClBD,EAAWnC,SAASqC,WAAU,SAAAC,GAAC,OAAIA,EAAEtN,UAAY+E,KACjD,GAEgB,SAAd9C,GAAsC,UAAdA,EAAuB,CACjD,IAAIsL,EAAUR,YAAUG,EAAcF,EAAehN,SACrDuN,EAAQtL,UAAYA,EACpB+K,EAAehC,SAASwC,KAAKD,GAC7B,EAAKxO,MAAM0O,aAAa,CACtBC,YAAaZ,EACbvL,YAAagM,IAGjB,IAAkB,UAAdtL,GAAuC,UAAdA,IACvB+K,EAAe9L,OAAQ,CACzB,IAAIiM,EAAaF,YAAgBD,EAAe9L,OAAQ4L,GACpDa,EAAYR,EAAWnC,SAASqC,WAClC,SAAAC,GAAC,OAAIA,EAAEtN,UAAY4M,KAEjBW,EAAUR,YAAUG,EAAcF,EAAe9L,QACrDiM,EAAWnC,SAASoC,OACJ,UAAdnL,EAAwB0L,EAAYA,EAAY,EAChD,EACAJ,GAEFA,EAAQtL,UAAY+K,EAAe/K,UACnC,EAAKlD,MAAM0O,aAAa,CACtBC,YAAaZ,EACbvL,YAAagM,Q,EAQzBK,2BAA6B,SAAC9M,EAAM+M,GAClC,EAAKC,aAAe,EAChB,EAAKC,SAAWF,IAAO,EAAKE,SAAWF,GACd,IAAzB/M,EAAKkK,SAAStK,QAChBI,EAAKkK,SAASgD,SAAQ,SAAA1G,GAAC,OAAI,EAAKsG,2BAA2BtG,EAAGuG,EAAQ,O,EAG1EI,iBAAmB,SAACnN,EAAMoN,EAAWC,GACnC,GAA6B,IAAzBrN,EAAKkK,SAAStK,OAAc,CAC9B,IAAM0N,EAAUtN,EAAKkK,SAASnE,KAAI,SAAAS,GAAC,OACjC,EAAK2G,iBAAiB3G,EAAG4G,EAAY5G,EAAEnH,KAAKO,WAE9C,OAAO2N,KAAKC,IAAL,MAAAD,KAAI,YAAQD,IAGrB,OAAItN,EAAKX,MAAQgO,EAAYD,EAAYpN,EAAKX,KAAKO,OAC1CwN,EAAYpN,EAAKX,KAAKO,OAGF,IAAzBI,EAAKkK,SAAStK,OACT,EAGFyN,G,EAGTI,mBAAqB,SAAC1N,EAAM2N,GAC1B3N,EAAKoB,UAAYuM,EACjB3N,EAAKmK,SAASgD,SAAQ,SAAAtE,GACpB,EAAK6E,mBAAmB7E,EAAG8E,O,EAI/BC,mBAAqB,SAAC5N,EAAM6N,GAC1B,IAAIC,EAtJa,GAsJD9N,EAAKC,KAAKX,KAAKO,OACZ,IAAfG,EAAKgN,QAAac,EAAY,GAClC9N,EAAKS,GAAKoN,EACN7N,EAAKmK,UACPnK,EAAKmK,SAASgD,SAAQ,SAAAtE,GACpB,EAAK+E,mBAAmB/E,EAAGgF,EAAkBC,O,EAInDC,oBAAsB,SAAC/N,EAAM6N,GAC3B,IAAMC,EAhKW,GAgKC9N,EAAKC,KAAKX,KAAKO,OAC7BG,EAAKmK,UACPnK,EAAKmK,SAASgD,SAAQ,SAAAtE,GACpBA,EAAEpI,GAAKoN,EAAkBC,EACzB,EAAKC,oBAAoBlF,EAAGgF,EAAkBC,O,EAIpDE,wBAA0B,SAAChO,EAAMiO,GAC/B,GAAIjO,EAAKK,QAAUL,EAAKK,OAAOA,OAAQ,CACrC,IAAIiN,EAAY,EAChBtN,EAAKK,OAAOA,OAAO8J,SAASgD,SAAQ,SAAAe,GAC9BA,EAAMjO,KAAKX,KAAKO,OAASyN,IAC3BA,EAAYY,EAAMjO,KAAKX,KAAKO,WAGhCoO,GAAiBX,EACjBtN,EAAKS,GAGH,GAFCwN,EACCjO,EAAKK,OAAOJ,KAAKX,KAAKO,QAAU,EAAI,KAAQG,EAAKgN,MAAQ,KAU/D,OANIhN,EAAKmK,WACPnK,EAAKmK,SAAWnK,EAAKmK,SAASnE,KAAI,SAAAmI,GAChC,OAAO,EAAKH,wBAAwBG,EAAOF,OAIxCjO,G,EAGTd,gBAAkB,SAACC,EAASiC,GAAe,IAAD,EACAlC,YACtC,EAAKhB,MAAM+B,KACXd,EACAiC,GAHMnB,EADgC,EAChCA,KAAMmO,EAD0B,EAC1BA,gBAAiBpO,EADS,EACTA,KAK3BC,GAAQmO,GAAmBpO,GAC7B,EAAK9B,MAAM0O,aAAa,CACtBC,YAAa5M,EACbS,YAAaV,K,EAKnBqO,qBAAuB,WACrBC,IAASC,SAAS,EAAKrQ,MAAMwC,YAAY8N,aAAaC,MACpD,SAAAC,GACmC,MAA7BA,EAAeC,UACjB,EAAKzQ,MAAM0Q,QAAQjC,KAAK,CACtBkC,SAAU,QACVhL,MAAO,CACLiL,QAAS,EAAK5Q,MAAMwC,YAAY8N,eAIpC,EAAKtQ,MAAM0Q,QAAQjC,KAAK,CACtBkC,SAAU,eACVhL,MAAO,CACLkL,MAAOL,S,EAQnB9C,iBAAmB,WACmB,cAAhC,EAAK1N,MAAMwC,YAAYO,MACzB,EAAK/B,gBAAgB,EAAKhB,MAAMwC,YAAYvB,QAAS,O,EAIzD0M,iBAAmB,WACjB,GAAI,EAAK3N,MAAMwC,YAAYvB,QAAS,CAClC,IAAM8M,EAAUC,YAAU,EAAKhO,MAAM+B,KAAM,MAAM,GAC7CoM,EAAeD,YACjB,EAAKlO,MAAMwC,YAAYvB,QACvB8M,GAEF,GAAII,EAAahM,OAAQ,CACvB,IAAIiM,EAAaF,YAAgBC,EAAahM,OAAQ4L,GACtDK,EAAWnC,SAASoC,OAClBD,EAAWnC,SAASqC,WAClB,SAAAC,GAAC,OAAIA,EAAEtN,UAAY,EAAKjB,MAAMwC,YAAYvB,WAE5C,GAEF,EAAKjB,MAAM0O,aAAa,CACtBC,YAAaZ,EACbvL,YAAa4L,O,EAMrBhB,YAAc,WACR,EAAKpN,MAAMwC,YAAYvB,SACzB,EAAK+D,SAAS,CACZuH,cAAe,EAAKvM,MAAMwC,YAAYvB,QACtCuL,aAAc,Q,EAKpBa,WAAa,WACP,EAAKrN,MAAMwC,YAAYvB,SACzB,EAAK+D,SAAS,CACZuH,cAAe,KACfC,aAAc,EAAKxM,MAAMwC,YAAYvB,W,EAK3CqM,aAAe,WACb,IAAIS,EAAUC,YAAU,EAAKhO,MAAM+B,KAAM,MAAM,GAC/C,GAAI,EAAK/B,MAAMwC,YAAYvB,QAAS,CAClC,IAAIgN,EAAiBC,YACnB,EAAKlO,MAAMwC,YAAYvB,QACvB8M,GAIF,GACE,EAAKpI,MAAM6G,eACVsB,YACC,EAAKnI,MAAM6G,aACX,EAAKxM,MAAMwC,YAAYvB,QACvB,EAAKjB,MAAM+B,MAEb,CACA,IAAIoM,EAAeD,YAAgB,EAAKvI,MAAM6G,aAAcuB,GACxDS,EAAUR,YAAUG,EAAcF,EAAehN,SACjDmN,EAAaF,YAAgBC,EAAahM,OAAQ4L,GACtDK,EAAWnC,SAASoC,OAClBD,EAAWnC,SAASqC,WAClB,SAAAC,GAAC,OAAIA,EAAEtN,UAAY,EAAK0E,MAAM6G,gBAEhC,GAEFyB,EAAehC,SAASwC,KAAKD,GAC7B,EAAKxO,MAAM0O,aAAa,CACtBC,YAAaZ,EACbvL,YAAagM,IAKjB,GAAI,EAAK7I,MAAM4G,cAAe,CAC5B,IAAIuE,EAAa5C,YAAgB,EAAKvI,MAAM4G,cAAewB,GAC3D,GAAI+C,EAAW3O,OAAQ,CACrB,IAAIqM,EAAUR,YAAU8C,EAAY7C,EAAehN,SACnDgN,EAAehC,SAASwC,KAAKD,GAC7B,EAAKxO,MAAM0O,aAAa,CACtBC,YAAaZ,EACbvL,YAAagM,Q,4EAOV1M,GACXiP,OAAOC,KAAKlP,GAAMmN,SAAQ,SAAA9G,GACpBrG,EAAKqG,IAAQ8I,IAAEC,SAASpP,EAAKqG,KAASrG,EAAKqG,GAAKgJ,QAAQ,MAAQ,IAClErP,EAAKqG,GAAOrG,EAAKqG,GAAKiJ,QAAQ,IAAK,U,oCAMvCrR,KAAKC,MAAMqR,kBAAkB,CAC3BhO,UAAWtD,KAAKC,MAAMwC,YAAYa,a,wCAKpC,GAAItD,KAAKC,MAAMwC,YAAYvB,QAAS,CAClC,IAAM8M,EAAUC,YAAUjO,KAAKC,MAAM+B,KAAM,MAAM,GAC7CkM,EAAiBC,YACnBnO,KAAKC,MAAMwC,YAAYvB,QACvB8M,GAEF,GAAIE,EAAe9L,OAAQ,CACzB,IAAMiM,EAAaF,YAAgBD,EAAe9L,OAAQ4L,GACpDuD,EAAkBlD,EAAWnC,SAASkF,QAAQlD,GAC9CsD,EAAaC,MACbhD,EAAU,CACdpN,KAAM,GACNe,OAAQiM,EAAWnN,QACnBgL,SAAU,GACVhL,QAASsQ,EACTxO,KAAM,SACNuN,YAAa,GACbtN,SAAS,EACTyO,QAAS,GACTpO,UAAU,EACVqO,YAAa,GACbC,YAAa,GACbzO,UAAW+K,EAAe/K,UAC1B0O,WAAW,EACXC,WAAW,EACXC,WAAW,EACX5J,gBAAgB,EAChBjF,WAAW,EACX8O,YAAY,EACZzR,YAAa8N,EAAW9N,aAE1B8N,EAAWnC,SAASoC,OAAOiD,EAAkB,EAAG,EAAG9C,GACnDzO,KAAKC,MAAM0O,aAAa,CACtBC,YAAaZ,EACbvL,YAAagM,Q,qCAOnB,GAAIzO,KAAKC,MAAMwC,YAAYvB,QAAS,CAClC,IAAM8M,EAAUhO,KAAKC,MAAM+B,KACvBiQ,EAAe9D,YACjBnO,KAAKC,MAAMwC,YAAYvB,QACvB8M,GAEF,GAAIiE,EAAa7P,OAEf,IADA,IAAIiM,EAAaF,YAAgB8D,EAAa7P,OAAQ4L,GAEhDkE,EAAiB7D,EAAWnC,SAASkF,QAAQa,GAAgB,EACjEC,GAAkB,EAClBA,GAAkB,EAElB,GACE7D,EAAWnC,SAASgG,GAAgB/O,YACpC8O,EAAa9O,UACb,CACAnD,KAAKC,MAAM6B,aACTuM,EAAWnC,SAASgG,GACpBlE,GAEF,U,uCAQR,GAAIhO,KAAKC,MAAMwC,YAAYvB,QAAS,CAClC,IAAM8M,EAAUhO,KAAKC,MAAM+B,KACvBiQ,EAAe9D,YACjBnO,KAAKC,MAAMwC,YAAYvB,QACvB8M,GAEF,GAAIiE,EAAa7P,OAAQ,CACvB,IACI8P,EADA7D,EAAaF,YAAgB8D,EAAa7P,OAAQ4L,GAEtD,IACEkE,EAAiB7D,EAAWnC,SAASkF,QAAQa,GAAgB,EAC7DC,EAAiB7D,EAAWnC,SAAStK,OACrCsQ,GAAkB,EAElB,GACE7D,EAAWnC,SAASgG,GAAgB/O,YACpC8O,EAAa9O,UACb,CACAnD,KAAKC,MAAM6B,aACTuM,EAAWnC,SAASgG,GACpBlE,GAEF,W,uCAQR,GAAIhO,KAAKC,MAAMwC,YAAYvB,QAAS,CAClC,IAAM8M,EAAUhO,KAAKC,MAAM+B,KACvBiQ,EAAe9D,YACjBnO,KAAKC,MAAMwC,YAAYvB,QACvB8M,GAEF,GAAIiE,EAAa/Q,UAAYlB,KAAKC,MAAM+B,KAAKd,QAAS,CACpD,IAAIgR,EAAiBD,EAAa/F,SAASqC,WACzC,SAAA/F,GAAC,MAAoB,SAAhBA,EAAErF,cAEe,IAApB+O,GACFlS,KAAKC,MAAM6B,aACTmQ,EAAa/F,SAASgG,GACtBlE,OAGgC,UAA3BiE,EAAa9O,UACtBnD,KAAKmS,WAAWF,EAAcjE,GAE9BhO,KAAKoS,eAAeH,EAAcjE,M,wCAMtC,GAAIhO,KAAKC,MAAMwC,YAAYvB,QAAS,CAClC,IAAM8M,EAAUhO,KAAKC,MAAM+B,KACrBiQ,EAAe9D,YACnBnO,KAAKC,MAAMwC,YAAYvB,QACvB8M,GAE6B,SAA3BiE,EAAa9O,UACfnD,KAAKmS,WAAWF,EAAcjE,GAE9BhO,KAAKoS,eAAeH,EAAcjE,M,iCAK7BiE,EAAcjE,GACvB,GAAIiE,EAAa7P,OAAQ,CACvB,IAAMiM,EAAaF,YAAgB8D,EAAa7P,OAAQ4L,GACxDhO,KAAKC,MAAM6B,aAAauM,EAAYL,M,qCAIzBiE,EAAcjE,GAC3B,GAAIiE,EAAa/F,UAAY+F,EAAa/F,SAAStK,OAAS,EAAG,CAC7D,IAAMsQ,EAAiBD,EAAa/F,SAASqC,WAC3C,SAAA/F,GAAC,OAAIA,EAAErF,YAAc8O,EAAa9O,cAEZ,IAApB+O,GACFlS,KAAKC,MAAM6B,aAAamQ,EAAa/F,SAASgG,GAAiBlE,M,+BAK3D,IAAD,SACoDhO,KAAKC,MAAxD6G,EADD,EACCA,QAAShF,EADV,EACUA,aAAcoK,EADxB,EACwBA,SAAUlK,EADlC,EACkCA,KAAMmK,EADxC,EACwCA,QAkBzCkG,EACJ,IAngBe,IAofKrS,KAAKmP,iBACzB,CACEjD,SAAUlK,EAAKkK,SAAS3D,QAAO,SAAA+J,GAAE,MAAqB,SAAjBA,EAAGnP,cAE1C,EACA,KAEqBnD,KAAKmP,iBAC1B,CACEjD,SAAUlK,EAAKkK,SAAS3D,QAAO,SAAA+J,GAAE,MAAqB,UAAjBA,EAAGnP,cAE1C,EACA,MAKAgJ,EAAQ5G,KACR4G,EAAQE,MAGVrM,KAAKiP,SAAW,EAChBjP,KAAKgP,YAAc,EACnBhP,KAAK8O,2BAA2B9M,EAAM,GACtC,IAAMuQ,EACJ,IACC,IAAMvS,KAAKgP,YAAc,IAAOhP,KAAKiP,SAAW,GACjD9C,EAAQ9G,IACR8G,EAAQC,OAGVpK,EAAKkK,SAASgD,SAAQ,SAAAtE,GACpB,EAAK6E,mBAAmB7E,EAAGA,EAAEzH,cAG/B,IAAMqP,EAAWC,IAAMzQ,GACvBwQ,EAAStG,SAAWsG,EAAStG,SAAS3D,QAAO,SAAA+J,GAAE,MAAqB,SAAjBA,EAAGnP,aACtDnD,KAAKyP,mBAAmB+C,EAAU,QAElC,IAAIE,EAAWC,cAAOC,KAAK,CAACL,EAAcF,EAAgB,GAA3CM,CACbE,YAAUL,IAINM,GADNJ,EAAW1S,KAAK+P,wBAAwB2C,EAAU,IACvBK,cACrBC,EAAYN,EAAS5K,QAC3B9H,KAAK2P,mBAAmBmD,EAAU,GAAI,GAEtC,IAAMG,EAAYR,IAAMzQ,GACxBiR,EAAU/G,SAAW+G,EAAU/G,SAAS3D,QACtC,SAAA2K,GAAE,MAAqB,UAAjBA,EAAG/P,aAEXnD,KAAKyP,mBAAmBwD,EAAW,QAAS,GAE5C,IAAIE,EAAYR,cAAOC,KAAK,CAACL,EAAcF,EAAgB,GAA3CM,CACdE,YAAUI,IAING,GADND,EAAYnT,KAAK+P,wBAAwBoD,EAAW,IACvBJ,cACvBM,EAAaF,EAAUrL,QAC7B9H,KAAK8P,oBAAoBsD,EAAW,GAAI,GAGxC,IAAME,EAAKF,EAAW,GAAGzQ,EAAImQ,EAAU,GAAGnQ,EAC1CmQ,EAAU5D,SAAQ,SAAAqE,GAChBA,EAAG5Q,GAAK2Q,EACRC,EAAG/Q,GAAK+Q,EAAG/Q,KAIbwQ,EAAU9D,SAAQ,SAAAsE,GACZA,EAAGnL,OAAOrG,KAAKd,UAAY4R,EAAU,GAAG9Q,KAAKd,UAE/CsS,EAAGnL,OAAS+K,EAAW,IAErBI,EAAGvL,OAAOjG,KAAKd,UAAY4R,EAAU,GAAG9Q,KAAKd,UAC/CsS,EAAGvL,OAASmL,EAAW,OAG3BN,EAAUxE,OAAO,EAAG,GAGpB,IAAMhG,EAAQwK,EAAUxI,OAAO8I,GACzBtL,EAAQkL,EAAU1I,OAAO+I,GAG3BhM,EAAO+L,EAAW,GAAGzQ,EACrB4E,EAAO6L,EAAW,GAAGzQ,EACrB2E,EAAO8L,EAAW,GAAG5Q,EACrBiF,EAAO2L,EAAW,GAAG5Q,EACzB8F,EAAM4G,SAAQ,SAAA1G,GACRnB,EAAOmB,EAAE7F,IAAG0E,EAAOmB,EAAE7F,GACrB4E,EAAOiB,EAAE7F,IAAG4E,EAAOiB,EAAE7F,GACrB2E,EAAOkB,EAAEhG,IAAG8E,EAAOkB,EAAEhG,GACrBiF,EAAOe,EAAEhG,IAAGiF,EAAOe,EAAEhG,MAE3B,IAAMiR,GAASpM,EAAOE,GAAQ,EAQ9B,OAPAe,EAAM4G,SAAQ,SAAA1G,GACZA,EAAE7F,GAAK8Q,KAETlM,GAAQkM,EACRpM,GAAQoM,EAERnM,GAAQ,IAEN,kBAAC,EAAD,iBACMtH,KAAKC,MACLD,KAAK4F,MAFX,CAGE0B,KAAMD,EACNI,KAAMF,EACNF,KAAMC,EACNC,KAAME,EACNK,MAAOA,EACPQ,MAAOA,EACPoL,QAASpL,EAAM,GAAG9F,EAClBmR,QAASrL,EAAM,GAAG3F,EAClBqM,YAAahP,KAAKgP,YAClBxK,KAAM,kBAAM,EAAK4L,wBACjB7L,OAAQ,kBAAM,EAAKoJ,oBACnBlJ,KAAM,kBAAM,EAAK4I,eACjB3I,IAAK,kBAAM,EAAK4I,cAChB3I,MAAO,kBAAM,EAAK4I,gBAClB3I,OAAQ,kBAAM,EAAKgJ,oBACnB1H,SAAUlG,KAAKkG,SACfjF,gBAAiBjB,KAAKiB,gBACtB2S,WAAY5T,KAAK6T,SACjBjN,WAAY5G,KAAK4M,WACjB9K,aAAcA,EACdgF,QAASA,IAERoF,O,GArnByB/H,aA4nBlCmI,EAAKN,aAAeA,G,wLCxoBL8H,G,OAAAA,aAnDA,WACb,MAAO,CACLC,gBAAiB,CACfzR,MAAO,yBACP0R,SAAU,OACVzR,OAAQ,OACR6C,QAAS,OACT6O,gBAAiB,YACjBC,SAAU,QACVC,OAAQ,MAEVC,eAAgB,CACdC,OAAQ,WAuCCP,EAlCC,SAAA7T,GAAS,IAEfqU,EAAsBC,8BAAtBD,kBAFe,EAGOE,mBAAS,IAHhB,mBAGhBC,EAHgB,KAGPC,EAHO,KAIfC,EAAY1U,EAAZ0U,QAcR,OAZ0B,IAAtBL,GACFM,YAAW,WACTF,GAAW,KACV,IAGqB,IAAtBJ,GACFM,YAAW,WACTF,GAAW,KACV,KAIHD,GACE,yBAAKpS,UAAWsS,EAAQZ,iBACtB,kBAAC,IAAD,CACE1R,UAAWsS,EAAQP,eACnBpR,KAAK,WACL1C,MAAM,UACNiC,OAAQ,IACRD,MAAO,IACPuS,QAAS,WChCJC,EAlBA,WACb,MAAO,CACLC,QAAS,CACPb,SAAU,WACVG,OAAQ,OACR/R,MAAO,cACPC,OAAQ,eAEVyS,SAAU,CACR3P,IAAK,IACLE,KAAM,IACN2O,SAAU,WACVG,OAAQ,OACR/T,MAAO,aCJP2U,E,iLACM,IAAD,EAC0CjV,KAAKC,MAA9C0U,EADD,EACCA,QAASO,EADV,EACUA,QAAS7Q,EADnB,EACmBA,GAAI8Q,EADvB,EACuBA,eAC9B,OACE,yBAAK9Q,GAAIA,EAAIhC,UAAU,cACpB6S,GACC,oCACE,kBAAC,EAAD,CAAS7S,UAAWsS,EAAQI,UAC5B,kBAACK,EAAA,EAAD,CACE/Q,GAAG,oBACHR,QAASsR,EACT9S,UAAWsS,EAAQK,UAEnB,kBAAC,IAAD,OAGF,kBAAC,IAAD,CACEK,KAAMH,EACNI,aAAa,OACbC,eAAe,e,GAnBH3U,iBA4BXkT,gBAAWgB,EAAXhB,CAAmBmB,I,yJCnCb5E,E,2LACEmF,GACnB,IAAMC,EAASD,EAAS,CAAEC,OAAQ,CAAED,WAAa,GACjD,OAAOxV,KAAK0V,QAAQ,MAAO,sBAAuBD,K,gCAGnCA,GACf,OAAOzV,KAAK0V,QAAQ,MAAb,kBAAuC,CAAED,WAAU,K,4CAG/B5E,EAAS8E,GACpC,OAAO3V,KAAK0V,QAAQ,MAAb,iBAA8B7E,EAA9B,yBAAsD8E,M,kCAG5CH,EAAQ1E,GACzB,OAAO9Q,KAAK0V,QAAQ,OAAb,WAAiC,CACtC1T,KAAM,CAAE8O,QAAO0E,c,+BAIH3E,GACd,OAAO7Q,KAAK0V,QAAQ,MAAb,kBAA+B7E,M,gCAGvBA,EAASC,EAAO8E,GAC/B,OAAIA,EACK5V,KAAK0V,QAAQ,MAAb,kBAA+B7E,EAA/B,mBAAyD,CAAE7O,KAAM8O,IAEnE9Q,KAAK0V,QAAQ,MAAb,kBAA+B7E,GAAW,CAAE7O,KAAM8O,M,kCAGxCD,GACjB,OAAO7Q,KAAK0V,QAAQ,OAAb,kBAAgC7E,EAAhC,qB,kCAGUA,GACjB,OAAO7Q,KAAK0V,QAAQ,OAAb,kBAAgC7E,EAAhC,qB,qCAGaA,GACpB,OAAO7Q,KAAK0V,QAAQ,OAAb,kBAAgC7E,EAAhC,wB,kCAGUA,GACjB,OAAO7Q,KAAK0V,QAAQ,SAAb,kBAAkC7E,M,kCAGxBA,EAASxP,GAC1B,OAAOrB,KAAK0V,QAAQ,QAAb,kBAAiC7E,GAAW,CAAE7O,KAAM,CAAEX,Y,0CAGpCwP,GACzB,OAAO7Q,KAAK0V,QAAQ,OAAb,kBAAgC7E,EAAhC,gB,8CAGsBA,EAASgF,EAAMxU,EAAMyU,GAClD,OAAO9V,KAAK0V,QAAQ,QAAb,kBAAiC7E,GAAW,CACjD7O,KAAM,CAAE6T,OAAMxU,OAAMyU,sB,oCAIHjF,GACnB,OAAO7Q,KAAK0V,QAAQ,MAAb,kBAA+B7E,EAA/B,oB,oCAGYA,EAASkF,GAC5B,OAAO/V,KAAK0V,QACV,OADK,kBAEM7E,EAFN,+BAGL,CACE7O,KAAM+T,M,sCAKWlF,EAASkF,GAC9B,OAAO/V,KAAK0V,QAAQ,MAAb,kBAA+B7E,EAA/B,iBAAuD,CAC5D7O,KAAM+T,M,sCAIalF,EAASmF,EAAQC,GACtC,OAAOjW,KAAK0V,QAAQ,MAAb,kBAA+B7E,EAA/B,yBAAuDmF,GAAU,CACtEhU,KAAMiU,M,sCAIapF,EAASmF,GAC9B,OAAOhW,KAAK0V,QAAQ,SAAb,kBAAkC7E,EAAlC,yBAA0DmF,Q,SAxF/BE,I,+GCAjBC,E,sMACanU,GAC9B,OAAOhC,KAAK0V,QAAQ,OAAQ,2BAA4B,CACtD1T,KAAM,CAAEoU,WAAYpU,O,6CAIMA,GAC5B,OAAOhC,KAAK0V,QAAQ,OAAQ,wBAAyB,CACnD1T,W,qCAIkBA,GACpB,OAAOhC,KAAK0V,QAAQ,OAAQ,mBAAoB,CAAE1T,W,yCAG1BA,EAAM8T,GAC9B,OAAO9V,KAAK0V,QACV,OADK,8CAEkCI,GACvC,CAAE9T,a,SArBgCkU,I,qRCAjC,SAAS/H,EAAgB/F,EAAKiO,GAEnC,IADA,IAAMC,EAAQ,CAACD,GACRC,EAAM1U,QAAQ,CACnB,IAAMG,EAAOuU,EAAMC,MACnB,GAAIxU,EAAKb,UAAYkH,EAAK,OAAOrG,EACjCuU,EAAM5H,KAAN,MAAA4H,EAAK,YAASvU,EAAKmK,WAErB,OAAOoK,EAAMC,OAAS,KAGjB,SAASxI,EAAa7M,EAASsV,EAAWC,GAG/C,IAFA,IAAIC,EAASvI,EAAgBqI,EAAWC,GAEjCC,EAAOxV,UAAYA,GAAWwV,EAAOtU,QAC1CsU,EAASvI,EAAgBuI,EAAOtU,OAAQqU,GAG1C,OAAOC,EAAOxV,UAAYA,EAGrB,SAAS+M,EAAUlM,EAAM4U,GAAmC,IAApBC,IAAmB,yDAChE,OAAO,eACF7U,EADL,CAEEb,QAAS0V,EAAanF,MAAW1P,EAAKb,QACtCkB,OAAQuU,EACRzK,SAAUnK,EAAKmK,SAASnE,KAAI,SAAAmI,GAC1B,OAAOjC,EAAUiC,EAAOnO,EAAKb,QAAS0V,QAKrC,SAAS3V,EAAgBwV,EAAMtG,EAAiBhN,GACrD,IAAKgN,EACH,MAAO,GAET,IAAMnC,EAAUC,EAAUwI,EAAM,MAAM,GAChCvI,EAAiBC,EAAgBgC,EAAiBnC,GAClDwD,EAAaC,MACbhD,EAAU,CACdpN,KAAM,GACN8B,UAAWA,GAAa+K,EAAe/K,UACvCf,OAAQ8L,EAAehN,QACvBgL,SAAU,GACVhL,QAASsQ,EACTxO,KAAM,SACNuN,YAAa,GACbtN,SAAS,EACTyO,QAAS,GACTpO,UAAU,EACVqO,YAAa,GACbE,WAAW,EACXC,WAAW,EACXC,WAAW,EACX5J,gBAAgB,EAChBjF,WAAW,EACX2T,MAAO,GACP7E,YAAY,EACZJ,YAAa,GACbrR,YAAa2N,EAAe3N,aAI9B,OAFA2N,EAAehC,SAASwC,KAAKD,GAC7BP,EAAelL,KAA+B,UAAxBkL,EAAelL,KAAmB,QAAU,SAC3D,CACLhB,KAAMgM,EACNmC,gBAAiBqB,EACjBzP,KAAM0M,GAIH,SAASqI,EAAQC,GACtB,IAAMC,EAAWvF,MACjB,MAAO,CACLpQ,KAAM0V,EACN5T,UAAW,QACXjC,QAAS8V,EACT5U,OAAQ,KACRuP,YAAa,GACbD,QAAS,GACT1O,KAAM,SACNuN,YAAa,GACbtN,SAAS,EACTK,UAAU,EACVuO,WAAW,EACXC,WAAW,EACXC,WAAW,EACX5J,gBAAgB,EAChBjF,WAAW,EACX8O,YAAY,EACZJ,YAAa,GACbiF,MAAO,CAAC,SAAU,OAAQ,MAAO,MAAO,UACxC3K,SAAU,CACR,CACE7K,KAAM,KACN8B,UAAW,QACXwO,YAAa,GACb3O,KAAM,UACNuN,YAAa,GACbtN,SAAS,EACTK,UAAU,EACVuO,WAAW,EACXC,WAAW,EACXC,WAAW,EACX5J,gBAAgB,EAChBjF,WAAW,EACX8O,YAAY,EACZN,QAAS,GACTtP,OAAQ4U,EACR9V,QAASuQ,MACTvF,SAAU,IAEZ,CACE7K,KAAM,eACN8B,UAAW,QACXwO,YAAa,GACb3O,KAAM,UACNuN,YAAa,GACbtN,SAAS,EACTK,UAAU,EACVuO,WAAW,EACXC,WAAW,EACXC,WAAW,EACX5J,gBAAgB,EAChBjF,WAAW,EACX8O,YAAY,EACZN,QAAS,GACTtP,OAAQ4U,EACR9V,QAASuQ,MACTvF,SAAU,MAMlB,SAAS+K,EAAeC,EAAoBC,GAC1CA,EAAeD,GAEXA,EAAmBhL,UAAYgL,EAAmBhL,SAAStK,OAAS,GACtEsV,EAAmBhL,SAASnE,KAAI,SAAAmI,GAAK,OACnC+G,EAAe/G,EAAOiH,MAK5B,SAASC,EACPX,EACAY,EACAF,EACAG,GAGA,GADAH,EAAeE,EAAWC,GACtBD,EAAUjV,OAAQ,CACpB,IAAMA,EAAS+L,EAAgBkJ,EAAUjV,OAAQqU,GAE7CrU,GACFgV,EAAkBX,EAAMrU,EAAQ+U,EAAgBG,IAK/C,SAASC,EAAWd,EAAM1U,GAC/B,IAAMC,EAAOiM,EAAUwI,EAAM,MAAM,GAC7Be,EAAerJ,EAAgBpM,EAAKb,QAASc,GAuDnD,OAtDAwV,EAAanW,KAAOU,EAAKV,KACzBmW,EAAa7F,YAAc5P,EAAK4P,YAChC6F,EAAaC,aAAe1V,EAAK0V,aACjCD,EAAa9F,QAAU3P,EAAK2P,QAC5B8F,EAAaxU,KAAOjB,EAAKiB,KACzBwU,EAAajH,YAAcxO,EAAKwO,YAChCiH,EAAavU,QAAUlB,EAAKkB,QAE5BuU,EAAa3F,UAAY9P,EAAK8P,UAC9B2F,EAAatU,UAAYnB,EAAKmB,UAC9BsU,EAAaxF,WAAajQ,EAAKiQ,WAC/BwF,EAAa1F,UAAY/P,EAAK+P,UAC9B0F,EAAazF,UAAYhQ,EAAKgQ,UAE9ByF,EAAa5F,YAAc7P,EAAK6P,YAChC4F,EAAaX,MAAQ9U,EAAK8U,MAC1BW,EAAapV,OAASL,EAAKK,OAED,cAAtBoV,EAAaxU,OACfwU,EAAatL,SAAWnK,EAAKmK,UAG3BnK,EAAKxB,cAAgBiX,EAAajX,aACpC0W,EAAeO,GAAc,SAAAE,GAC3BA,EAAQnX,YAAcwB,EAAKxB,eAI3BiX,EAAarP,iBAAmBpG,EAAKoG,iBACnCpG,EAAKoG,eAEP8O,EAAeO,GAAc,SAAAE,GAC3BA,EAAQvP,gBAAiB,KAI3BiP,EAAkBpV,EAAMwV,GAAc,SAAAE,GACpCA,EAAQvP,gBAAiB,MAK3BqP,EAAalU,WAAavB,EAAKuB,WAC7BvB,EAAKuB,SAEP8T,EAAkBpV,EAAMwV,GAAc,SAAAE,GACpCA,EAAQpU,UAAW,KAIrBkU,EAAalU,SAAWvB,EAAKuB,UAI1BtB,I,iCCrFM8S,IArIA,WACb,MAAO,CACL6C,aAAc,CACZC,SAAU,EACVxS,QAAS,OACTyS,SAAU,aACV5D,gBAAiB,UACjB1R,OAAQ,yBAEVuV,cAAe,CACb5D,SAAU,YAEZ6D,cAAe,CACbC,WAAY,MACZ/D,gBAAiB,cACjBC,SAAU,SAEZ+D,iBAAkB,CAChB7S,QAAS,YAEX8S,WAAY,CACVjE,gBAAiB,UACjBkE,aAAc,KAEhBC,gBAAiB,GACjBC,UAAW,CACT/V,MAAO,cACPC,OAAQ,QAEV+V,WAAY,CACVhW,MAAO,QACP2R,gBAAiB,UACjBC,SAAU,WACVC,OAAQ,EACR5R,OAAQ,QAEVgW,kBAAmB,CACjBjW,MAAO,OACPC,OAAQ,OACR4R,OAAQ,KACRD,SAAU,YAEZsE,sBAAuB,CACrBtE,SAAU,WACV5R,MAAO,OACP2R,gBAAiB,UACjB3T,MAAO,aACPmY,QAAS,eAEXC,WAAY,CACVpW,MAAO,QACP2R,gBAAiB,UACjBC,SAAU,WACVC,OAAQ,EACR5R,OAAQ,QAEVoW,SAAU,CACRrY,MAAO,SAETsY,eAAgB,CACd3E,gBAAiB,UACjB3R,MAAO,cACP4R,SAAU,WACV7O,IAAK,MACLE,KAAM,MACNkT,QAAS,OACT1U,UAAW,oCACXoU,aAAc,OACdU,OAAQ,kBACRC,UAAW,UAEbC,YAAa,CACXC,SAAU,SAEZC,eAAgB,CACd5E,OAAQ,QAEV6E,aAAc,CACZC,OAAQ,YACR7W,MAAO,MACPC,OAAQ,QACR8R,OAAQ,WACR+E,WAAY,UACZjB,aAAc,MACdW,UAAW,SACX3E,OAAQ,MACRkF,SAAU,SACVjU,QAAS,OACTkU,WAAY,UAEdC,mBAAoB,CAClBJ,OAAQ,YACR7W,MAAO,OACP8W,WAAY,QACZP,OAAQ,sBACRzT,QAAS,OACT+O,OAAQ,MACRmF,WAAY,SACZE,aAAc,SACdC,eAAgB,SAChBJ,SAAU,WAEZK,wBAAyB,CACvBpX,MAAO,QAETqX,SAAU,CACRtU,IAAK,IACLgH,MAAO,IACP6H,SAAU,WACV0F,UAAW,OACXC,YAAa,OACbvZ,MAAO,WAETwZ,mBAAoB,CAClBzU,IAAK,IACLgH,MAAO,IACP6H,SAAU,WACV0F,UAAW,OACXC,YAAa,OACbvZ,MAAO,UACP6T,OAAQ,KAEV4F,aAAc,CACZ1U,IAAK,IACLE,KAAM,IACN2O,SAAU,WACV0F,UAAW,OACX5B,WAAY,OACZ1X,MAAO","file":"static/js/3.0995d04f.chunk.js","sourcesContent":["/* eslint-disable react/forbid-prop-types */\n/* eslint-disable no-bitwise */\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\n\nconst propTypes = {\n  x1: PropTypes.number.isRequired,\n  x2: PropTypes.number.isRequired,\n  y1: PropTypes.number.isRequired,\n  y2: PropTypes.number.isRequired,\n  pathProps: PropTypes.object.isRequired\n};\n\nfunction diagonal(x1, y1, x2, y2) {\n  return `M${y1},${x1}C${(y1 + y2) / 2},${x1} ${(y1 + y2) /\n    2},${x2} ${y2},${x2}`;\n}\n\nexport default class Link extends PureComponent {\n  render() {\n    const d = diagonal(\n      this.props.x1,\n      this.props.y1,\n      this.props.x2,\n      this.props.y2\n    );\n\n    const colorScheme = this.props.colorScheme & 31;\n    const red = 245 + colorScheme / 3;\n    const green = 166 + colorScheme;\n    const blue = 35 + colorScheme;\n    const color = this.props.branchColor || `rgb(${red}, ${green}, ${blue})`;\n    return (\n      <path\n        style={{ stroke: color }}\n        {...this.props.pathProps}\n        {...(this.props.isDottedLine && { 'stroke-dasharray': '5, 5' })}\n        d={d}\n      />\n    );\n  }\n}\n\nLink.propTypes = propTypes;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nconst propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  keyProp: PropTypes.string.isRequired,\n  labelProp: PropTypes.string.isRequired,\n  nodeKey: PropTypes.string.isRequired\n};\n\nexport default class Node extends Component {\n  plusSignHandler = event => {\n    event.stopPropagation(); // empêche la selection du noeud qui porte le signe plus\n    this.props.addNewChildNode(this.props.nodeKey);\n    return event;\n  };\n\n  mainNodeLeftPlusSignHandler = event => {\n    // spécialement pour le noeud principal, signe plus à gauche\n    event.stopPropagation(); // empêche la selection du noeud qui porte le signe plus\n    this.props.addNewChildNode(this.props.nodeKey, 'left');\n    return event;\n  };\n\n  onDragStart = event => {\n    event.stopPropagation(); // empêche le paning\n    this.props.onDragStart(this.props.name, this.props.nodeKey); // prévient le mindmap de quel noeud est draggé\n    return event;\n  };\n\n  onDragStopRight = event => {\n    event.stopPropagation(); // empêche le paning\n    this.props.onDragStop(this.props.nodeKey, 'right'); // informe le mindmap de là où le noeud est droppé\n    return event;\n  };\n\n  onDragStopLeft = event => {\n    event.stopPropagation(); // empêche le paning\n    this.props.onDragStop(this.props.nodeKey, 'left'); // informe le mindmap de là où le noeud est droppé\n    return event;\n  };\n\n  onDragStopAbove = event => {\n    event.stopPropagation(); // empêche le paning\n    this.props.onDragStop(this.props.nodeKey, 'above'); // informe le mindmap de là où le noeud est droppé\n    return event;\n  };\n\n  onDragStopBelow = event => {\n    event.stopPropagation(); // empêche le paning\n    this.props.onDragStop(this.props.nodeKey, 'below'); // informe le mindmap de là où le noeud est droppé\n    return event;\n  };\n\n  nodeTextLength = () => {\n    return this.props.name.length * 9;\n  };\n\n  handleLeftClick = () => {\n    this.props.onNodeSelect(this.props.node.data);\n  };\n\n  handleRightClick = e => {\n    this.props.onNodeSelect(this.props.node.data);\n    this.props.openContextMenu(e);\n  };\n\n  createNode() {\n    if (!this.props.parent) {\n      // we are in main node\n      return (\n        <svg\n          className=\"svg-rect\"\n          width={this.nodeTextLength() + 6}\n          height=\"30\"\n          y=\"-10\"\n        >\n          <rect\n            className={\n              this.props.currentNode.nodeKey === this.props[this.props.keyProp]\n                ? 'selected-node'\n                : 'main-node'\n            }\n            width={this.nodeTextLength() + 6}\n            height={30}\n          />\n          <text\n            x=\"50%\"\n            y=\"50%\"\n            textAnchor=\"middle\"\n            dy=\".3em\"\n            textDecoration=\"underline\"\n            className=\"node\"\n          >\n            /{this.props.name}\n          </text>\n        </svg>\n      );\n    }\n    const label =\n      (this.props.type === 'reference' && this.props.isArray ? '[' : '') +\n      (this.props.type === 'reference' ? '#' : '') +\n      (this.props.isSubPath === true ? '/' : '') +\n      (this.props.type === 'array' ? '[' : '') +\n      this.props.name +\n      (this.props.type === 'array' ? ']' : '') +\n      (this.props.type === 'reference' && this.props.isArray ? ']' : '');\n    return (\n      <g>\n        <rect\n          className={\n            this.nodeTextLength() === 0 ? 'error-node' : 'noerror-node'\n          }\n          width={25}\n          height={20}\n          y=\"-17\"\n          x={this.props.direction === 'left' ? -25 : 0}\n        />\n        <rect\n          className={\n            this.props.currentNode.nodeKey === this.props[this.props.keyProp]\n              ? 'selected-node'\n              : 'unselected-node'\n          }\n          width={this.nodeTextLength()}\n          height={20}\n          y=\"-17\"\n          x={this.props.direction === 'left' ? -this.nodeTextLength() : 0}\n        />\n        <text\n          textAnchor={this.props.direction === 'right' ? 'start' : 'end'}\n          {...this.props.textProps}\n          className=\"node\"\n          textDecoration={this.props.isSubPath === true ? 'underline' : ''}\n          fontWeight={this.props.abstract === true ? 'bold' : ''}\n        >\n          {label}\n        </text>\n        <circle\n          r=\"10\"\n          className={this.props.isDraggingMoving ? 'active' : 'inactive'}\n          cy=\"-13\"\n          cx={\n            this.props.direction === 'left'\n              ? -this.nodeTextLength() / 2\n              : this.nodeTextLength() / 2\n          }\n          onMouseUp={this.onDragStopAbove}\n        />\n        <circle\n          r=\"10\"\n          className={this.props.isDraggingMoving ? 'active' : 'inactive'}\n          cy=\"7\"\n          cx={\n            this.props.direction === 'left'\n              ? -this.nodeTextLength() / 2\n              : this.nodeTextLength() / 2\n          }\n          onMouseUp={this.onDragStopBelow}\n        />\n      </g>\n    );\n  }\n\n  render() {\n    let leftPlusSign;\n    if (this.props.parent === null) {\n      leftPlusSign = (\n        <g onClick={this.mainNodeLeftPlusSignHandler}>\n          <rect className=\"plussign\" width=\"11\" height=\"11\" y=\"0\" x=\"-8\" />\n          <text className=\"plussign\" y=\"11\" x=\"-7\">\n            +\n          </text>\n        </g>\n      );\n    }\n\n    return (\n      <g\n        {...this.props.gProps}\n        transform={`translate(${this.props.y}, ${this.props.x - 5})`}\n        onContextMenu={e => this.handleRightClick(e)}\n        onMouseDown={this.props.parent !== null ? this.onDragStart : null}\n      >\n        <g className=\"allnodes\" onClick={this.handleLeftClick}>\n          {this.createNode()}\n          <circle\n            r=\"10\"\n            className={\n              this.props.isDraggingMoving &&\n              (this.props.direction === 'left' || this.props.parent === null)\n                ? 'active'\n                : 'inactive'\n            }\n            cy=\"-3\"\n            cx={\n              -20 -\n              (this.props.direction === 'left' ? this.nodeTextLength() : 0)\n            }\n            onMouseUp={this.onDragStopLeft}\n          />\n          <circle\n            r=\"10\"\n            className={\n              this.props.isDraggingMoving && this.props.direction === 'right'\n                ? 'active'\n                : 'inactive'\n            }\n            cy=\"-3\"\n            cx={\n              (this.props.direction === 'right' ? this.nodeTextLength() : 0) +\n              20\n            }\n            onMouseUp={this.onDragStopRight}\n          />\n          {leftPlusSign}\n          {this.props.type !== 'reference' && (\n            <g onClick={this.plusSignHandler}>\n              <rect\n                className={\n                  this.props.isDraggingMoving ? 'plussign-dragging' : 'plussign'\n                }\n                width=\"11\"\n                height=\"11\"\n                y=\"0\"\n                x={\n                  this.props.direction === 'right'\n                    ? this.nodeTextLength()\n                    : -8 - this.nodeTextLength()\n                }\n              />\n              <text\n                className={\n                  this.props.isDraggingMoving ? 'plussign-dragging' : 'plussign'\n                }\n                y=\"11\"\n                x={\n                  this.props.direction === 'right'\n                    ? 1 + this.nodeTextLength()\n                    : -7 - this.nodeTextLength()\n                }\n              >\n                +\n              </text>\n            </g>\n          )}\n        </g>\n      </g>\n    );\n  }\n}\n\nNode.propTypes = propTypes;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { PureComponent } from 'react';\n\nexport default class ContextMenu extends PureComponent {\n  render() {\n    return (\n      <ul className=\"custom-ul\" id=\"container-menu\">\n        {(this.props.currentNode.type !== 'reference' && (\n          <li data-action=\"addChild\" onClick={this.props.insert}>\n            Add Child\n          </li>\n        )) || (\n          <li data-action=\"open\" onClick={this.props.open}>\n            Open\n          </li>\n        )}\n        <li data-action=\"copy\" onClick={this.props.copy}>\n          Copy\n        </li>\n        <li data-action=\"cut\" onClick={this.props.cut}>\n          Cut\n        </li>\n        <li data-action=\"paste\" onClick={this.props.paste}>\n          Paste\n        </li>\n        <li data-action=\"delete\" onClick={this.props.delete}>\n          Delete\n        </li>\n      </ul>\n    );\n  }\n}\n","/* eslint-disable react/sort-comp */\n/* eslint-disable camelcase */\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n/* eslint-disable no-shadow */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport keydown from 'react-keydown';\nimport Link from './Link';\nimport Node from './Node';\nimport ContextMenu from './ContextMenu';\n\nconst propTypes = {\n  keyProp: PropTypes.string.isRequired,\n  labelProp: PropTypes.string.isRequired,\n  gProps: PropTypes.object.isRequired,\n  textProps: PropTypes.object.isRequired\n};\n\nclass Mindmap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      panX: 0,\n      panY: 0,\n      zoom: 0.7,\n      isPaning: false,\n      isDragging: false,\n      isDraggingMoving: false,\n      showContext: false,\n      contextContainerStyle: {}\n    };\n\n    this.nodeContext = false;\n  }\n\n  UNSAFE_componentWillReceiveProps({ keydown }) {\n    if (keydown.event) {\n      this.props.onKeyPress({ keydown });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.isFocus !== this.props.isFocus &&\n      this.props.isFocus &&\n      this.mindmap\n    ) {\n      this.mindmap.focus();\n    }\n  }\n\n  openNodeContextMenu = e => {\n    e.preventDefault();\n    this.nodeContext = true;\n    this.setState({\n      showContext: true,\n      contextContainerStyle: {\n        display: 'block',\n        top: `${e.clientY}px`,\n        left: `${e.clientX}px`\n      }\n    });\n  };\n\n  closeContextMenu = () => {\n    this.setState({\n      showContext: false\n    });\n  };\n\n  onWheelScroll = e => {\n    let zoom = this.state.zoom;\n    if (e.deltaY < 0) {\n      zoom *= 1.1;\n      if (zoom > 3) zoom = 3;\n    } else {\n      zoom *= 0.94;\n      if (zoom < 0.4) zoom = 0.4;\n    }\n    this.setState({ zoom });\n  };\n\n  onDragStart = (nodeName, nodeKey) => {\n    this.setState({\n      isPaning: false,\n      isDragging: true,\n      isDraggingMoving: false,\n      draggedNodeKey: nodeKey\n    });\n  };\n\n  onDragStop = (nodeKey, direction) => {\n    this.setState({\n      isPaning: false,\n      isDragging: false,\n      isDraggingMoving: false\n    });\n    this.props.moveNode(this.state.draggedNodeKey, nodeKey, direction);\n  };\n\n  onPanStart = e => {\n    const startX =\n      typeof e.clientX === 'undefined'\n        ? e.changedTouches[0].clientX\n        : e.clientX;\n    const startY =\n      typeof e.clientY === 'undefined'\n        ? e.changedTouches[0].clientY\n        : e.clientY;\n    this.setState({ isPaning: true, isDragging: false, startX, startY });\n  };\n\n  onPanMove = e => {\n    if (this.state.isDragging) {\n      this.setState({ isDraggingMoving: true });\n      return;\n    }\n\n    if (!this.state.isPaning) {\n      return;\n    }\n    const x =\n      typeof e.clientX === 'undefined'\n        ? e.changedTouches[0].clientX\n        : e.clientX;\n    const y =\n      typeof e.clientY === 'undefined'\n        ? e.changedTouches[0].clientY\n        : e.clientY;\n\n    this.setState({\n      panX: this.state.panX + x - this.state.startX,\n      panY: this.state.panY + y - this.state.startY,\n      startX: x,\n      startY: y\n    });\n  };\n\n  onPanEnd = () => {\n    this.setState({\n      isPaning: false,\n      isDragging: false,\n      isDraggingMoving: false\n    });\n  };\n\n  render() {\n    return (\n      <div\n        tabIndex=\"0\"\n        id=\"mindmap\"\n        onClick={this.closeContextMenu}\n        onFocus={() => this.props.onFocus()}\n        ref={ref => {\n          this.mindmap = ref;\n        }}\n      >\n        <div\n          className=\"custom-menu\"\n          id=\"context-container\"\n          style={this.state.contextContainerStyle}\n        >\n          {this.state.showContext && <ContextMenu {...this.props} />}\n        </div>\n        <svg\n          viewBox={`${this.props.minX} ${this.props.minY} ${this.props.maxX -\n            this.props.minX +\n            this.props.nodeWidth +\n            1} ${this.props.maxY - this.props.minY + 1}`}\n          className=\"custom\"\n          onMouseDown={this.onPanStart}\n          onMouseMove={this.onPanMove}\n          onMouseLeave={this.onPanEnd}\n          onMouseUp={this.onPanEnd}\n          onWheel={this.onWheelScroll}\n          style={{ pointerEvents: 'auto', height: '100%' }}\n        >\n          <g\n            transform={` translate(${this.state.panX} ${this.state.panY}) scale(${this.state.zoom}) `}\n          >\n            {this.props.links.map(link => (\n              <Link\n                colorScheme={link.target.data.name.charCodeAt(0)}\n                branchColor={link.target.data.branchColor}\n                isDottedLine={link.target.data.notImplemented}\n                key={link.target.data[this.props.keyProp]}\n                keyProp={this.props.keyProp}\n                source={link.source}\n                target={link.target}\n                x1={link.source.x}\n                x2={link.target.x}\n                y1={\n                  link.source.y +\n                  (link.source.data.direction === 'right' &&\n                  link.target.data.direction === 'right'\n                    ? link.source.data.name.length * 9\n                    : 0) -\n                  (link.source.data.direction === 'left' &&\n                  link.target.data.direction === 'left'\n                    ? link.source.data.name.length * 9\n                    : 0)\n                }\n                y2={\n                  link.target\n                    .y /* + ((link.target.data.direction === \"left\"\t)?link.target.data.name.length*9:0)  */\n                }\n                pathProps={{\n                  ...this.props.pathProps,\n                  ...link.target.data.pathProps\n                }}\n              />\n            ))}\n            {this.props.nodes\n              .filter(n => n.data.nodeKey)\n              .map(node => (\n                <g key={node.data.nodeKey}>\n                  <Link\n                    branchColor={node.data.branchColor}\n                    isDottedLine={node.data.notImplemented}\n                    x1={node.x}\n                    x2={node.x}\n                    y1={\n                      node.y +\n                      (node.data.direction === 'right'\n                        ? node.data.name.length * 9\n                        : 0)\n                    }\n                    y2={\n                      node.y -\n                      (node.data.direction === 'left'\n                        ? node.data.name.length * 9\n                        : 0)\n                    }\n                    pathProps={{\n                      ...this.props.pathProps,\n                      ...node.data.pathProps\n                    }}\n                  />\n                  <Node\n                    node={node}\n                    currentNode={this.props.currentNode}\n                    onNodeSelect={this.props.onNodeSelect}\n                    addNewChildNode={this.props.addNewChildNode}\n                    onDragStart={this.onDragStart}\n                    onDragStop={this.onDragStop}\n                    openContextMenu={this.openNodeContextMenu}\n                    isDraggingMoving={this.state.isDraggingMoving}\n                    key={node.data[this.props.keyProp]}\n                    keyProp={this.props.keyProp}\n                    labelProp={this.props.labelProp}\n                    x={node.x}\n                    y={node.y}\n                    Width={this.props.nodeWidth}\n                    gProps={{\n                      ...this.props.gProps,\n                      ...node.data.gProps\n                    }}\n                    textProps={{\n                      ...this.props.textProps,\n                      ...node.data.textProps\n                    }}\n                    {...node.data}\n                  />\n                </g>\n              ))}\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nMindmap.propTypes = propTypes;\nexport default keydown(Mindmap);\n","/* eslint-disable camelcase */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable react/forbid-prop-types */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Mindmap from './Mindmap';\n\nconst propTypes = {\n  animated: PropTypes.bool.isRequired,\n  getChildren: PropTypes.func.isRequired,\n  keyProp: PropTypes.string.isRequired,\n  links: PropTypes.array.isRequired,\n  nodes: PropTypes.array.isRequired,\n  duration: PropTypes.number.isRequired,\n  easing: PropTypes.func.isRequired,\n  steps: PropTypes.number.isRequired\n};\n\nexport default class Animated extends Component {\n  constructor(props) {\n    super(props);\n    if (props.animated) {\n      // If we are animating, we set the initial positions of the nodes and links to be the position of the root node\n      // and animate from there\n      const initialX = props.nodes[0].x;\n      const initialY = props.nodes[0].y;\n      this.state = {\n        nodes: props.nodes.map(n =>\n          ({ ...n, x: initialX, y: initialY})\n        ),\n        links: props.links.map(l => ({\n          source: {\n            ...l.source,\n            x: initialX,\n            y: initialY\n          },\n          target: {\n            ...l.target,\n            x: initialX,\n            y: initialY\n          }\n        }))\n      };\n    } else {\n      this.state = {\n        nodes: props.nodes,\n        links: props.links\n      };\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.animated) {\n      this.animate(this.props);\n    }\n  }\n\n  getAnimationContext(initialState, newState) {\n    // Nodes/links that are in both states need to be moved from the old position to the new one\n    // Nodes/links only in the initial state are being removed, and should be moved to the position\n    // of the closest ancestor that still exists, or the new root\n    // Nodes/links only in the new state are being added, and should be moved from the position of\n    // the closest ancestor that previously existed, or the old root\n\n    // The base determines which node/link the data (like classes and labels) comes from for rendering\n\n    // We only run this once at the start of the animation, so optimization is less important\n    const addedNodes = newState.nodes\n      .filter(n1 => initialState.nodes.every(n2 => !this.areNodesSame(n1, n2)))\n      .map(n1 => ({\n        base: n1,\n        old: this.getClosestAncestor(n1, newState, initialState),\n        new: n1\n      }));\n    const changedNodes = newState.nodes\n      .filter(n1 => initialState.nodes.some(n2 => this.areNodesSame(n1, n2)))\n      .map(n1 => ({\n        base: n1,\n        old: initialState.nodes.find(n2 => this.areNodesSame(n1, n2)),\n        new: n1\n      }));\n    const removedNodes = initialState.nodes\n      .filter(n1 => newState.nodes.every(n2 => !this.areNodesSame(n1, n2)))\n      .map(n1 => ({\n        base: n1,\n        old: n1,\n        new: this.getClosestAncestor(n1, initialState, newState)\n      }));\n\n    const addedLinks = newState.links\n      .filter(l1 => initialState.links.every(l2 => !this.areLinksSame(l1, l2)))\n      .map(l1 => ({\n        base: l1,\n        old: this.getClosestAncestor(l1.target, newState, initialState),\n        new: l1\n      }));\n    const changedLinks = newState.links\n      .filter(l1 => initialState.links.some(l2 => this.areLinksSame(l1, l2)))\n      .map(l1 => ({\n        base: l1,\n        old: initialState.links.find(l2 => this.areLinksSame(l1, l2)),\n        new: l1\n      }));\n    const removedLinks = initialState.links\n      .filter(l1 => newState.links.every(l2 => !this.areLinksSame(l1, l2)))\n      .map(l1 => ({\n        base: l1,\n        old: l1,\n        new: this.getClosestAncestor(l1.target, initialState, newState)\n      }));\n\n    return {\n      nodes: changedNodes.concat(addedNodes).concat(removedNodes),\n      links: changedLinks.concat(addedLinks).concat(removedLinks)\n    };\n  }\n\n  getClosestAncestor(node, stateWithNode, stateWithoutNode) {\n    let oldParent = node;\n\n    while (oldParent) {\n      // eslint-disable-next-line\n      let newParent = stateWithoutNode.nodes.find(n =>\n        this.areNodesSame(oldParent, n)\n      );\n\n      if (newParent) {\n        return newParent;\n      }\n      // eslint-disable-next-line\n      oldParent = stateWithNode.nodes.find(n =>\n        (this.props.getChildren(n) || []).some(c =>\n          this.areNodesSame(oldParent, c)\n        )\n      );\n    }\n\n    return stateWithoutNode.nodes[0];\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.nodes === this.props.nodes &&\n      nextProps.links === this.props.links\n    ) {\n      return;\n    }\n\n    if (!nextProps.animated) {\n      this.setState({\n        nodes: nextProps.nodes,\n        links: nextProps.links\n      });\n      return;\n    }\n\n    this.animate(nextProps);\n  }\n\n  animate(props) {\n    // Stop previous animation if one is already in progress.  We will start the next animation\n    // from the position we are currently in\n    clearInterval(this.animation);\n\n    let counter = 0;\n\n    // Do as much one-time calculation outside of the animation step, which needs to be fast\n    const animationContext = this.getAnimationContext(this.state, props);\n\n    this.animation = setInterval(() => {\n      counter += 1;\n\n      if (counter === props.steps) {\n        clearInterval(this.animation);\n        this.animation = null;\n        this.setState({\n          nodes: props.nodes,\n          links: props.links\n        });\n        return;\n      }\n\n      this.setState(\n        this.calculateNewState(animationContext, counter / props.steps)\n      );\n    }, props.duration / props.steps);\n  }\n\n  areNodesSame(a, b) {\n    return a.data[this.props.keyProp] === b.data[this.props.keyProp];\n  }\n\n  areLinksSame(a, b) {\n    return (\n      a.source.data[this.props.keyProp] === b.source.data[this.props.keyProp] &&\n      a.target.data[this.props.keyProp] === b.target.data[this.props.keyProp]\n    );\n  }\n\n  calculateNewState(animationContext, interval) {\n    return {\n      nodes: animationContext.nodes.map(n =>\n        this.calculateNodePosition(n.base, n.old, n.new, interval)\n      ),\n      links: animationContext.links.map(l =>\n        this.calculateLinkPosition(l.base, l.old, l.new, interval)\n      )\n    };\n  }\n\n  calculateNodePosition(node, start, end, interval) {\n    return {\n      ...node,\n      x: this.calculateNewValue(start.x, end.x, interval),\n      y: this.calculateNewValue(start.y, end.y, interval)\n    };\n  }\n\n  calculateLinkPosition(link, start, end, interval) {\n    return {\n      source: {\n        ...link.source,\n        x: this.calculateNewValue(\n          start.source ? start.source.x : start.x,\n          end.source ? end.source.x : end.x,\n          interval\n        ),\n        y: this.calculateNewValue(\n          start.source ? start.source.y : start.y,\n          end.source ? end.source.y : end.y,\n          interval\n        )\n      },\n      target: {\n        ...link.target,\n        x: this.calculateNewValue(\n          start.target ? start.target.x : start.x,\n          end.target ? end.target.x : end.x,\n          interval\n        ),\n        y: this.calculateNewValue(\n          start.target ? start.target.y : start.y,\n          end.target ? end.target.y : end.y,\n          interval\n        )\n      }\n    };\n  }\n\n  calculateNewValue(start, end, interval) {\n    return start + (end - start) * this.props.easing(interval);\n  }\n\n  render() {\n    return <Mindmap {...this.props} {...this.state} />;\n  }\n}\n\nAnimated.propTypes = propTypes;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-shadow */\n/* eslint-disable prefer-const */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/default-props-match-prop-types */\n/* eslint-disable react/require-default-props */\nimport clone from 'clone';\nimport { easeQuadOut } from 'd3-ease';\nimport { hierarchy, tree } from 'd3-hierarchy';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport uniqid from 'uniqid';\nimport _ from 'lodash';\nimport Animated from './Animated';\nimport ModelAPI from '../../api/ModelAPI';\nimport {\n  searchTreeByKey,\n  isAncestorOf,\n  cloneTree,\n  addNewChildNode\n} from '../../helpers/tree_helper';\n\nconst propTypes = {\n  animated: PropTypes.bool.isRequired,\n  children: PropTypes.node,\n  duration: PropTypes.number.isRequired,\n  easing: PropTypes.func.isRequired,\n  steps: PropTypes.number.isRequired,\n  keyProp: PropTypes.string.isRequired,\n  labelProp: PropTypes.string.isRequired,\n  getChildren: PropTypes.func.isRequired,\n  margins: PropTypes.shape({\n    bottom: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    right: PropTypes.number.isRequired,\n    top: PropTypes.number.isRequired\n  }).isRequired,\n  gProps: PropTypes.object.isRequired,\n  pathProps: PropTypes.object.isRequired,\n  textProps: PropTypes.object.isRequired\n};\n\nconst defaultProps = {\n  animated: false,\n  duration: 50,\n  easing: easeQuadOut,\n  getChildren: n => n.children,\n  steps: 5,\n  keyProp: 'nodeKey',\n  labelProp: 'name',\n  margins: {\n    bottom: 10,\n    left: 100,\n    right: 150,\n    top: 10\n  },\n  nodeWidth: 100,\n  gProps: {\n    className: 'node'\n  },\n  pathProps: {\n    className: 'link'\n  },\n  textProps: {}\n};\n\nconst oneCharWidth = 10;\n\nexport default class Tree extends Component {\n  previousStates = [];\n\n  state = {\n    toCopyNodeKey: null,\n    toCutNodeKey: null,\n    event: '',\n    fullScreen: false,\n    swaggerHtml: ''\n  };\n\n  keyHandler = ({ keydown }) => {\n    if (keydown.event) {\n      if (keydown.event.which === 113) {\n        this.f2Key();\n      }\n      if (keydown.event.which === 40) {\n        this.downKeyHandler();\n      }\n      if (keydown.event.which === 38) {\n        this.upKeyHandler();\n      }\n      if (keydown.event.which === 37) {\n        this.leftKeyHandler();\n      }\n      if (keydown.event.which === 39) {\n        this.rightKeyHandler();\n      }\n      if (keydown.event.which === 66 && keydown.event.ctrlKey) {\n        this.boldHandler();\n      }\n      if (keydown.event.which === 67 && keydown.event.ctrlKey) {\n        this.copyHandler();\n      }\n      if (keydown.event.which === 88 && keydown.event.ctrlKey) {\n        this.cutHandler();\n      }\n      if (keydown.event.which === 86 && keydown.event.ctrlKey) {\n        this.pasteHandler();\n      }\n      if (\n        (keydown.event.which === 90 && keydown.event.ctrlKey) ||\n        (keydown.event.which === 90 && keydown.event.metaKey)\n      ) {\n        this.props.onUndo();\n      }\n      if (keydown.event.which === 13) {\n        this.enterKeyHandler();\n      }\n      if (keydown.event.which === 45) {\n        this.insertKeyHandler();\n      }\n      if (keydown.event.which === 46 || keydown.event.which === 8) {\n        this.deleteKeyHandler();\n      }\n      if (\n        keydown.event.which >= 65 &&\n        keydown.event.which <= 90 &&\n        !keydown.event.ctrlKey &&\n        !keydown.event.metaKey\n      ) {\n        this.props.onLetterDown();\n      }\n    }\n  };\n\n  moveNode = (draggedNodeKey, destinationNodeKey, direction) => {\n    if (\n      destinationNodeKey &&\n      draggedNodeKey &&\n      draggedNodeKey !== destinationNodeKey &&\n      !isAncestorOf(draggedNodeKey, destinationNodeKey, this.props.data)\n    ) {\n      const allData = cloneTree(this.props.data, null, false);\n      const nodeWhereToAdd = searchTreeByKey(destinationNodeKey, allData);\n      const nodeToDelete = searchTreeByKey(draggedNodeKey, allData);\n      if (nodeToDelete.parent) {\n        let parentNode = searchTreeByKey(nodeToDelete.parent, allData);\n        parentNode.children.splice(\n          parentNode.children.findIndex(v => v.nodeKey === draggedNodeKey),\n          1\n        );\n        if (direction === 'left' || direction === 'right') {\n          let newNode = cloneTree(nodeToDelete, nodeWhereToAdd.nodeKey);\n          newNode.direction = direction;\n          nodeWhereToAdd.children.push(newNode);\n          this.props.onTreeUpdate({\n            dataUpdated: allData,\n            currentNode: newNode\n          });\n        }\n        if (direction === 'above' || direction === 'below') {\n          if (nodeWhereToAdd.parent) {\n            let parentNode = searchTreeByKey(nodeWhereToAdd.parent, allData);\n            let destIndex = parentNode.children.findIndex(\n              v => v.nodeKey === destinationNodeKey\n            );\n            let newNode = cloneTree(nodeToDelete, nodeWhereToAdd.parent);\n            parentNode.children.splice(\n              direction === 'above' ? destIndex : destIndex + 1,\n              0,\n              newNode\n            );\n            newNode.direction = nodeWhereToAdd.direction;\n            this.props.onTreeUpdate({\n              dataUpdated: allData,\n              currentNode: newNode\n            });\n          }\n        }\n      }\n    }\n  };\n\n  getTreeDepthAndCardinality = (data, depth) => {\n    this.cardinality += 1;\n    if (this.maxDepth < depth) this.maxDepth = depth;\n    if (data.children.length !== 0)\n      data.children.forEach(n => this.getTreeDepthAndCardinality(n, depth + 1));\n  };\n\n  getTreeTextWidth = (data, textWidth, maxLength) => {\n    if (data.children.length !== 0) {\n      const lengths = data.children.map(n =>\n        this.getTreeTextWidth(n, textWidth + n.name.length)\n      );\n      return Math.max(...lengths);\n    }\n\n    if (data.name && maxLength > textWidth + data.name.length) {\n      return textWidth + data.name.length;\n    }\n\n    if (data.children.length === 0) {\n      return 0;\n    }\n\n    return maxLength;\n  };\n\n  propagateDirection = (node, dir) => {\n    node.direction = dir;\n    node.children.forEach(c => {\n      this.propagateDirection(c, dir);\n    });\n  };\n\n  propagateShiftLeft = (node, horizontalShift) => {\n    let nodeShift = node.data.name.length * oneCharWidth;\n    if (node.depth === 0) nodeShift = 0;\n    node.y += horizontalShift;\n    if (node.children)\n      node.children.forEach(c => {\n        this.propagateShiftLeft(c, horizontalShift + nodeShift);\n      });\n  };\n\n  propagateShiftRight = (node, horizontalShift) => {\n    const nodeShift = node.data.name.length * oneCharWidth;\n    if (node.children)\n      node.children.forEach(c => {\n        c.y += horizontalShift + nodeShift;\n        this.propagateShiftRight(c, horizontalShift + nodeShift);\n      });\n  };\n\n  nodePlacementAdaptation = (node, treeMaxLength) => {\n    if (node.parent && node.parent.parent) {\n      let maxLength = 0;\n      node.parent.parent.children.forEach(uncle => {\n        if (uncle.data.name.length > maxLength) {\n          maxLength = uncle.data.name.length;\n        }\n      });\n      treeMaxLength += maxLength;\n      node.y +=\n        (treeMaxLength -\n          node.parent.data.name.length * (1 + 0.11 * (node.depth - 1))) *\n        9;\n    }\n\n    if (node.children) {\n      node.children = node.children.map(child => {\n        return this.nodePlacementAdaptation(child, treeMaxLength);\n      });\n    }\n\n    return node;\n  };\n\n  addNewChildNode = (nodeKey, direction) => {\n    const { data, selectedNodeKey, node } = addNewChildNode(\n      this.props.data,\n      nodeKey,\n      direction\n    );\n    if (data && selectedNodeKey && node) {\n      this.props.onTreeUpdate({\n        dataUpdated: data,\n        currentNode: node\n      });\n    }\n  };\n\n  openReferenceHandler = () => {\n    ModelAPI.getModel(this.props.currentNode.referenceId).then(\n      populatedModel => {\n        if (populatedModel.freezeTag === '0') {\n          this.props.history.push({\n            pathname: '/tree',\n            state: {\n              modelId: this.props.currentNode.referenceId\n            }\n          });\n        } else {\n          this.props.history.push({\n            pathname: '/tree-frozen',\n            state: {\n              model: populatedModel\n            }\n          });\n        }\n      }\n    );\n  };\n\n  insertKeyHandler = () => {\n    if (this.props.currentNode.type !== 'reference') {\n      this.addNewChildNode(this.props.currentNode.nodeKey, null);\n    }\n  };\n\n  deleteKeyHandler = () => {\n    if (this.props.currentNode.nodeKey) {\n      const allData = cloneTree(this.props.data, null, false);\n      let nodeToDelete = searchTreeByKey(\n        this.props.currentNode.nodeKey,\n        allData\n      );\n      if (nodeToDelete.parent) {\n        let parentNode = searchTreeByKey(nodeToDelete.parent, allData);\n        parentNode.children.splice(\n          parentNode.children.findIndex(\n            v => v.nodeKey === this.props.currentNode.nodeKey\n          ),\n          1\n        );\n        this.props.onTreeUpdate({\n          dataUpdated: allData,\n          currentNode: parentNode\n        });\n      }\n    }\n  };\n\n  copyHandler = () => {\n    if (this.props.currentNode.nodeKey) {\n      this.setState({\n        toCopyNodeKey: this.props.currentNode.nodeKey,\n        toCutNodeKey: null\n      });\n    }\n  };\n\n  cutHandler = () => {\n    if (this.props.currentNode.nodeKey) {\n      this.setState({\n        toCopyNodeKey: null,\n        toCutNodeKey: this.props.currentNode.nodeKey\n      });\n    }\n  };\n\n  pasteHandler = () => {\n    let allData = cloneTree(this.props.data, null, false);\n    if (this.props.currentNode.nodeKey) {\n      let nodeWhereToAdd = searchTreeByKey(\n        this.props.currentNode.nodeKey,\n        allData\n      );\n\n      // Cut\n      if (\n        this.state.toCutNodeKey &&\n        !isAncestorOf(\n          this.state.toCutNodeKey,\n          this.props.currentNode.nodeKey,\n          this.props.data\n        )\n      ) {\n        let nodeToDelete = searchTreeByKey(this.state.toCutNodeKey, allData);\n        let newNode = cloneTree(nodeToDelete, nodeWhereToAdd.nodeKey);\n        let parentNode = searchTreeByKey(nodeToDelete.parent, allData);\n        parentNode.children.splice(\n          parentNode.children.findIndex(\n            v => v.nodeKey === this.state.toCutNodeKey\n          ),\n          1\n        );\n        nodeWhereToAdd.children.push(newNode);\n        this.props.onTreeUpdate({\n          dataUpdated: allData,\n          currentNode: newNode\n        });\n      }\n\n      // Copy\n      if (this.state.toCopyNodeKey) {\n        let nodeToCopy = searchTreeByKey(this.state.toCopyNodeKey, allData);\n        if (nodeToCopy.parent) {\n          let newNode = cloneTree(nodeToCopy, nodeWhereToAdd.nodeKey);\n          nodeWhereToAdd.children.push(newNode);\n          this.props.onTreeUpdate({\n            dataUpdated: allData,\n            currentNode: newNode\n          });\n        }\n      }\n    }\n  };\n\n  sanitizeNode(node) {\n    Object.keys(node).forEach(key => {\n      if (node[key] && _.isString(node[key]) && node[key].indexOf('\"') > -1) {\n        node[key] = node[key].replace('\"', '');\n      }\n    });\n  }\n\n  boldHandler() {\n    this.props.onToolsMenuChange({\n      abstract: !this.props.currentNode.abstract\n    });\n  }\n\n  enterKeyHandler() {\n    if (this.props.currentNode.nodeKey) {\n      const allData = cloneTree(this.props.data, null, false);\n      let nodeWhereToAdd = searchTreeByKey(\n        this.props.currentNode.nodeKey,\n        allData\n      );\n      if (nodeWhereToAdd.parent) {\n        const parentNode = searchTreeByKey(nodeWhereToAdd.parent, allData);\n        const indexWhereToAdd = parentNode.children.indexOf(nodeWhereToAdd);\n        const newNodeKey = uniqid();\n        const newNode = {\n          name: '',\n          parent: parentNode.nodeKey,\n          children: [],\n          nodeKey: newNodeKey,\n          type: 'string',\n          referenceId: '',\n          isArray: false,\n          example: '',\n          abstract: false,\n          description: '',\n          queryParams: '',\n          direction: nodeWhereToAdd.direction,\n          queryable: false,\n          paginable: false,\n          patchable: false,\n          notImplemented: false,\n          isSubPath: false,\n          calculated: false,\n          branchColor: parentNode.branchColor\n        };\n        parentNode.children.splice(indexWhereToAdd + 1, 0, newNode);\n        this.props.onTreeUpdate({\n          dataUpdated: allData,\n          currentNode: newNode\n        });\n      }\n    }\n  }\n\n  upKeyHandler() {\n    if (this.props.currentNode.nodeKey) {\n      const allData = this.props.data;\n      let selectedNode = searchTreeByKey(\n        this.props.currentNode.nodeKey,\n        allData\n      );\n      if (selectedNode.parent) {\n        let parentNode = searchTreeByKey(selectedNode.parent, allData);\n        for (\n          let indexWhereToGo = parentNode.children.indexOf(selectedNode) - 1;\n          indexWhereToGo >= 0;\n          indexWhereToGo -= 1\n        ) {\n          if (\n            parentNode.children[indexWhereToGo].direction ===\n            selectedNode.direction\n          ) {\n            this.props.onNodeSelect(\n              parentNode.children[indexWhereToGo],\n              allData\n            );\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  downKeyHandler() {\n    if (this.props.currentNode.nodeKey) {\n      const allData = this.props.data;\n      let selectedNode = searchTreeByKey(\n        this.props.currentNode.nodeKey,\n        allData\n      );\n      if (selectedNode.parent) {\n        let parentNode = searchTreeByKey(selectedNode.parent, allData);\n        let indexWhereToGo;\n        for (\n          indexWhereToGo = parentNode.children.indexOf(selectedNode) + 1;\n          indexWhereToGo < parentNode.children.length;\n          indexWhereToGo += 1\n        ) {\n          if (\n            parentNode.children[indexWhereToGo].direction ===\n            selectedNode.direction\n          ) {\n            this.props.onNodeSelect(\n              parentNode.children[indexWhereToGo],\n              allData\n            );\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  leftKeyHandler() {\n    if (this.props.currentNode.nodeKey) {\n      const allData = this.props.data;\n      let selectedNode = searchTreeByKey(\n        this.props.currentNode.nodeKey,\n        allData\n      );\n      if (selectedNode.nodeKey === this.props.data.nodeKey) {\n        let indexWhereToGo = selectedNode.children.findIndex(\n          n => n.direction === 'left'\n        );\n        if (indexWhereToGo !== -1) {\n          this.props.onNodeSelect(\n            selectedNode.children[indexWhereToGo],\n            allData\n          );\n        }\n      } else if (selectedNode.direction === 'right') {\n        this.goToParent(selectedNode, allData);\n      } else {\n        this.goToFirstChild(selectedNode, allData);\n      }\n    }\n  }\n\n  rightKeyHandler() {\n    if (this.props.currentNode.nodeKey) {\n      const allData = this.props.data;\n      const selectedNode = searchTreeByKey(\n        this.props.currentNode.nodeKey,\n        allData\n      );\n      if (selectedNode.direction === 'left') {\n        this.goToParent(selectedNode, allData);\n      } else {\n        this.goToFirstChild(selectedNode, allData);\n      }\n    }\n  }\n\n  goToParent(selectedNode, allData) {\n    if (selectedNode.parent) {\n      const parentNode = searchTreeByKey(selectedNode.parent, allData);\n      this.props.onNodeSelect(parentNode, allData);\n    }\n  }\n\n  goToFirstChild(selectedNode, allData) {\n    if (selectedNode.children && selectedNode.children.length > 0) {\n      const indexWhereToGo = selectedNode.children.findIndex(\n        n => n.direction === selectedNode.direction\n      );\n      if (indexWhereToGo !== -1) {\n        this.props.onNodeSelect(selectedNode.children[indexWhereToGo], allData);\n      }\n    }\n  }\n\n  render() {\n    const { isFocus, onNodeSelect, children, data, margins } = this.props;\n\n    // Calcule une taille de svg adaptée à la richesse de l'arbre\n    // Pour la largeur, trouver la branche où il y a le plus de texte cumulé, à gauche puis à droite\n    const maxLeftLength = this.getTreeTextWidth(\n      {\n        children: data.children.filter(ld => ld.direction === 'left')\n      },\n      0,\n      120\n    );\n    const maxRightLength = this.getTreeTextWidth(\n      {\n        children: data.children.filter(ld => ld.direction === 'right')\n      },\n      0,\n      120\n    );\n    const contentHeight =\n      600 +\n      (maxLeftLength + maxRightLength) * oneCharWidth -\n      margins.left -\n      margins.right;\n\n    // Pour la hauteur, on fait le nombre de champs divisé par le nombre de niveaux. Poura être amélioré\n    this.maxDepth = 0;\n    this.cardinality = 0;\n    this.getTreeDepthAndCardinality(data, 0);\n    const contentWidth =\n      200 +\n      (60 * (this.cardinality + 1)) / (this.maxDepth + 1) -\n      margins.top -\n      margins.bottom;\n\n    // Crée deux sous arbres gauche et droite\n    data.children.forEach(c => {\n      this.propagateDirection(c, c.direction);\n    });\n\n    const leftData = clone(data);\n    leftData.children = leftData.children.filter(ld => ld.direction === 'left');\n    this.propagateDirection(leftData, 'left');\n\n    let rootLeft = tree().size([contentWidth, contentHeight / 2])(\n      hierarchy(leftData)\n    );\n\n    rootLeft = this.nodePlacementAdaptation(rootLeft, 0);\n    const nodesLeft = rootLeft.descendants();\n    const linksLeft = rootLeft.links();\n    this.propagateShiftLeft(nodesLeft[0], 0);\n\n    const rightData = clone(data);\n    rightData.children = rightData.children.filter(\n      rd => rd.direction === 'right'\n    );\n    this.propagateDirection(rightData, 'right', 0);\n\n    let rootRight = tree().size([contentWidth, contentHeight / 2])(\n      hierarchy(rightData)\n    );\n\n    rootRight = this.nodePlacementAdaptation(rootRight, 0);\n    const nodesRight = rootRight.descendants();\n    const linksRight = rootRight.links();\n    this.propagateShiftRight(nodesRight[0], 0);\n\n    // Retourne le sous-arbre gauche et le positionne en face du droit\n    const dh = nodesRight[0].x - nodesLeft[0].x;\n    nodesLeft.forEach(nl => {\n      nl.x += dh;\n      nl.y = -nl.y;\n    });\n\n    // Rattache au noeud racine droite les enfants du noeud racine de gauche\n    linksLeft.forEach(ll => {\n      if (ll.source.data.nodeKey === nodesLeft[0].data.nodeKey) {\n        // eslint-disable-next-line no-param-reassign\n        ll.source = nodesRight[0];\n      }\n      if (ll.target.data.nodeKey === nodesLeft[0].data.nodeKey) {\n        ll.target = nodesRight[0];\n      }\n    });\n    nodesLeft.splice(0, 1);\n\n    // Joint les deux sous-arbres\n    const nodes = nodesLeft.concat(nodesRight);\n    const links = linksLeft.concat(linksRight);\n\n    // Mesure l'arbre résultat puis recentre\n    let minX = nodesRight[0].x;\n    let maxX = nodesRight[0].x;\n    let minY = nodesRight[0].y;\n    let maxY = nodesRight[0].y;\n    nodes.forEach(n => {\n      if (minX > n.x) minX = n.x;\n      if (maxX < n.x) maxX = n.x;\n      if (minY > n.y) minY = n.y;\n      if (maxY < n.y) maxY = n.y;\n    });\n    const shift = (minX + maxX) / 2; // Hauteur mediane\n    nodes.forEach(n => {\n      n.x -= shift;\n    });\n    maxX -= shift;\n    minX -= shift;\n\n    minY -= 100; // Centrage pour les petits mindmaps, comme celui du départ from scratch\n    return (\n      <Animated\n        {...this.props}\n        {...this.state}\n        minY={minX}\n        maxY={maxX}\n        minX={minY}\n        maxX={maxY}\n        links={links}\n        nodes={nodes}\n        centerX={nodes[0].y}\n        centerY={nodes[0].x}\n        cardinality={this.cardinality}\n        open={() => this.openReferenceHandler()}\n        insert={() => this.insertKeyHandler()}\n        copy={() => this.copyHandler()}\n        cut={() => this.cutHandler()}\n        paste={() => this.pasteHandler()}\n        delete={() => this.deleteKeyHandler()}\n        moveNode={this.moveNode}\n        addNewChildNode={this.addNewChildNode}\n        onSaveTree={this.saveTree}\n        onKeyPress={this.keyHandler}\n        onNodeSelect={onNodeSelect}\n        isFocus={isFocus}\n      >\n        {children}\n      </Animated>\n    );\n  }\n}\n\nTree.propTypes = propTypes;\nTree.defaultProps = defaultProps;\n","import React, { useState } from 'react';\nimport { usePromiseTracker } from 'react-promise-tracker';\nimport { withStyles } from '@material-ui/core/styles';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst styles = () => {\n  return {\n    loaderContainer: {\n      width: '-webkit-fill-available',\n      maxWidth: '50%%',\n      height: '100%',\n      display: 'flex',\n      backgroundColor: '#ffffff85',\n      position: 'fixed',\n      zIndex: '10'\n    },\n    swaggerSpinner: {\n      margin: 'auto'\n    }\n  };\n};\n\nconst Spinner = props => {\n  // Can pass { delay: 500 } to avoid flickering on high connection\n  const { promiseInProgress } = usePromiseTracker();\n  const [promise, setPromise] = useState('');\n  const { classes } = props;\n\n  if (promiseInProgress === true) {\n    setTimeout(() => {\n      setPromise(true);\n    }, 0);\n  }\n\n  if (promiseInProgress === false) {\n    setTimeout(() => {\n      setPromise(false);\n    }, 2000);\n  }\n\n  return (\n    promise && (\n      <div className={classes.loaderContainer}>\n        <Loader\n          className={classes.swaggerSpinner}\n          type=\"TailSpin\"\n          color=\"#324157\"\n          height={100}\n          width={100}\n          timeout={60000}\n        />\n      </div>\n    )\n  );\n};\n\nexport default withStyles(styles)(Spinner);\n","const styles = () => {\n  return {\n    spinner: {\n      position: 'absolute',\n      margin: 'auto',\n      width: 'fit-content',\n      height: 'fit-content'\n    },\n    hideIcon: {\n      top: '0',\n      left: '0',\n      position: 'absolute',\n      margin: '20px',\n      color: '#324157'\n    }\n  };\n};\n\nexport default styles;\n","import React, { PureComponent } from 'react';\nimport SwaggerUI from 'swagger-ui-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport 'swagger-ui-react/swagger-ui.css';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Spinner from './LoaderIndicator';\nimport styles from '../../styles/LivePreview.css';\n\nclass LivePreview extends PureComponent {\n  render() {\n    const { classes, swagger, id, onPreviewClick } = this.props;\n    return (\n      <div id={id} className=\"right-tree\">\n        {swagger && (\n          <>\n            <Spinner className={classes.spinner} />\n            <IconButton\n              id=\"previewHideButton\"\n              onClick={onPreviewClick}\n              className={classes.hideIcon}\n            >\n              <VisibilityOffIcon />\n            </IconButton>\n\n            <SwaggerUI\n              spec={swagger}\n              docExpansion=\"list\"\n              showExtensions=\"true\"\n            />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(LivePreview);\n","import BaseAPI from './BaseAPI';\n\nexport default class ModelAPI extends BaseAPI {\n  static getModelNames(teamId) {\n    const params = teamId ? { params: { teamId } } : {};\n    return this.execute('get', 'users/me/modelsList', params);\n  }\n\n  static getModels(params) {\n    return this.execute('get', `users/me/models`, { params }, true);\n  }\n\n  static getModelSwaggerAsFile(modelId, fileType) {\n    return this.execute('get', `models/${modelId}/swagger?type=${fileType}`);\n  }\n\n  static createModel(teamId, model) {\n    return this.execute('post', `/models/`, {\n      data: { model, teamId }\n    });\n  }\n\n  static getModel(modelId) {\n    return this.execute('get', `/models/${modelId}`);\n  }\n\n  static saveModel(modelId, model, hasExited) {\n    if (hasExited) {\n      return this.execute('put', `/models/${modelId}?hasExited=true`, { data: model });\n    }\n    return this.execute('put', `/models/${modelId}`, { data: model });\n  }\n\n  static freezeModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=freeze`);\n  }\n\n  static revertModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=revert`);\n  }\n\n  static duplicateModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=duplicate`);\n  }\n\n  static deleteModel(modelId) {\n    return this.execute('delete', `/models/${modelId}`);\n  }\n\n  static renameModel(modelId, name) {\n    return this.execute('patch', `/models/${modelId}`, { data: { name } });\n  }\n\n  static publishToApiManager(modelId) {\n    return this.execute('post', `/models/${modelId}/gravitee`);\n  }\n\n  static changeOrganizationModel(modelId, tags, name, organizationId) {\n    return this.execute('patch', `/models/${modelId}`, {\n      data: { tags, name, organizationId }\n    });\n  }\n\n  static getModelRules(modelId) {\n    return this.execute('get', `/models/${modelId}/refinerRules`);\n  }\n\n  static testModelRule(modelId, rules) {\n    return this.execute(\n      'post',\n      `/models/${modelId}/refinerRules?testOnly=true`,\n      {\n        data: rules\n      }\n    );\n  }\n\n  static createModelRule(modelId, rules) {\n    return this.execute('put', `/models/${modelId}/refinerRules`, {\n      data: rules\n    });\n  }\n\n  static updateModelRule(modelId, ruleId, rule) {\n    return this.execute('put', `/models/${modelId}/refinerRules/${ruleId}`, {\n      data: rule\n    });\n  }\n\n  static deleteModelRule(modelId, ruleId) {\n    return this.execute('delete', `/models/${modelId}/refinerRules/${ruleId}`);\n  }\n}\n","import BaseAPI from './BaseAPI';\n\nexport default class SwaggerAPI extends BaseAPI {\n  static getResourcesFromUploaded(data) {\n    return this.execute('post', '/swaggerUpload/resources', {\n      data: { jsonstring: data }\n    });\n  }\n\n  static getModelsFromResources(data) {\n    return this.execute('post', '/swaggerUpload/models', {\n      data\n    });\n  }\n\n  static requestPreview(data) {\n    return this.execute('post', '/swaggerPreviews', { data });\n  }\n\n  static requestLivePreview(data, organizationId) {\n    return this.execute(\n      'post',\n      `/swaggerLivePreviews?organizationId=${organizationId}`,\n      { data }\n    );\n  }\n}\n","import uniqid from 'uniqid';\n\nexport function searchTreeByKey(key, startnode) {\n  const stack = [startnode];\n  while (stack.length) {\n    const node = stack.pop();\n    if (node.nodeKey === key) return node;\n    stack.push(...node.children);\n  }\n  return stack.pop() || null;\n}\n\nexport function isAncestorOf(nodeKey, ofNodeKey, root) {\n  let ofNode = searchTreeByKey(ofNodeKey, root);\n\n  while (ofNode.nodeKey !== nodeKey && ofNode.parent) {\n    ofNode = searchTreeByKey(ofNode.parent, root);\n  }\n\n  return ofNode.nodeKey === nodeKey;\n}\n\nexport function cloneTree(node, parentNodeKey, generateId = true) {\n  return {\n    ...node,\n    nodeKey: generateId ? uniqid() : node.nodeKey,\n    parent: parentNodeKey,\n    children: node.children.map(child => {\n      return cloneTree(child, node.nodeKey, generateId);\n    })\n  };\n}\n\nexport function addNewChildNode(root, selectedNodeKey, direction) {\n  if (!selectedNodeKey) {\n    return {};\n  }\n  const allData = cloneTree(root, null, false);\n  const nodeWhereToAdd = searchTreeByKey(selectedNodeKey, allData);\n  const newNodeKey = uniqid();\n  const newNode = {\n    name: '',\n    direction: direction || nodeWhereToAdd.direction,\n    parent: nodeWhereToAdd.nodeKey,\n    children: [],\n    nodeKey: newNodeKey,\n    type: 'string',\n    referenceId: '',\n    isArray: false,\n    example: '',\n    abstract: true,\n    description: '',\n    queryable: false,\n    paginable: false,\n    patchable: false,\n    notImplemented: false,\n    isSubPath: false,\n    verbs: [],\n    calculated: false,\n    queryParams: '',\n    branchColor: nodeWhereToAdd.branchColor\n  };\n  nodeWhereToAdd.children.push(newNode);\n  nodeWhereToAdd.type = nodeWhereToAdd.type === 'array' ? 'array' : 'object';\n  return {\n    data: allData,\n    selectedNodeKey: newNodeKey,\n    node: newNode\n  };\n}\n\nexport function newTree(swaggerName) {\n  const parentId = uniqid();\n  return {\n    name: swaggerName,\n    direction: 'right',\n    nodeKey: parentId,\n    parent: null,\n    description: '',\n    example: '',\n    type: 'string',\n    referenceId: '',\n    isArray: false,\n    abstract: true,\n    queryable: false,\n    paginable: false,\n    patchable: false,\n    notImplemented: false,\n    isSubPath: false,\n    calculated: false,\n    queryParams: '',\n    verbs: ['SEARCH', 'POST', 'GET', 'PUT', 'DELETE'],\n    children: [\n      {\n        name: 'id',\n        direction: 'right',\n        description: '',\n        type: 'integer',\n        referenceId: '',\n        isArray: false,\n        abstract: true,\n        queryable: false,\n        paginable: false,\n        patchable: false,\n        notImplemented: false,\n        isSubPath: false,\n        calculated: true,\n        example: '',\n        parent: parentId,\n        nodeKey: uniqid(),\n        children: []\n      },\n      {\n        name: 'an attribute',\n        direction: 'right',\n        description: '',\n        type: 'integer',\n        referenceId: '',\n        isArray: false,\n        abstract: true,\n        queryable: false,\n        paginable: false,\n        patchable: false,\n        notImplemented: false,\n        isSubPath: false,\n        calculated: true,\n        example: '',\n        parent: parentId,\n        nodeKey: uniqid(),\n        children: []\n      }\n    ]\n  };\n}\n\nfunction updateSubNodes(parentNodeToUpdate, changeFunction) {\n  changeFunction(parentNodeToUpdate);\n\n  if (parentNodeToUpdate.children && parentNodeToUpdate.children.length > 0) {\n    parentNodeToUpdate.children.map(child =>\n      updateSubNodes(child, changeFunction)\n    );\n  }\n}\n\nfunction updateParentNodes(\n  root,\n  childNode,\n  changeFunction,\n  changeFunctionParam\n) {\n  changeFunction(childNode, changeFunctionParam);\n  if (childNode.parent) {\n    const parent = searchTreeByKey(childNode.parent, root);\n\n    if (parent) {\n      updateParentNodes(root, parent, changeFunction, changeFunctionParam);\n    }\n  }\n}\n\nexport function updateTree(root, node) {\n  const data = cloneTree(root, null, false);\n  const nodeToUpdate = searchTreeByKey(node.nodeKey, data);\n  nodeToUpdate.name = node.name;\n  nodeToUpdate.description = node.description;\n  nodeToUpdate.xDescription = node.xDescription;\n  nodeToUpdate.example = node.example;\n  nodeToUpdate.type = node.type;\n  nodeToUpdate.referenceId = node.referenceId;\n  nodeToUpdate.isArray = node.isArray;\n\n  nodeToUpdate.queryable = node.queryable;\n  nodeToUpdate.isSubPath = node.isSubPath;\n  nodeToUpdate.calculated = node.calculated;\n  nodeToUpdate.paginable = node.paginable;\n  nodeToUpdate.patchable = node.patchable;\n\n  nodeToUpdate.queryParams = node.queryParams;\n  nodeToUpdate.verbs = node.verbs;\n  nodeToUpdate.parent = node.parent;\n\n  if (nodeToUpdate.type === 'reference') {\n    nodeToUpdate.children = node.children;\n  }\n\n  if (node.branchColor !== nodeToUpdate.branchColor) {\n    updateSubNodes(nodeToUpdate, tmpNode => {\n      tmpNode.branchColor = node.branchColor; // eslint-disable-line no-param-reassign\n    });\n  }\n\n  if (nodeToUpdate.notImplemented !== node.notImplemented) {\n    if (node.notImplemented) {\n      // Mark all subnodes as not implemented\n      updateSubNodes(nodeToUpdate, tmpNode => {\n        tmpNode.notImplemented = true; // eslint-disable-line no-param-reassign\n      });\n    } else {\n      // Mark all parent nodes as implemented\n      updateParentNodes(data, nodeToUpdate, tmpNode => {\n        tmpNode.notImplemented = false; // eslint-disable-line no-param-reassign\n      });\n    }\n  }\n\n  if (nodeToUpdate.abstract !== node.abstract) {\n    if (node.abstract) {\n      // Add the parent to abstract\n      updateParentNodes(data, nodeToUpdate, tmpNode => {\n        tmpNode.abstract = true; // eslint-disable-line no-param-reassign\n      });\n    } else {\n      // remove only this from abstract\n      nodeToUpdate.abstract = node.abstract; // eslint-disable-line no-param-reassign\n    }\n  }\n\n  return data;\n}\n","const styles = () => {\n  return {\n    svgContainer: {\n      flexGrow: 3,\n      display: 'flex',\n      flexFlow: 'row nowrap',\n      backgroundColor: '#ececec',\n      height: 'calc(100% - 64.237px)',\n    },\n    treeContainer: {\n      position: 'relative'\n    },\n    previewButton: {\n      marginLeft: '50%',\n      backgroundColor: 'transparent',\n      position: 'fixed'\n    },\n    sideBarContainer: {\n      display: 'contents'\n    },\n    editButton: {\n      backgroundColor: '#324157',\n      borderRadius: '0'\n    },\n    toggleContainer: {},\n    tabButton: {\n      width: 'fit-content',\n      height: '40px'\n    },\n    optionMenu: {\n      width: '250px',\n      backgroundColor: '#e0e0e0',\n      position: 'absolute',\n      zIndex: 0,\n      height: '100%'\n    },\n    transparentFilter: {\n      width: '100%',\n      height: '100%',\n      zIndex: '99',\n      position: 'absolute'\n    },\n    headbandFrozenVersion: {\n      position: 'absolute',\n      width: '100%',\n      backgroundColor: '#2a8dff',\n      color: 'whitesmoke',\n      padding: '0.5rem 1rem'\n    },\n    exportMenu: {\n      width: '250px',\n      backgroundColor: '#e0e0e0',\n      position: 'absolute',\n      zIndex: 0,\n      height: '100%'\n    },\n    editIcon: {\n      color: 'white'\n    },\n    modalContainer: {\n      backgroundColor: '#e0e0e0',\n      width: 'fit-content',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      padding: '20px',\n      transform: 'translateY(-50%) translateX(-50%)',\n      borderRadius: '10px',\n      border: 'solid 1px black',\n      textAlign: 'center'\n    },\n    formControl: {\n      minWidth: '120px'\n    },\n    buttonSaveTeam: {\n      margin: '10px'\n    },\n    customHandle: {\n      cursor: 'ew-resize',\n      width: '5px',\n      height: '100px',\n      margin: '0px -5px',\n      background: '#324157',\n      borderRadius: '2px',\n      textAlign: 'center',\n      zIndex: '999',\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    customResizeBorder: {\n      cursor: 'ew-resize',\n      width: '10px',\n      background: 'white',\n      border: '1px solid #80808066',\n      display: 'flex',\n      zIndex: '999',\n      alignItems: 'center',\n      alignContent: 'center',\n      justifyContent: 'center',\n      overflow: 'visible'\n    },\n    customFrozenMindmapZoom: {\n      width: '115%'\n    },\n    showIcon: {\n      top: '0',\n      right: '0',\n      position: 'absolute',\n      marginTop: '80px',\n      marginRight: '20px',\n      color: '#2b8dff'\n    },\n    showIconFrozenTree: {\n      top: '0',\n      right: '0',\n      position: 'absolute',\n      marginTop: '6rem',\n      marginRight: '20px',\n      color: '#2b8dff',\n      zIndex: 999\n    },\n    showIconEdit: {\n      top: '0',\n      left: '0',\n      position: 'absolute',\n      marginTop: '80px',\n      marginLeft: '20px',\n      color: '#2b8dff'\n    }\n  };\n};\n\nexport default styles;\n"],"sourceRoot":""}