{"version":3,"sources":["styles/MindmapView.css.js","Components/mindmap/Link.js","Components/mindmap/Node.js","Components/mindmap/ContextMenu.js","Components/mindmap/Mindmap.js","Components/mindmap/Animated.js","Components/mindmap/Tree.js","Components/mindmap/LoaderIndicator.js","styles/LivePreview.css.js","Components/mindmap/LivePreview.js","api/ModelAPI.js","api/SwaggerAPI.js","helpers/tree_helper.js"],"names":["styles","svgContainer","flexGrow","display","flexFlow","backgroundColor","height","treeContainer","position","previewButton","marginLeft","sideBarContainer","editButton","borderRadius","toggleContainer","tabButton","width","optionMenu","zIndex","transparentFilter","headbandFrozenVersion","color","padding","exportMenu","editIcon","modalContainer","top","left","transform","border","textAlign","formControl","minWidth","buttonSaveTeam","margin","customHandle","cursor","background","overflow","alignItems","customResizeBorder","alignContent","justifyContent","customFrozenMindmapZoom","showIcon","right","marginTop","marginRight","showIconFrozenTree","showIconEdit","Link","x1","y1","x2","y2","d","this","props","colorScheme","red","green","blue","branchColor","style","stroke","pathProps","isDottedLine","PureComponent","Node","plusSignHandler","event","stopPropagation","addNewChildNode","nodeKey","mainNodeLeftPlusSignHandler","onDragStart","name","onDragStopRight","onDragStop","onDragStopLeft","onDragStopAbove","onDragStopBelow","nodeTextLength","length","handleLeftClick","onNodeSelect","node","data","handleRightClick","e","openContextMenu","parent","className","y","currentNode","keyProp","x","textAnchor","dy","textDecoration","label","type","isArray","isSubPath","direction","textProps","fontWeight","abstract","r","isDraggingMoving","cy","cx","onMouseUp","leftPlusSign","onClick","gProps","onContextMenu","onMouseDown","createNode","Component","ContextMenu","id","data-action","insert","open","copy","cut","paste","delete","Mindmap","openNodeContextMenu","preventDefault","nodeContext","setState","showContext","contextContainerStyle","clientY","clientX","closeContextMenu","onWheelScroll","zoom","state","deltaY","nodeName","isPaning","isDragging","draggedNodeKey","moveNode","onPanStart","startX","changedTouches","startY","onPanMove","panX","panY","onPanEnd","keydown","onKeyPress","prevProps","isFocus","mindmap","focus","tabIndex","onFocus","ref","viewBox","minX","minY","maxX","nodeWidth","maxY","onMouseMove","onMouseLeave","onWheel","pointerEvents","links","map","link","target","charCodeAt","notImplemented","key","source","nodes","filter","n","labelProp","Width","Animated","animated","initialX","initialY","l","animate","initialState","newState","addedNodes","n1","every","n2","areNodesSame","base","old","getClosestAncestor","new","changedNodes","some","find","removedNodes","addedLinks","l1","l2","areLinksSame","changedLinks","removedLinks","concat","stateWithNode","stateWithoutNode","oldParent","newParent","getChildren","c","nextProps","clearInterval","animation","counter","animationContext","getAnimationContext","setInterval","steps","calculateNewState","duration","a","b","interval","calculateNodePosition","calculateLinkPosition","start","end","calculateNewValue","easing","defaultProps","easeQuadOut","children","margins","bottom","Tree","previousStates","toCopyNodeKey","toCutNodeKey","fullScreen","swaggerHtml","keyHandler","which","f2Key","downKeyHandler","upKeyHandler","leftKeyHandler","rightKeyHandler","ctrlKey","boldHandler","copyHandler","cutHandler","pasteHandler","metaKey","onUndo","enterKeyHandler","insertKeyHandler","deleteKeyHandler","onLetterDown","destinationNodeKey","isAncestorOf","allData","cloneTree","nodeWhereToAdd","searchTreeByKey","nodeToDelete","parentNode","splice","findIndex","v","newNode","push","onTreeUpdate","dataUpdated","destIndex","getTreeDepthAndCardinality","depth","cardinality","maxDepth","forEach","getTreeTextWidth","textWidth","maxLength","lengths","Math","max","propagateDirection","dir","propagateShiftLeft","horizontalShift","nodeShift","propagateShiftRight","nodePlacementAdaptation","treeMaxLength","uncle","child","selectedNodeKey","openReferenceHandler","ModelAPI","getModel","referenceId","then","populatedModel","freezeTag","history","pathname","modelId","model","nodeToCopy","Object","keys","_","isString","indexOf","replace","onToolsMenuChange","indexWhereToAdd","newNodeKey","uniqid","example","description","queryParams","queryable","paginable","patchable","calculated","selectedNode","indexWhereToGo","goToParent","goToFirstChild","contentHeight","ld","contentWidth","leftData","clone","rootLeft","tree","size","hierarchy","nodesLeft","descendants","linksLeft","rightData","rd","rootRight","nodesRight","linksRight","dh","nl","ll","shift","centerX","centerY","onSaveTree","saveTree","withStyles","loaderContainer","maxWidth","swaggerSpinner","promiseInProgress","usePromiseTracker","useState","promise","setPromise","classes","setTimeout","timeout","spinner","hideIcon","LivePreview","swagger","onPreviewClick","IconButton","spec","docExpansion","showExtensions","teamId","params","execute","fileType","hasExited","tags","organizationId","rules","ruleId","rule","BaseAPI","SwaggerAPI","jsonstring","startnode","stack","pop","ofNodeKey","root","ofNode","parentNodeKey","generateId","verbs","newTree","swaggerName","parentId","updateSubNodes","parentNodeToUpdate","changeFunction","updateParentNodes","childNode","changeFunctionParam","updateTree","nodeToUpdate","xDescription","tmpNode"],"mappings":"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","file":"static/js/3.b5adac44.chunk.js","sourcesContent":["const styles = () => {\r\n  return {\r\n    svgContainer: {\r\n      flexGrow: 3,\r\n      display: 'flex',\r\n      flexFlow: 'row nowrap',\r\n      backgroundColor: '#ececec',\r\n      height: 'calc(100% - 64.237px)',\r\n    },\r\n    treeContainer: {\r\n      position: 'relative'\r\n    },\r\n    previewButton: {\r\n      marginLeft: '50%',\r\n      backgroundColor: 'transparent',\r\n      position: 'fixed'\r\n    },\r\n    sideBarContainer: {\r\n      display: 'contents'\r\n    },\r\n    editButton: {\r\n      backgroundColor: '#324157',\r\n      borderRadius: '0'\r\n    },\r\n    toggleContainer: {},\r\n    tabButton: {\r\n      width: 'fit-content',\r\n      height: '40px'\r\n    },\r\n    optionMenu: {\r\n      width: '250px',\r\n      backgroundColor: '#e0e0e0',\r\n      position: 'absolute',\r\n      zIndex: 0,\r\n      height: '100%'\r\n    },\r\n    transparentFilter: {\r\n      width: '100%',\r\n      height: '100%',\r\n      zIndex: '99',\r\n      position: 'absolute'\r\n    },\r\n    headbandFrozenVersion: {\r\n      position: 'absolute',\r\n      width: '100%',\r\n      backgroundColor: '#2a8dff',\r\n      color: 'whitesmoke',\r\n      padding: '0.5rem 1rem'\r\n    },\r\n    exportMenu: {\r\n      width: '250px',\r\n      backgroundColor: '#e0e0e0',\r\n      position: 'absolute',\r\n      zIndex: 0,\r\n      height: '100%'\r\n    },\r\n    editIcon: {\r\n      color: 'white'\r\n    },\r\n    modalContainer: {\r\n      backgroundColor: '#e0e0e0',\r\n      width: 'fit-content',\r\n      position: 'absolute',\r\n      top: '50%',\r\n      left: '50%',\r\n      padding: '20px',\r\n      transform: 'translateY(-50%) translateX(-50%)',\r\n      borderRadius: '10px',\r\n      border: 'solid 1px black',\r\n      textAlign: 'center'\r\n    },\r\n    formControl: {\r\n      minWidth: '120px'\r\n    },\r\n    buttonSaveTeam: {\r\n      margin: '10px'\r\n    },\r\n    customHandle: {\r\n      cursor: 'ew-resize',\r\n      width: '5px',\r\n      height: '100px',\r\n      margin: '0px -5px',\r\n      background: '#324157',\r\n      borderRadius: '2px',\r\n      textAlign: 'center',\r\n      zIndex: '999',\r\n      overflow: 'hidden',\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    },\r\n    customResizeBorder: {\r\n      cursor: 'ew-resize',\r\n      width: '10px',\r\n      background: 'white',\r\n      border: '1px solid #80808066',\r\n      display: 'flex',\r\n      zIndex: '999',\r\n      alignItems: 'center',\r\n      alignContent: 'center',\r\n      justifyContent: 'center',\r\n      overflow: 'visible'\r\n    },\r\n    customFrozenMindmapZoom: {\r\n      width: '115%'\r\n    },\r\n    showIcon: {\r\n      top: '0',\r\n      right: '0',\r\n      position: 'absolute',\r\n      marginTop: '80px',\r\n      marginRight: '20px',\r\n      color: '#2b8dff'\r\n    },\r\n    showIconFrozenTree: {\r\n      top: '0',\r\n      right: '0',\r\n      position: 'absolute',\r\n      marginTop: '6rem',\r\n      marginRight: '20px',\r\n      color: '#2b8dff',\r\n      zIndex: 999\r\n    },\r\n    showIconEdit: {\r\n      top: '0',\r\n      left: '0',\r\n      position: 'absolute',\r\n      marginTop: '80px',\r\n      marginLeft: '20px',\r\n      color: '#2b8dff'\r\n    }\r\n  };\r\n};\r\n\r\nexport default styles;\r\n","/* eslint-disable react/forbid-prop-types */\r\n/* eslint-disable no-bitwise */\r\nimport PropTypes from 'prop-types';\r\nimport React, { PureComponent } from 'react';\r\n\r\nconst propTypes = {\r\n  x1: PropTypes.number.isRequired,\r\n  x2: PropTypes.number.isRequired,\r\n  y1: PropTypes.number.isRequired,\r\n  y2: PropTypes.number.isRequired,\r\n  pathProps: PropTypes.object.isRequired\r\n};\r\n\r\nfunction diagonal(x1, y1, x2, y2) {\r\n  return `M${y1},${x1}C${(y1 + y2) / 2},${x1} ${(y1 + y2) /\r\n    2},${x2} ${y2},${x2}`;\r\n}\r\n\r\nexport default class Link extends PureComponent {\r\n  render() {\r\n    const d = diagonal(\r\n      this.props.x1,\r\n      this.props.y1,\r\n      this.props.x2,\r\n      this.props.y2\r\n    );\r\n\r\n    const colorScheme = this.props.colorScheme & 31;\r\n    const red = 245 + colorScheme / 3;\r\n    const green = 166 + colorScheme;\r\n    const blue = 35 + colorScheme;\r\n    const color = this.props.branchColor || `rgb(${red}, ${green}, ${blue})`;\r\n    return (\r\n      <path\r\n        style={{ stroke: color }}\r\n        {...this.props.pathProps}\r\n        {...(this.props.isDottedLine && { 'stroke-dasharray': '5, 5' })}\r\n        d={d}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nLink.propTypes = propTypes;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\n\r\nconst propTypes = {\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  keyProp: PropTypes.string.isRequired,\r\n  labelProp: PropTypes.string.isRequired,\r\n  nodeKey: PropTypes.string.isRequired\r\n};\r\n\r\nexport default class Node extends Component {\r\n  plusSignHandler = event => {\r\n    event.stopPropagation(); // empêche la selection du noeud qui porte le signe plus\r\n    this.props.addNewChildNode(this.props.nodeKey);\r\n    return event;\r\n  };\r\n\r\n  mainNodeLeftPlusSignHandler = event => {\r\n    // spécialement pour le noeud principal, signe plus à gauche\r\n    event.stopPropagation(); // empêche la selection du noeud qui porte le signe plus\r\n    this.props.addNewChildNode(this.props.nodeKey, 'left');\r\n    return event;\r\n  };\r\n\r\n  onDragStart = event => {\r\n    event.stopPropagation(); // empêche le paning\r\n    this.props.onDragStart(this.props.name, this.props.nodeKey); // prévient le mindmap de quel noeud est draggé\r\n    return event;\r\n  };\r\n\r\n  onDragStopRight = event => {\r\n    event.stopPropagation(); // empêche le paning\r\n    this.props.onDragStop(this.props.nodeKey, 'right'); // informe le mindmap de là où le noeud est droppé\r\n    return event;\r\n  };\r\n\r\n  onDragStopLeft = event => {\r\n    event.stopPropagation(); // empêche le paning\r\n    this.props.onDragStop(this.props.nodeKey, 'left'); // informe le mindmap de là où le noeud est droppé\r\n    return event;\r\n  };\r\n\r\n  onDragStopAbove = event => {\r\n    event.stopPropagation(); // empêche le paning\r\n    this.props.onDragStop(this.props.nodeKey, 'above'); // informe le mindmap de là où le noeud est droppé\r\n    return event;\r\n  };\r\n\r\n  onDragStopBelow = event => {\r\n    event.stopPropagation(); // empêche le paning\r\n    this.props.onDragStop(this.props.nodeKey, 'below'); // informe le mindmap de là où le noeud est droppé\r\n    return event;\r\n  };\r\n\r\n  nodeTextLength = () => {\r\n    return this.props.name.length * 9;\r\n  };\r\n\r\n  handleLeftClick = () => {\r\n    this.props.onNodeSelect(this.props.node.data);\r\n  };\r\n\r\n  handleRightClick = e => {\r\n    this.props.onNodeSelect(this.props.node.data);\r\n    this.props.openContextMenu(e);\r\n  };\r\n\r\n  createNode() {\r\n    if (!this.props.parent) {\r\n      // we are in main node\r\n      return (\r\n        <svg\r\n          className=\"svg-rect\"\r\n          width={this.nodeTextLength() + 6}\r\n          height=\"30\"\r\n          y=\"-10\"\r\n        >\r\n          <rect\r\n            className={\r\n              this.props.currentNode.nodeKey === this.props[this.props.keyProp]\r\n                ? 'selected-node'\r\n                : 'main-node'\r\n            }\r\n            width={this.nodeTextLength() + 6}\r\n            height={30}\r\n          />\r\n          <text\r\n            x=\"50%\"\r\n            y=\"50%\"\r\n            textAnchor=\"middle\"\r\n            dy=\".3em\"\r\n            textDecoration=\"underline\"\r\n            className=\"node\"\r\n          >\r\n            /{this.props.name}\r\n          </text>\r\n        </svg>\r\n      );\r\n    }\r\n    const label =\r\n      (this.props.type === 'reference' && this.props.isArray ? '[' : '') +\r\n      (this.props.type === 'reference' ? '#' : '') +\r\n      (this.props.isSubPath === true ? '/' : '') +\r\n      (this.props.type === 'array' ? '[' : '') +\r\n      this.props.name +\r\n      (this.props.type === 'array' ? ']' : '') +\r\n      (this.props.type === 'reference' && this.props.isArray ? ']' : '');\r\n    return (\r\n      <g>\r\n        <rect\r\n          className={\r\n            this.nodeTextLength() === 0 ? 'error-node' : 'noerror-node'\r\n          }\r\n          width={25}\r\n          height={20}\r\n          y=\"-17\"\r\n          x={this.props.direction === 'left' ? -25 : 0}\r\n        />\r\n        <rect\r\n          className={\r\n            this.props.currentNode.nodeKey === this.props[this.props.keyProp]\r\n              ? 'selected-node'\r\n              : 'unselected-node'\r\n          }\r\n          width={this.nodeTextLength()}\r\n          height={20}\r\n          y=\"-17\"\r\n          x={this.props.direction === 'left' ? -this.nodeTextLength() : 0}\r\n        />\r\n        <text\r\n          textAnchor={this.props.direction === 'right' ? 'start' : 'end'}\r\n          {...this.props.textProps}\r\n          className=\"node\"\r\n          textDecoration={this.props.isSubPath === true ? 'underline' : ''}\r\n          fontWeight={this.props.abstract === true ? 'bold' : ''}\r\n        >\r\n          {label}\r\n        </text>\r\n        <circle\r\n          r=\"10\"\r\n          className={this.props.isDraggingMoving ? 'active' : 'inactive'}\r\n          cy=\"-13\"\r\n          cx={\r\n            this.props.direction === 'left'\r\n              ? -this.nodeTextLength() / 2\r\n              : this.nodeTextLength() / 2\r\n          }\r\n          onMouseUp={this.onDragStopAbove}\r\n        />\r\n        <circle\r\n          r=\"10\"\r\n          className={this.props.isDraggingMoving ? 'active' : 'inactive'}\r\n          cy=\"7\"\r\n          cx={\r\n            this.props.direction === 'left'\r\n              ? -this.nodeTextLength() / 2\r\n              : this.nodeTextLength() / 2\r\n          }\r\n          onMouseUp={this.onDragStopBelow}\r\n        />\r\n      </g>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let leftPlusSign;\r\n    if (this.props.parent === null) {\r\n      leftPlusSign = (\r\n        <g onClick={this.mainNodeLeftPlusSignHandler}>\r\n          <rect className=\"plussign\" width=\"11\" height=\"11\" y=\"0\" x=\"-8\" />\r\n          <text className=\"plussign\" y=\"11\" x=\"-7\">\r\n            +\r\n          </text>\r\n        </g>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <g\r\n        {...this.props.gProps}\r\n        transform={`translate(${this.props.y}, ${this.props.x - 5})`}\r\n        onContextMenu={e => this.handleRightClick(e)}\r\n        onMouseDown={this.props.parent !== null ? this.onDragStart : null}\r\n      >\r\n        <g className=\"allnodes\" onClick={this.handleLeftClick}>\r\n          {this.createNode()}\r\n          <circle\r\n            r=\"10\"\r\n            className={\r\n              this.props.isDraggingMoving &&\r\n              (this.props.direction === 'left' || this.props.parent === null)\r\n                ? 'active'\r\n                : 'inactive'\r\n            }\r\n            cy=\"-3\"\r\n            cx={\r\n              -20 -\r\n              (this.props.direction === 'left' ? this.nodeTextLength() : 0)\r\n            }\r\n            onMouseUp={this.onDragStopLeft}\r\n          />\r\n          <circle\r\n            r=\"10\"\r\n            className={\r\n              this.props.isDraggingMoving && this.props.direction === 'right'\r\n                ? 'active'\r\n                : 'inactive'\r\n            }\r\n            cy=\"-3\"\r\n            cx={\r\n              (this.props.direction === 'right' ? this.nodeTextLength() : 0) +\r\n              20\r\n            }\r\n            onMouseUp={this.onDragStopRight}\r\n          />\r\n          {leftPlusSign}\r\n          {this.props.type !== 'reference' && (\r\n            <g onClick={this.plusSignHandler}>\r\n              <rect\r\n                className={\r\n                  this.props.isDraggingMoving ? 'plussign-dragging' : 'plussign'\r\n                }\r\n                width=\"11\"\r\n                height=\"11\"\r\n                y=\"0\"\r\n                x={\r\n                  this.props.direction === 'right'\r\n                    ? this.nodeTextLength()\r\n                    : -8 - this.nodeTextLength()\r\n                }\r\n              />\r\n              <text\r\n                className={\r\n                  this.props.isDraggingMoving ? 'plussign-dragging' : 'plussign'\r\n                }\r\n                y=\"11\"\r\n                x={\r\n                  this.props.direction === 'right'\r\n                    ? 1 + this.nodeTextLength()\r\n                    : -7 - this.nodeTextLength()\r\n                }\r\n              >\r\n                +\r\n              </text>\r\n            </g>\r\n          )}\r\n        </g>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nNode.propTypes = propTypes;\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\nimport React, { PureComponent } from 'react';\r\n\r\nexport default class ContextMenu extends PureComponent {\r\n  render() {\r\n    return (\r\n      <ul className=\"custom-ul\" id=\"container-menu\">\r\n        {(this.props.currentNode.type !== 'reference' && (\r\n          <li data-action=\"addChild\" onClick={this.props.insert}>\r\n            Add Child\r\n          </li>\r\n        )) || (\r\n          <li data-action=\"open\" onClick={this.props.open}>\r\n            Open\r\n          </li>\r\n        )}\r\n        <li data-action=\"copy\" onClick={this.props.copy}>\r\n          Copy\r\n        </li>\r\n        <li data-action=\"cut\" onClick={this.props.cut}>\r\n          Cut\r\n        </li>\r\n        <li data-action=\"paste\" onClick={this.props.paste}>\r\n          Paste\r\n        </li>\r\n        <li data-action=\"delete\" onClick={this.props.delete}>\r\n          Delete\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable react/sort-comp */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable react/forbid-prop-types */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport keydown from 'react-keydown';\r\nimport Link from './Link';\r\nimport Node from './Node';\r\nimport ContextMenu from './ContextMenu';\r\n\r\nconst propTypes = {\r\n  keyProp: PropTypes.string.isRequired,\r\n  labelProp: PropTypes.string.isRequired,\r\n  gProps: PropTypes.object.isRequired,\r\n  textProps: PropTypes.object.isRequired\r\n};\r\n\r\nclass Mindmap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      panX: 0,\r\n      panY: 0,\r\n      zoom: 0.7,\r\n      isPaning: false,\r\n      isDragging: false,\r\n      isDraggingMoving: false,\r\n      showContext: false,\r\n      contextContainerStyle: {}\r\n    };\r\n\r\n    this.nodeContext = false;\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps({ keydown }) {\r\n    if (keydown.event) {\r\n      this.props.onKeyPress({ keydown });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.isFocus !== this.props.isFocus &&\r\n      this.props.isFocus &&\r\n      this.mindmap\r\n    ) {\r\n      this.mindmap.focus();\r\n    }\r\n  }\r\n\r\n  openNodeContextMenu = e => {\r\n    e.preventDefault();\r\n    this.nodeContext = true;\r\n    this.setState({\r\n      showContext: true,\r\n      contextContainerStyle: {\r\n        display: 'block',\r\n        top: `${e.clientY}px`,\r\n        left: `${e.clientX}px`\r\n      }\r\n    });\r\n  };\r\n\r\n  closeContextMenu = () => {\r\n    this.setState({\r\n      showContext: false\r\n    });\r\n  };\r\n\r\n  onWheelScroll = e => {\r\n    let zoom = this.state.zoom;\r\n    if (e.deltaY < 0) {\r\n      zoom *= 1.1;\r\n      if (zoom > 3) zoom = 3;\r\n    } else {\r\n      zoom *= 0.94;\r\n      if (zoom < 0.4) zoom = 0.4;\r\n    }\r\n    this.setState({ zoom });\r\n  };\r\n\r\n  onDragStart = (nodeName, nodeKey) => {\r\n    this.setState({\r\n      isPaning: false,\r\n      isDragging: true,\r\n      isDraggingMoving: false,\r\n      draggedNodeKey: nodeKey\r\n    });\r\n  };\r\n\r\n  onDragStop = (nodeKey, direction) => {\r\n    this.setState({\r\n      isPaning: false,\r\n      isDragging: false,\r\n      isDraggingMoving: false\r\n    });\r\n    this.props.moveNode(this.state.draggedNodeKey, nodeKey, direction);\r\n  };\r\n\r\n  onPanStart = e => {\r\n    const startX =\r\n      typeof e.clientX === 'undefined'\r\n        ? e.changedTouches[0].clientX\r\n        : e.clientX;\r\n    const startY =\r\n      typeof e.clientY === 'undefined'\r\n        ? e.changedTouches[0].clientY\r\n        : e.clientY;\r\n    this.setState({ isPaning: true, isDragging: false, startX, startY });\r\n  };\r\n\r\n  onPanMove = e => {\r\n    if (this.state.isDragging) {\r\n      this.setState({ isDraggingMoving: true });\r\n      return;\r\n    }\r\n\r\n    if (!this.state.isPaning) {\r\n      return;\r\n    }\r\n    const x =\r\n      typeof e.clientX === 'undefined'\r\n        ? e.changedTouches[0].clientX\r\n        : e.clientX;\r\n    const y =\r\n      typeof e.clientY === 'undefined'\r\n        ? e.changedTouches[0].clientY\r\n        : e.clientY;\r\n\r\n    this.setState({\r\n      panX: this.state.panX + x - this.state.startX,\r\n      panY: this.state.panY + y - this.state.startY,\r\n      startX: x,\r\n      startY: y\r\n    });\r\n  };\r\n\r\n  onPanEnd = () => {\r\n    this.setState({\r\n      isPaning: false,\r\n      isDragging: false,\r\n      isDraggingMoving: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        tabIndex=\"0\"\r\n        id=\"mindmap\"\r\n        onClick={this.closeContextMenu}\r\n        onFocus={() => this.props.onFocus()}\r\n        ref={ref => {\r\n          this.mindmap = ref;\r\n        }}\r\n      >\r\n        <div\r\n          className=\"custom-menu\"\r\n          id=\"context-container\"\r\n          style={this.state.contextContainerStyle}\r\n        >\r\n          {this.state.showContext && <ContextMenu {...this.props} />}\r\n        </div>\r\n        <svg\r\n          viewBox={`${this.props.minX} ${this.props.minY} ${this.props.maxX -\r\n            this.props.minX +\r\n            this.props.nodeWidth +\r\n            1} ${this.props.maxY - this.props.minY + 1}`}\r\n          className=\"custom\"\r\n          onMouseDown={this.onPanStart}\r\n          onMouseMove={this.onPanMove}\r\n          onMouseLeave={this.onPanEnd}\r\n          onMouseUp={this.onPanEnd}\r\n          onWheel={this.onWheelScroll}\r\n          style={{ pointerEvents: 'auto', height: '100%' }}\r\n        >\r\n          <g\r\n            transform={` translate(${this.state.panX} ${this.state.panY}) scale(${this.state.zoom}) `}\r\n          >\r\n            {this.props.links.map(link => (\r\n              <Link\r\n                colorScheme={link.target.data.name.charCodeAt(0)}\r\n                branchColor={link.target.data.branchColor}\r\n                isDottedLine={link.target.data.notImplemented}\r\n                key={link.target.data[this.props.keyProp]}\r\n                keyProp={this.props.keyProp}\r\n                source={link.source}\r\n                target={link.target}\r\n                x1={link.source.x}\r\n                x2={link.target.x}\r\n                y1={\r\n                  link.source.y +\r\n                  (link.source.data.direction === 'right' &&\r\n                  link.target.data.direction === 'right'\r\n                    ? link.source.data.name.length * 9\r\n                    : 0) -\r\n                  (link.source.data.direction === 'left' &&\r\n                  link.target.data.direction === 'left'\r\n                    ? link.source.data.name.length * 9\r\n                    : 0)\r\n                }\r\n                y2={\r\n                  link.target\r\n                    .y /* + ((link.target.data.direction === \"left\"\t)?link.target.data.name.length*9:0)  */\r\n                }\r\n                pathProps={{\r\n                  ...this.props.pathProps,\r\n                  ...link.target.data.pathProps\r\n                }}\r\n              />\r\n            ))}\r\n            {this.props.nodes\r\n              .filter(n => n.data.nodeKey)\r\n              .map(node => (\r\n                <g key={node.data.nodeKey}>\r\n                  <Link\r\n                    branchColor={node.data.branchColor}\r\n                    isDottedLine={node.data.notImplemented}\r\n                    x1={node.x}\r\n                    x2={node.x}\r\n                    y1={\r\n                      node.y +\r\n                      (node.data.direction === 'right'\r\n                        ? node.data.name.length * 9\r\n                        : 0)\r\n                    }\r\n                    y2={\r\n                      node.y -\r\n                      (node.data.direction === 'left'\r\n                        ? node.data.name.length * 9\r\n                        : 0)\r\n                    }\r\n                    pathProps={{\r\n                      ...this.props.pathProps,\r\n                      ...node.data.pathProps\r\n                    }}\r\n                  />\r\n                  <Node\r\n                    node={node}\r\n                    currentNode={this.props.currentNode}\r\n                    onNodeSelect={this.props.onNodeSelect}\r\n                    addNewChildNode={this.props.addNewChildNode}\r\n                    onDragStart={this.onDragStart}\r\n                    onDragStop={this.onDragStop}\r\n                    openContextMenu={this.openNodeContextMenu}\r\n                    isDraggingMoving={this.state.isDraggingMoving}\r\n                    key={node.data[this.props.keyProp]}\r\n                    keyProp={this.props.keyProp}\r\n                    labelProp={this.props.labelProp}\r\n                    x={node.x}\r\n                    y={node.y}\r\n                    Width={this.props.nodeWidth}\r\n                    gProps={{\r\n                      ...this.props.gProps,\r\n                      ...node.data.gProps\r\n                    }}\r\n                    textProps={{\r\n                      ...this.props.textProps,\r\n                      ...node.data.textProps\r\n                    }}\r\n                    {...node.data}\r\n                  />\r\n                </g>\r\n              ))}\r\n          </g>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMindmap.propTypes = propTypes;\r\nexport default keydown(Mindmap);\r\n","/* eslint-disable camelcase */\r\n/* eslint-disable import/no-unresolved */\r\n/* eslint-disable react/forbid-prop-types */\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport Mindmap from './Mindmap';\r\n\r\nconst propTypes = {\r\n  animated: PropTypes.bool.isRequired,\r\n  getChildren: PropTypes.func.isRequired,\r\n  keyProp: PropTypes.string.isRequired,\r\n  links: PropTypes.array.isRequired,\r\n  nodes: PropTypes.array.isRequired,\r\n  duration: PropTypes.number.isRequired,\r\n  easing: PropTypes.func.isRequired,\r\n  steps: PropTypes.number.isRequired\r\n};\r\n\r\nexport default class Animated extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (props.animated) {\r\n      // If we are animating, we set the initial positions of the nodes and links to be the position of the root node\r\n      // and animate from there\r\n      const initialX = props.nodes[0].x;\r\n      const initialY = props.nodes[0].y;\r\n      this.state = {\r\n        nodes: props.nodes.map(n =>\r\n          ({ ...n, x: initialX, y: initialY})\r\n        ),\r\n        links: props.links.map(l => ({\r\n          source: {\r\n            ...l.source,\r\n            x: initialX,\r\n            y: initialY\r\n          },\r\n          target: {\r\n            ...l.target,\r\n            x: initialX,\r\n            y: initialY\r\n          }\r\n        }))\r\n      };\r\n    } else {\r\n      this.state = {\r\n        nodes: props.nodes,\r\n        links: props.links\r\n      };\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.animated) {\r\n      this.animate(this.props);\r\n    }\r\n  }\r\n\r\n  getAnimationContext(initialState, newState) {\r\n    // Nodes/links that are in both states need to be moved from the old position to the new one\r\n    // Nodes/links only in the initial state are being removed, and should be moved to the position\r\n    // of the closest ancestor that still exists, or the new root\r\n    // Nodes/links only in the new state are being added, and should be moved from the position of\r\n    // the closest ancestor that previously existed, or the old root\r\n\r\n    // The base determines which node/link the data (like classes and labels) comes from for rendering\r\n\r\n    // We only run this once at the start of the animation, so optimization is less important\r\n    const addedNodes = newState.nodes\r\n      .filter(n1 => initialState.nodes.every(n2 => !this.areNodesSame(n1, n2)))\r\n      .map(n1 => ({\r\n        base: n1,\r\n        old: this.getClosestAncestor(n1, newState, initialState),\r\n        new: n1\r\n      }));\r\n    const changedNodes = newState.nodes\r\n      .filter(n1 => initialState.nodes.some(n2 => this.areNodesSame(n1, n2)))\r\n      .map(n1 => ({\r\n        base: n1,\r\n        old: initialState.nodes.find(n2 => this.areNodesSame(n1, n2)),\r\n        new: n1\r\n      }));\r\n    const removedNodes = initialState.nodes\r\n      .filter(n1 => newState.nodes.every(n2 => !this.areNodesSame(n1, n2)))\r\n      .map(n1 => ({\r\n        base: n1,\r\n        old: n1,\r\n        new: this.getClosestAncestor(n1, initialState, newState)\r\n      }));\r\n\r\n    const addedLinks = newState.links\r\n      .filter(l1 => initialState.links.every(l2 => !this.areLinksSame(l1, l2)))\r\n      .map(l1 => ({\r\n        base: l1,\r\n        old: this.getClosestAncestor(l1.target, newState, initialState),\r\n        new: l1\r\n      }));\r\n    const changedLinks = newState.links\r\n      .filter(l1 => initialState.links.some(l2 => this.areLinksSame(l1, l2)))\r\n      .map(l1 => ({\r\n        base: l1,\r\n        old: initialState.links.find(l2 => this.areLinksSame(l1, l2)),\r\n        new: l1\r\n      }));\r\n    const removedLinks = initialState.links\r\n      .filter(l1 => newState.links.every(l2 => !this.areLinksSame(l1, l2)))\r\n      .map(l1 => ({\r\n        base: l1,\r\n        old: l1,\r\n        new: this.getClosestAncestor(l1.target, initialState, newState)\r\n      }));\r\n\r\n    return {\r\n      nodes: changedNodes.concat(addedNodes).concat(removedNodes),\r\n      links: changedLinks.concat(addedLinks).concat(removedLinks)\r\n    };\r\n  }\r\n\r\n  getClosestAncestor(node, stateWithNode, stateWithoutNode) {\r\n    let oldParent = node;\r\n\r\n    while (oldParent) {\r\n      // eslint-disable-next-line\r\n      let newParent = stateWithoutNode.nodes.find(n =>\r\n        this.areNodesSame(oldParent, n)\r\n      );\r\n\r\n      if (newParent) {\r\n        return newParent;\r\n      }\r\n      // eslint-disable-next-line\r\n      oldParent = stateWithNode.nodes.find(n =>\r\n        (this.props.getChildren(n) || []).some(c =>\r\n          this.areNodesSame(oldParent, c)\r\n        )\r\n      );\r\n    }\r\n\r\n    return stateWithoutNode.nodes[0];\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (\r\n      nextProps.nodes === this.props.nodes &&\r\n      nextProps.links === this.props.links\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (!nextProps.animated) {\r\n      this.setState({\r\n        nodes: nextProps.nodes,\r\n        links: nextProps.links\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.animate(nextProps);\r\n  }\r\n\r\n  animate(props) {\r\n    // Stop previous animation if one is already in progress.  We will start the next animation\r\n    // from the position we are currently in\r\n    clearInterval(this.animation);\r\n\r\n    let counter = 0;\r\n\r\n    // Do as much one-time calculation outside of the animation step, which needs to be fast\r\n    const animationContext = this.getAnimationContext(this.state, props);\r\n\r\n    this.animation = setInterval(() => {\r\n      counter += 1;\r\n\r\n      if (counter === props.steps) {\r\n        clearInterval(this.animation);\r\n        this.animation = null;\r\n        this.setState({\r\n          nodes: props.nodes,\r\n          links: props.links\r\n        });\r\n        return;\r\n      }\r\n\r\n      this.setState(\r\n        this.calculateNewState(animationContext, counter / props.steps)\r\n      );\r\n    }, props.duration / props.steps);\r\n  }\r\n\r\n  areNodesSame(a, b) {\r\n    return a.data[this.props.keyProp] === b.data[this.props.keyProp];\r\n  }\r\n\r\n  areLinksSame(a, b) {\r\n    return (\r\n      a.source.data[this.props.keyProp] === b.source.data[this.props.keyProp] &&\r\n      a.target.data[this.props.keyProp] === b.target.data[this.props.keyProp]\r\n    );\r\n  }\r\n\r\n  calculateNewState(animationContext, interval) {\r\n    return {\r\n      nodes: animationContext.nodes.map(n =>\r\n        this.calculateNodePosition(n.base, n.old, n.new, interval)\r\n      ),\r\n      links: animationContext.links.map(l =>\r\n        this.calculateLinkPosition(l.base, l.old, l.new, interval)\r\n      )\r\n    };\r\n  }\r\n\r\n  calculateNodePosition(node, start, end, interval) {\r\n    return {\r\n      ...node,\r\n      x: this.calculateNewValue(start.x, end.x, interval),\r\n      y: this.calculateNewValue(start.y, end.y, interval)\r\n    };\r\n  }\r\n\r\n  calculateLinkPosition(link, start, end, interval) {\r\n    return {\r\n      source: {\r\n        ...link.source,\r\n        x: this.calculateNewValue(\r\n          start.source ? start.source.x : start.x,\r\n          end.source ? end.source.x : end.x,\r\n          interval\r\n        ),\r\n        y: this.calculateNewValue(\r\n          start.source ? start.source.y : start.y,\r\n          end.source ? end.source.y : end.y,\r\n          interval\r\n        )\r\n      },\r\n      target: {\r\n        ...link.target,\r\n        x: this.calculateNewValue(\r\n          start.target ? start.target.x : start.x,\r\n          end.target ? end.target.x : end.x,\r\n          interval\r\n        ),\r\n        y: this.calculateNewValue(\r\n          start.target ? start.target.y : start.y,\r\n          end.target ? end.target.y : end.y,\r\n          interval\r\n        )\r\n      }\r\n    };\r\n  }\r\n\r\n  calculateNewValue(start, end, interval) {\r\n    return start + (end - start) * this.props.easing(interval);\r\n  }\r\n\r\n  render() {\r\n    return <Mindmap {...this.props} {...this.state} />;\r\n  }\r\n}\r\n\r\nAnimated.propTypes = propTypes;\r\n","/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable prefer-const */\r\n/* eslint-disable class-methods-use-this */\r\n/* eslint-disable react/forbid-prop-types */\r\n/* eslint-disable react/default-props-match-prop-types */\r\n/* eslint-disable react/require-default-props */\r\nimport 'react-swagger-ui/dist/swagger-ui.css';\r\nimport clone from 'clone';\r\nimport { easeQuadOut } from 'd3-ease';\r\nimport { hierarchy, tree } from 'd3-hierarchy';\r\nimport PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport uniqid from 'uniqid';\r\nimport _ from 'lodash';\r\nimport Animated from './Animated';\r\nimport ModelAPI from '../../api/ModelAPI';\r\nimport {\r\n  searchTreeByKey,\r\n  isAncestorOf,\r\n  cloneTree,\r\n  addNewChildNode\r\n} from '../../helpers/tree_helper';\r\n\r\nconst propTypes = {\r\n  animated: PropTypes.bool.isRequired,\r\n  children: PropTypes.node,\r\n  duration: PropTypes.number.isRequired,\r\n  easing: PropTypes.func.isRequired,\r\n  steps: PropTypes.number.isRequired,\r\n  keyProp: PropTypes.string.isRequired,\r\n  labelProp: PropTypes.string.isRequired,\r\n  getChildren: PropTypes.func.isRequired,\r\n  margins: PropTypes.shape({\r\n    bottom: PropTypes.number.isRequired,\r\n    left: PropTypes.number.isRequired,\r\n    right: PropTypes.number.isRequired,\r\n    top: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  gProps: PropTypes.object.isRequired,\r\n  pathProps: PropTypes.object.isRequired,\r\n  textProps: PropTypes.object.isRequired\r\n};\r\n\r\nconst defaultProps = {\r\n  animated: false,\r\n  duration: 50,\r\n  easing: easeQuadOut,\r\n  getChildren: n => n.children,\r\n  steps: 5,\r\n  keyProp: 'nodeKey',\r\n  labelProp: 'name',\r\n  margins: {\r\n    bottom: 10,\r\n    left: 100,\r\n    right: 150,\r\n    top: 10\r\n  },\r\n  nodeWidth: 100,\r\n  gProps: {\r\n    className: 'node'\r\n  },\r\n  pathProps: {\r\n    className: 'link'\r\n  },\r\n  textProps: {}\r\n};\r\n\r\nconst oneCharWidth = 10;\r\n\r\nexport default class Tree extends Component {\r\n  previousStates = [];\r\n\r\n  state = {\r\n    toCopyNodeKey: null,\r\n    toCutNodeKey: null,\r\n    event: '',\r\n    fullScreen: false,\r\n    swaggerHtml: ''\r\n  };\r\n\r\n  keyHandler = ({ keydown }) => {\r\n    if (keydown.event) {\r\n      if (keydown.event.which === 113) {\r\n        this.f2Key();\r\n      }\r\n      if (keydown.event.which === 40) {\r\n        this.downKeyHandler();\r\n      }\r\n      if (keydown.event.which === 38) {\r\n        this.upKeyHandler();\r\n      }\r\n      if (keydown.event.which === 37) {\r\n        this.leftKeyHandler();\r\n      }\r\n      if (keydown.event.which === 39) {\r\n        this.rightKeyHandler();\r\n      }\r\n      if (keydown.event.which === 66 && keydown.event.ctrlKey) {\r\n        this.boldHandler();\r\n      }\r\n      if (keydown.event.which === 67 && keydown.event.ctrlKey) {\r\n        this.copyHandler();\r\n      }\r\n      if (keydown.event.which === 88 && keydown.event.ctrlKey) {\r\n        this.cutHandler();\r\n      }\r\n      if (keydown.event.which === 86 && keydown.event.ctrlKey) {\r\n        this.pasteHandler();\r\n      }\r\n      if (\r\n        (keydown.event.which === 90 && keydown.event.ctrlKey) ||\r\n        (keydown.event.which === 90 && keydown.event.metaKey)\r\n      ) {\r\n        this.props.onUndo();\r\n      }\r\n      if (keydown.event.which === 13) {\r\n        this.enterKeyHandler();\r\n      }\r\n      if (keydown.event.which === 45) {\r\n        this.insertKeyHandler();\r\n      }\r\n      if (keydown.event.which === 46 || keydown.event.which === 8) {\r\n        this.deleteKeyHandler();\r\n      }\r\n      if (\r\n        keydown.event.which >= 65 &&\r\n        keydown.event.which <= 90 &&\r\n        !keydown.event.ctrlKey &&\r\n        !keydown.event.metaKey\r\n      ) {\r\n        this.props.onLetterDown();\r\n      }\r\n    }\r\n  };\r\n\r\n  moveNode = (draggedNodeKey, destinationNodeKey, direction) => {\r\n    if (\r\n      destinationNodeKey &&\r\n      draggedNodeKey &&\r\n      draggedNodeKey !== destinationNodeKey &&\r\n      !isAncestorOf(draggedNodeKey, destinationNodeKey, this.props.data)\r\n    ) {\r\n      const allData = cloneTree(this.props.data, null, false);\r\n      const nodeWhereToAdd = searchTreeByKey(destinationNodeKey, allData);\r\n      const nodeToDelete = searchTreeByKey(draggedNodeKey, allData);\r\n      if (nodeToDelete.parent) {\r\n        let parentNode = searchTreeByKey(nodeToDelete.parent, allData);\r\n        parentNode.children.splice(\r\n          parentNode.children.findIndex(v => v.nodeKey === draggedNodeKey),\r\n          1\r\n        );\r\n        if (direction === 'left' || direction === 'right') {\r\n          let newNode = cloneTree(nodeToDelete, nodeWhereToAdd.nodeKey);\r\n          newNode.direction = direction;\r\n          nodeWhereToAdd.children.push(newNode);\r\n          this.props.onTreeUpdate({\r\n            dataUpdated: allData,\r\n            currentNode: newNode\r\n          });\r\n        }\r\n        if (direction === 'above' || direction === 'below') {\r\n          if (nodeWhereToAdd.parent) {\r\n            let parentNode = searchTreeByKey(nodeWhereToAdd.parent, allData);\r\n            let destIndex = parentNode.children.findIndex(\r\n              v => v.nodeKey === destinationNodeKey\r\n            );\r\n            let newNode = cloneTree(nodeToDelete, nodeWhereToAdd.parent);\r\n            parentNode.children.splice(\r\n              direction === 'above' ? destIndex : destIndex + 1,\r\n              0,\r\n              newNode\r\n            );\r\n            newNode.direction = nodeWhereToAdd.direction;\r\n            this.props.onTreeUpdate({\r\n              dataUpdated: allData,\r\n              currentNode: newNode\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  getTreeDepthAndCardinality = (data, depth) => {\r\n    this.cardinality += 1;\r\n    if (this.maxDepth < depth) this.maxDepth = depth;\r\n    if (data.children.length !== 0)\r\n      data.children.forEach(n => this.getTreeDepthAndCardinality(n, depth + 1));\r\n  };\r\n\r\n  getTreeTextWidth = (data, textWidth, maxLength) => {\r\n    if (data.children.length !== 0) {\r\n      const lengths = data.children.map(n =>\r\n        this.getTreeTextWidth(n, textWidth + n.name.length)\r\n      );\r\n      return Math.max(...lengths);\r\n    }\r\n\r\n    if (data.name && maxLength > textWidth + data.name.length) {\r\n      return textWidth + data.name.length;\r\n    }\r\n\r\n    if (data.children.length === 0) {\r\n      return 0;\r\n    }\r\n\r\n    return maxLength;\r\n  };\r\n\r\n  propagateDirection = (node, dir) => {\r\n    node.direction = dir;\r\n    node.children.forEach(c => {\r\n      this.propagateDirection(c, dir);\r\n    });\r\n  };\r\n\r\n  propagateShiftLeft = (node, horizontalShift) => {\r\n    let nodeShift = node.data.name.length * oneCharWidth;\r\n    if (node.depth === 0) nodeShift = 0;\r\n    node.y += horizontalShift;\r\n    if (node.children)\r\n      node.children.forEach(c => {\r\n        this.propagateShiftLeft(c, horizontalShift + nodeShift);\r\n      });\r\n  };\r\n\r\n  propagateShiftRight = (node, horizontalShift) => {\r\n    const nodeShift = node.data.name.length * oneCharWidth;\r\n    if (node.children)\r\n      node.children.forEach(c => {\r\n        c.y += horizontalShift + nodeShift;\r\n        this.propagateShiftRight(c, horizontalShift + nodeShift);\r\n      });\r\n  };\r\n\r\n  nodePlacementAdaptation = (node, treeMaxLength) => {\r\n    if (node.parent && node.parent.parent) {\r\n      let maxLength = 0;\r\n      node.parent.parent.children.forEach(uncle => {\r\n        if (uncle.data.name.length > maxLength) {\r\n          maxLength = uncle.data.name.length;\r\n        }\r\n      });\r\n      treeMaxLength += maxLength;\r\n      node.y +=\r\n        (treeMaxLength -\r\n          node.parent.data.name.length * (1 + 0.11 * (node.depth - 1))) *\r\n        9;\r\n    }\r\n\r\n    if (node.children) {\r\n      node.children = node.children.map(child => {\r\n        return this.nodePlacementAdaptation(child, treeMaxLength);\r\n      });\r\n    }\r\n\r\n    return node;\r\n  };\r\n\r\n  addNewChildNode = (nodeKey, direction) => {\r\n    const { data, selectedNodeKey, node } = addNewChildNode(\r\n      this.props.data,\r\n      nodeKey,\r\n      direction\r\n    );\r\n    if (data && selectedNodeKey && node) {\r\n      this.props.onTreeUpdate({\r\n        dataUpdated: data,\r\n        currentNode: node\r\n      });\r\n    }\r\n  };\r\n\r\n  openReferenceHandler = () => {\r\n    ModelAPI.getModel(this.props.currentNode.referenceId).then(\r\n      populatedModel => {\r\n        if (populatedModel.freezeTag === '0') {\r\n          this.props.history.push({\r\n            pathname: '/tree',\r\n            state: {\r\n              modelId: this.props.currentNode.referenceId\r\n            }\r\n          });\r\n        } else {\r\n          this.props.history.push({\r\n            pathname: '/tree-frozen',\r\n            state: {\r\n              model: populatedModel\r\n            }\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  insertKeyHandler = () => {\r\n    if (this.props.currentNode.type !== 'reference') {\r\n      this.addNewChildNode(this.props.currentNode.nodeKey, null);\r\n    }\r\n  };\r\n\r\n  deleteKeyHandler = () => {\r\n    if (this.props.currentNode.nodeKey) {\r\n      const allData = cloneTree(this.props.data, null, false);\r\n      let nodeToDelete = searchTreeByKey(\r\n        this.props.currentNode.nodeKey,\r\n        allData\r\n      );\r\n      if (nodeToDelete.parent) {\r\n        let parentNode = searchTreeByKey(nodeToDelete.parent, allData);\r\n        parentNode.children.splice(\r\n          parentNode.children.findIndex(\r\n            v => v.nodeKey === this.props.currentNode.nodeKey\r\n          ),\r\n          1\r\n        );\r\n        this.props.onTreeUpdate({\r\n          dataUpdated: allData,\r\n          currentNode: parentNode\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  copyHandler = () => {\r\n    if (this.props.currentNode.nodeKey) {\r\n      this.setState({\r\n        toCopyNodeKey: this.props.currentNode.nodeKey,\r\n        toCutNodeKey: null\r\n      });\r\n    }\r\n  };\r\n\r\n  cutHandler = () => {\r\n    if (this.props.currentNode.nodeKey) {\r\n      this.setState({\r\n        toCopyNodeKey: null,\r\n        toCutNodeKey: this.props.currentNode.nodeKey\r\n      });\r\n    }\r\n  };\r\n\r\n  pasteHandler = () => {\r\n    let allData = cloneTree(this.props.data, null, false);\r\n    if (this.props.currentNode.nodeKey) {\r\n      let nodeWhereToAdd = searchTreeByKey(\r\n        this.props.currentNode.nodeKey,\r\n        allData\r\n      );\r\n\r\n      // Cut\r\n      if (\r\n        this.state.toCutNodeKey &&\r\n        !isAncestorOf(\r\n          this.state.toCutNodeKey,\r\n          this.props.currentNode.nodeKey,\r\n          this.props.data\r\n        )\r\n      ) {\r\n        let nodeToDelete = searchTreeByKey(this.state.toCutNodeKey, allData);\r\n        let newNode = cloneTree(nodeToDelete, nodeWhereToAdd.nodeKey);\r\n        let parentNode = searchTreeByKey(nodeToDelete.parent, allData);\r\n        parentNode.children.splice(\r\n          parentNode.children.findIndex(\r\n            v => v.nodeKey === this.state.toCutNodeKey\r\n          ),\r\n          1\r\n        );\r\n        nodeWhereToAdd.children.push(newNode);\r\n        this.props.onTreeUpdate({\r\n          dataUpdated: allData,\r\n          currentNode: newNode\r\n        });\r\n      }\r\n\r\n      // Copy\r\n      if (this.state.toCopyNodeKey) {\r\n        let nodeToCopy = searchTreeByKey(this.state.toCopyNodeKey, allData);\r\n        if (nodeToCopy.parent) {\r\n          let newNode = cloneTree(nodeToCopy, nodeWhereToAdd.nodeKey);\r\n          nodeWhereToAdd.children.push(newNode);\r\n          this.props.onTreeUpdate({\r\n            dataUpdated: allData,\r\n            currentNode: newNode\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  sanitizeNode(node) {\r\n    Object.keys(node).forEach(key => {\r\n      if (node[key] && _.isString(node[key]) && node[key].indexOf('\"') > -1) {\r\n        node[key] = node[key].replace('\"', '');\r\n      }\r\n    });\r\n  }\r\n\r\n  boldHandler() {\r\n    this.props.onToolsMenuChange({\r\n      abstract: !this.props.currentNode.abstract\r\n    });\r\n  }\r\n\r\n  enterKeyHandler() {\r\n    if (this.props.currentNode.nodeKey) {\r\n      const allData = cloneTree(this.props.data, null, false);\r\n      let nodeWhereToAdd = searchTreeByKey(\r\n        this.props.currentNode.nodeKey,\r\n        allData\r\n      );\r\n      if (nodeWhereToAdd.parent) {\r\n        const parentNode = searchTreeByKey(nodeWhereToAdd.parent, allData);\r\n        const indexWhereToAdd = parentNode.children.indexOf(nodeWhereToAdd);\r\n        const newNodeKey = uniqid();\r\n        const newNode = {\r\n          name: '',\r\n          parent: parentNode.nodeKey,\r\n          children: [],\r\n          nodeKey: newNodeKey,\r\n          type: 'string',\r\n          referenceId: '',\r\n          isArray: false,\r\n          example: '',\r\n          abstract: false,\r\n          description: '',\r\n          queryParams: '',\r\n          direction: nodeWhereToAdd.direction,\r\n          queryable: false,\r\n          paginable: false,\r\n          patchable: false,\r\n          notImplemented: false,\r\n          isSubPath: false,\r\n          calculated: false,\r\n          branchColor: parentNode.branchColor\r\n        };\r\n        parentNode.children.splice(indexWhereToAdd + 1, 0, newNode);\r\n        this.props.onTreeUpdate({\r\n          dataUpdated: allData,\r\n          currentNode: newNode\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  upKeyHandler() {\r\n    if (this.props.currentNode.nodeKey) {\r\n      const allData = this.props.data;\r\n      let selectedNode = searchTreeByKey(\r\n        this.props.currentNode.nodeKey,\r\n        allData\r\n      );\r\n      if (selectedNode.parent) {\r\n        let parentNode = searchTreeByKey(selectedNode.parent, allData);\r\n        for (\r\n          let indexWhereToGo = parentNode.children.indexOf(selectedNode) - 1;\r\n          indexWhereToGo >= 0;\r\n          indexWhereToGo -= 1\r\n        ) {\r\n          if (\r\n            parentNode.children[indexWhereToGo].direction ===\r\n            selectedNode.direction\r\n          ) {\r\n            this.props.onNodeSelect(\r\n              parentNode.children[indexWhereToGo],\r\n              allData\r\n            );\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  downKeyHandler() {\r\n    if (this.props.currentNode.nodeKey) {\r\n      const allData = this.props.data;\r\n      let selectedNode = searchTreeByKey(\r\n        this.props.currentNode.nodeKey,\r\n        allData\r\n      );\r\n      if (selectedNode.parent) {\r\n        let parentNode = searchTreeByKey(selectedNode.parent, allData);\r\n        let indexWhereToGo;\r\n        for (\r\n          indexWhereToGo = parentNode.children.indexOf(selectedNode) + 1;\r\n          indexWhereToGo < parentNode.children.length;\r\n          indexWhereToGo += 1\r\n        ) {\r\n          if (\r\n            parentNode.children[indexWhereToGo].direction ===\r\n            selectedNode.direction\r\n          ) {\r\n            this.props.onNodeSelect(\r\n              parentNode.children[indexWhereToGo],\r\n              allData\r\n            );\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  leftKeyHandler() {\r\n    if (this.props.currentNode.nodeKey) {\r\n      const allData = this.props.data;\r\n      let selectedNode = searchTreeByKey(\r\n        this.props.currentNode.nodeKey,\r\n        allData\r\n      );\r\n      if (selectedNode.nodeKey === this.props.data.nodeKey) {\r\n        let indexWhereToGo = selectedNode.children.findIndex(\r\n          n => n.direction === 'left'\r\n        );\r\n        if (indexWhereToGo !== -1) {\r\n          this.props.onNodeSelect(\r\n            selectedNode.children[indexWhereToGo],\r\n            allData\r\n          );\r\n        }\r\n      } else if (selectedNode.direction === 'right') {\r\n        this.goToParent(selectedNode, allData);\r\n      } else {\r\n        this.goToFirstChild(selectedNode, allData);\r\n      }\r\n    }\r\n  }\r\n\r\n  rightKeyHandler() {\r\n    if (this.props.currentNode.nodeKey) {\r\n      const allData = this.props.data;\r\n      const selectedNode = searchTreeByKey(\r\n        this.props.currentNode.nodeKey,\r\n        allData\r\n      );\r\n      if (selectedNode.direction === 'left') {\r\n        this.goToParent(selectedNode, allData);\r\n      } else {\r\n        this.goToFirstChild(selectedNode, allData);\r\n      }\r\n    }\r\n  }\r\n\r\n  goToParent(selectedNode, allData) {\r\n    if (selectedNode.parent) {\r\n      const parentNode = searchTreeByKey(selectedNode.parent, allData);\r\n      this.props.onNodeSelect(parentNode, allData);\r\n    }\r\n  }\r\n\r\n  goToFirstChild(selectedNode, allData) {\r\n    if (selectedNode.children && selectedNode.children.length > 0) {\r\n      const indexWhereToGo = selectedNode.children.findIndex(\r\n        n => n.direction === selectedNode.direction\r\n      );\r\n      if (indexWhereToGo !== -1) {\r\n        this.props.onNodeSelect(selectedNode.children[indexWhereToGo], allData);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isFocus, onNodeSelect, children, data, margins } = this.props;\r\n\r\n    // Calcule une taille de svg adaptée à la richesse de l'arbre\r\n    // Pour la largeur, trouver la branche où il y a le plus de texte cumulé, à gauche puis à droite\r\n    const maxLeftLength = this.getTreeTextWidth(\r\n      {\r\n        children: data.children.filter(ld => ld.direction === 'left')\r\n      },\r\n      0,\r\n      120\r\n    );\r\n    const maxRightLength = this.getTreeTextWidth(\r\n      {\r\n        children: data.children.filter(ld => ld.direction === 'right')\r\n      },\r\n      0,\r\n      120\r\n    );\r\n    const contentHeight =\r\n      600 +\r\n      (maxLeftLength + maxRightLength) * oneCharWidth -\r\n      margins.left -\r\n      margins.right;\r\n\r\n    // Pour la hauteur, on fait le nombre de champs divisé par le nombre de niveaux. Poura être amélioré\r\n    this.maxDepth = 0;\r\n    this.cardinality = 0;\r\n    this.getTreeDepthAndCardinality(data, 0);\r\n    const contentWidth =\r\n      200 +\r\n      (60 * (this.cardinality + 1)) / (this.maxDepth + 1) -\r\n      margins.top -\r\n      margins.bottom;\r\n\r\n    // Crée deux sous arbres gauche et droite\r\n    data.children.forEach(c => {\r\n      this.propagateDirection(c, c.direction);\r\n    });\r\n\r\n    const leftData = clone(data);\r\n    leftData.children = leftData.children.filter(ld => ld.direction === 'left');\r\n    this.propagateDirection(leftData, 'left');\r\n\r\n    let rootLeft = tree().size([contentWidth, contentHeight / 2])(\r\n      hierarchy(leftData)\r\n    );\r\n\r\n    rootLeft = this.nodePlacementAdaptation(rootLeft, 0);\r\n    const nodesLeft = rootLeft.descendants();\r\n    const linksLeft = rootLeft.links();\r\n    this.propagateShiftLeft(nodesLeft[0], 0);\r\n\r\n    const rightData = clone(data);\r\n    rightData.children = rightData.children.filter(\r\n      rd => rd.direction === 'right'\r\n    );\r\n    this.propagateDirection(rightData, 'right', 0);\r\n\r\n    let rootRight = tree().size([contentWidth, contentHeight / 2])(\r\n      hierarchy(rightData)\r\n    );\r\n\r\n    rootRight = this.nodePlacementAdaptation(rootRight, 0);\r\n    const nodesRight = rootRight.descendants();\r\n    const linksRight = rootRight.links();\r\n    this.propagateShiftRight(nodesRight[0], 0);\r\n\r\n    // Retourne le sous-arbre gauche et le positionne en face du droit\r\n    const dh = nodesRight[0].x - nodesLeft[0].x;\r\n    nodesLeft.forEach(nl => {\r\n      nl.x += dh;\r\n      nl.y = -nl.y;\r\n    });\r\n\r\n    // Rattache au noeud racine droite les enfants du noeud racine de gauche\r\n    linksLeft.forEach(ll => {\r\n      if (ll.source.data.nodeKey === nodesLeft[0].data.nodeKey) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        ll.source = nodesRight[0];\r\n      }\r\n      if (ll.target.data.nodeKey === nodesLeft[0].data.nodeKey) {\r\n        ll.target = nodesRight[0];\r\n      }\r\n    });\r\n    nodesLeft.splice(0, 1);\r\n\r\n    // Joint les deux sous-arbres\r\n    const nodes = nodesLeft.concat(nodesRight);\r\n    const links = linksLeft.concat(linksRight);\r\n\r\n    // Mesure l'arbre résultat puis recentre\r\n    let minX = nodesRight[0].x;\r\n    let maxX = nodesRight[0].x;\r\n    let minY = nodesRight[0].y;\r\n    let maxY = nodesRight[0].y;\r\n    nodes.forEach(n => {\r\n      if (minX > n.x) minX = n.x;\r\n      if (maxX < n.x) maxX = n.x;\r\n      if (minY > n.y) minY = n.y;\r\n      if (maxY < n.y) maxY = n.y;\r\n    });\r\n    const shift = (minX + maxX) / 2; // Hauteur mediane\r\n    nodes.forEach(n => {\r\n      n.x -= shift;\r\n    });\r\n    maxX -= shift;\r\n    minX -= shift;\r\n\r\n    minY -= 100; // Centrage pour les petits mindmaps, comme celui du départ from scratch\r\n    return (\r\n      <Animated\r\n        {...this.props}\r\n        {...this.state}\r\n        minY={minX}\r\n        maxY={maxX}\r\n        minX={minY}\r\n        maxX={maxY}\r\n        links={links}\r\n        nodes={nodes}\r\n        centerX={nodes[0].y}\r\n        centerY={nodes[0].x}\r\n        cardinality={this.cardinality}\r\n        open={() => this.openReferenceHandler()}\r\n        insert={() => this.insertKeyHandler()}\r\n        copy={() => this.copyHandler()}\r\n        cut={() => this.cutHandler()}\r\n        paste={() => this.pasteHandler()}\r\n        delete={() => this.deleteKeyHandler()}\r\n        moveNode={this.moveNode}\r\n        addNewChildNode={this.addNewChildNode}\r\n        onSaveTree={this.saveTree}\r\n        onKeyPress={this.keyHandler}\r\n        onNodeSelect={onNodeSelect}\r\n        isFocus={isFocus}\r\n      >\r\n        {children}\r\n      </Animated>\r\n    );\r\n  }\r\n}\r\n\r\nTree.propTypes = propTypes;\r\nTree.defaultProps = defaultProps;\r\n","import React, { useState } from 'react';\r\nimport { usePromiseTracker } from 'react-promise-tracker';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst styles = () => {\r\n  return {\r\n    loaderContainer: {\r\n      width: '-webkit-fill-available',\r\n      maxWidth: '50%%',\r\n      height: '100%',\r\n      display: 'flex',\r\n      backgroundColor: '#ffffff85',\r\n      position: 'fixed',\r\n      zIndex: '10'\r\n    },\r\n    swaggerSpinner: {\r\n      margin: 'auto'\r\n    }\r\n  };\r\n};\r\n\r\nconst Spinner = props => {\r\n  // Can pass { delay: 500 } to avoid flickering on high connection\r\n  const { promiseInProgress } = usePromiseTracker();\r\n  const [promise, setPromise] = useState('');\r\n  const { classes } = props;\r\n\r\n  if (promiseInProgress === true) {\r\n    setTimeout(() => {\r\n      setPromise(true);\r\n    }, 0);\r\n  }\r\n\r\n  if (promiseInProgress === false) {\r\n    setTimeout(() => {\r\n      setPromise(false);\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    promise && (\r\n      <div className={classes.loaderContainer}>\r\n        <Loader\r\n          className={classes.swaggerSpinner}\r\n          type=\"TailSpin\"\r\n          color=\"#324157\"\r\n          height={100}\r\n          width={100}\r\n          timeout={60000}\r\n        />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(Spinner);\r\n","const styles = () => {\r\n  return {\r\n    spinner: {\r\n      position: 'absolute',\r\n      margin: 'auto',\r\n      width: 'fit-content',\r\n      height: 'fit-content'\r\n    },\r\n    hideIcon: {\r\n      top: '0',\r\n      left: '0',\r\n      position: 'absolute',\r\n      margin: '20px',\r\n      color: '#324157'\r\n    }\r\n  };\r\n};\r\n\r\nexport default styles;\r\n","import React, { PureComponent } from 'react';\r\nimport SwaggerUI from 'swagger-ui-react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport 'swagger-ui-react/swagger-ui.css';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Spinner from './LoaderIndicator';\r\nimport styles from '../../styles/LivePreview.css';\r\n\r\nclass LivePreview extends PureComponent {\r\n  render() {\r\n    const { classes, swagger, id, onPreviewClick } = this.props;\r\n    return (\r\n      <div id={id} className=\"right-tree\">\r\n        {swagger && (\r\n          <>\r\n            <Spinner className={classes.spinner} />\r\n            <IconButton\r\n              id=\"previewHideButton\"\r\n              onClick={onPreviewClick}\r\n              className={classes.hideIcon}\r\n            >\r\n              <VisibilityOffIcon />\r\n            </IconButton>\r\n\r\n            <SwaggerUI\r\n              spec={swagger}\r\n              docExpansion=\"list\"\r\n              showExtensions=\"true\"\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(LivePreview);\r\n","import BaseAPI from './BaseAPI';\n\nexport default class ModelAPI extends BaseAPI {\n  static getModelNames(teamId) {\n    const params = teamId ? { params: { teamId } } : {};\n    return this.execute('get', 'users/me/modelsList', params);\n  }\n\n  static getModels(params) {\n    return this.execute('get', `users/me/models`, { params }, true);\n  }\n\n  static getModelSwaggerAsFile(modelId, fileType) {\n    return this.execute('get', `models/${modelId}/swagger?type=${fileType}`);\n  }\n\n  static createModel(teamId, model) {\n    return this.execute('post', `/teams/${teamId}/models`, {\n      data: model\n    });\n  }\n\n  static getModel(modelId) {\n    return this.execute('get', `/models/${modelId}`);\n  }\n\n  static saveModel(modelId, model, hasExited) {\n    if (hasExited) {\n      return this.execute('put', `/models/${modelId}?hasExited=true`, { data: model });\n    }\n    return this.execute('put', `/models/${modelId}`, { data: model });\n  }\n\n  static freezeModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=freeze`);\n  }\n\n  static revertModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=revert`);\n  }\n\n  static duplicateModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=duplicate`);\n  }\n\n  static deleteModel(modelId) {\n    return this.execute('delete', `/models/${modelId}`);\n  }\n\n  static renameModel(modelId, name) {\n    return this.execute('patch', `/models/${modelId}`, { data: { name } });\n  }\n\n  static publishToApiManager(modelId) {\n    return this.execute('post', `/models/${modelId}/gravitee`);\n  }\n\n  static changeOrganizationModel(modelId, tags, name, organizationId) {\n    return this.execute('patch', `/models/${modelId}`, {\n      data: { tags, name, organizationId }\n    });\n  }\n\n  static getModelRules(modelId) {\n    return this.execute('get', `/models/${modelId}/refinerRules`);\n  }\n\n  static testModelRule(modelId, rules) {\n    return this.execute(\n      'post',\n      `/models/${modelId}/refinerRules?testOnly=true`,\n      {\n        data: rules\n      }\n    );\n  }\n\n  static createModelRule(modelId, rules) {\n    return this.execute('put', `/models/${modelId}/refinerRules`, {\n      data: rules\n    });\n  }\n\n  static updateModelRule(modelId, ruleId, rule) {\n    return this.execute('put', `/models/${modelId}/refinerRules/${ruleId}`, {\n      data: rule\n    });\n  }\n\n  static deleteModelRule(modelId, ruleId) {\n    return this.execute('delete', `/models/${modelId}/refinerRules/${ruleId}`);\n  }\n}\n","import BaseAPI from './BaseAPI';\r\n\r\nexport default class SwaggerAPI extends BaseAPI {\r\n  static getResourcesFromUploaded(data) {\r\n    return this.execute('post', '/swaggerUpload/resources', {\r\n      data: { jsonstring: data }\r\n    });\r\n  }\r\n\r\n  static getModelsFromResources(data) {\r\n    return this.execute('post', '/swaggerUpload/models', {\r\n      data\r\n    });\r\n  }\r\n\r\n  static requestPreview(data) {\r\n    return this.execute('post', '/swaggerPreviews', { data });\r\n  }\r\n\r\n  static requestLivePreview(data, organizationId) {\r\n    return this.execute(\r\n      'post',\r\n      `/swaggerLivePreviews?organizationId=${organizationId}`,\r\n      { data }\r\n    );\r\n  }\r\n}\r\n","import uniqid from 'uniqid';\r\n\r\nexport function searchTreeByKey(key, startnode) {\r\n  const stack = [startnode];\r\n  while (stack.length) {\r\n    const node = stack.pop();\r\n    if (node.nodeKey === key) return node;\r\n    stack.push(...node.children);\r\n  }\r\n  return stack.pop() || null;\r\n}\r\n\r\nexport function isAncestorOf(nodeKey, ofNodeKey, root) {\r\n  let ofNode = searchTreeByKey(ofNodeKey, root);\r\n\r\n  while (ofNode.nodeKey !== nodeKey && ofNode.parent) {\r\n    ofNode = searchTreeByKey(ofNode.parent, root);\r\n  }\r\n\r\n  return ofNode.nodeKey === nodeKey;\r\n}\r\n\r\nexport function cloneTree(node, parentNodeKey, generateId = true) {\r\n  return {\r\n    ...node,\r\n    nodeKey: generateId ? uniqid() : node.nodeKey,\r\n    parent: parentNodeKey,\r\n    children: node.children.map(child => {\r\n      return cloneTree(child, node.nodeKey, generateId);\r\n    })\r\n  };\r\n}\r\n\r\nexport function addNewChildNode(root, selectedNodeKey, direction) {\r\n  if (!selectedNodeKey) {\r\n    return {};\r\n  }\r\n  const allData = cloneTree(root, null, false);\r\n  const nodeWhereToAdd = searchTreeByKey(selectedNodeKey, allData);\r\n  const newNodeKey = uniqid();\r\n  const newNode = {\r\n    name: '',\r\n    direction: direction || nodeWhereToAdd.direction,\r\n    parent: nodeWhereToAdd.nodeKey,\r\n    children: [],\r\n    nodeKey: newNodeKey,\r\n    type: 'string',\r\n    referenceId: '',\r\n    isArray: false,\r\n    example: '',\r\n    abstract: true,\r\n    description: '',\r\n    queryable: false,\r\n    paginable: false,\r\n    patchable: false,\r\n    notImplemented: false,\r\n    isSubPath: false,\r\n    verbs: [],\r\n    calculated: false,\r\n    queryParams: '',\r\n    branchColor: nodeWhereToAdd.branchColor\r\n  };\r\n  nodeWhereToAdd.children.push(newNode);\r\n  nodeWhereToAdd.type = nodeWhereToAdd.type === 'array' ? 'array' : 'object';\r\n  return {\r\n    data: allData,\r\n    selectedNodeKey: newNodeKey,\r\n    node: newNode\r\n  };\r\n}\r\n\r\nexport function newTree(swaggerName) {\r\n  const parentId = uniqid();\r\n  return {\r\n    name: swaggerName,\r\n    direction: 'right',\r\n    nodeKey: parentId,\r\n    parent: null,\r\n    description: '',\r\n    example: '',\r\n    type: 'string',\r\n    referenceId: '',\r\n    isArray: false,\r\n    abstract: true,\r\n    queryable: false,\r\n    paginable: false,\r\n    patchable: false,\r\n    notImplemented: false,\r\n    isSubPath: false,\r\n    calculated: false,\r\n    queryParams: '',\r\n    verbs: ['SEARCH', 'POST', 'GET', 'PUT', 'DELETE'],\r\n    children: [\r\n      {\r\n        name: 'id',\r\n        direction: 'right',\r\n        description: '',\r\n        type: 'integer',\r\n        referenceId: '',\r\n        isArray: false,\r\n        abstract: true,\r\n        queryable: false,\r\n        paginable: false,\r\n        patchable: false,\r\n        notImplemented: false,\r\n        isSubPath: false,\r\n        calculated: true,\r\n        example: '',\r\n        parent: parentId,\r\n        nodeKey: uniqid(),\r\n        children: []\r\n      },\r\n      {\r\n        name: 'an attribute',\r\n        direction: 'right',\r\n        description: '',\r\n        type: 'integer',\r\n        referenceId: '',\r\n        isArray: false,\r\n        abstract: true,\r\n        queryable: false,\r\n        paginable: false,\r\n        patchable: false,\r\n        notImplemented: false,\r\n        isSubPath: false,\r\n        calculated: true,\r\n        example: '',\r\n        parent: parentId,\r\n        nodeKey: uniqid(),\r\n        children: []\r\n      }\r\n    ]\r\n  };\r\n}\r\n\r\nfunction updateSubNodes(parentNodeToUpdate, changeFunction) {\r\n  changeFunction(parentNodeToUpdate);\r\n\r\n  if (parentNodeToUpdate.children && parentNodeToUpdate.children.length > 0) {\r\n    parentNodeToUpdate.children.map(child =>\r\n      updateSubNodes(child, changeFunction)\r\n    );\r\n  }\r\n}\r\n\r\nfunction updateParentNodes(\r\n  root,\r\n  childNode,\r\n  changeFunction,\r\n  changeFunctionParam\r\n) {\r\n  changeFunction(childNode, changeFunctionParam);\r\n  if (childNode.parent) {\r\n    const parent = searchTreeByKey(childNode.parent, root);\r\n\r\n    if (parent) {\r\n      updateParentNodes(root, parent, changeFunction, changeFunctionParam);\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateTree(root, node) {\r\n  const data = cloneTree(root, null, false);\r\n  const nodeToUpdate = searchTreeByKey(node.nodeKey, data);\r\n  nodeToUpdate.name = node.name;\r\n  nodeToUpdate.description = node.description;\r\n  nodeToUpdate.xDescription = node.xDescription;\r\n  nodeToUpdate.example = node.example;\r\n  nodeToUpdate.type = node.type;\r\n  nodeToUpdate.referenceId = node.referenceId;\r\n  nodeToUpdate.isArray = node.isArray;\r\n\r\n  nodeToUpdate.queryable = node.queryable;\r\n  nodeToUpdate.isSubPath = node.isSubPath;\r\n  nodeToUpdate.calculated = node.calculated;\r\n  nodeToUpdate.paginable = node.paginable;\r\n  nodeToUpdate.patchable = node.patchable;\r\n\r\n  nodeToUpdate.queryParams = node.queryParams;\r\n  nodeToUpdate.verbs = node.verbs;\r\n  nodeToUpdate.parent = node.parent;\r\n\r\n  if (nodeToUpdate.type === 'reference') {\r\n    nodeToUpdate.children = node.children;\r\n  }\r\n\r\n  if (node.branchColor !== nodeToUpdate.branchColor) {\r\n    updateSubNodes(nodeToUpdate, tmpNode => {\r\n      tmpNode.branchColor = node.branchColor; // eslint-disable-line no-param-reassign\r\n    });\r\n  }\r\n\r\n  if (nodeToUpdate.notImplemented !== node.notImplemented) {\r\n    if (node.notImplemented) {\r\n      // Mark all subnodes as not implemented\r\n      updateSubNodes(nodeToUpdate, tmpNode => {\r\n        tmpNode.notImplemented = true; // eslint-disable-line no-param-reassign\r\n      });\r\n    } else {\r\n      // Mark all parent nodes as implemented\r\n      updateParentNodes(data, nodeToUpdate, tmpNode => {\r\n        tmpNode.notImplemented = false; // eslint-disable-line no-param-reassign\r\n      });\r\n    }\r\n  }\r\n\r\n  if (nodeToUpdate.abstract !== node.abstract) {\r\n    if (node.abstract) {\r\n      // Add the parent to abstract\r\n      updateParentNodes(data, nodeToUpdate, tmpNode => {\r\n        tmpNode.abstract = true; // eslint-disable-line no-param-reassign\r\n      });\r\n    } else {\r\n      // remove only this from abstract\r\n      nodeToUpdate.abstract = node.abstract; // eslint-disable-line no-param-reassign\r\n    }\r\n  }\r\n\r\n  return data;\r\n}\r\n"],"sourceRoot":""}