{"version":3,"sources":["api/FreemindAPI.js","Components/dashboard/ResourceSelector.js","Components/dashboard/TeamSelector.js","Components/dashboard/SwaggerForm.js","Components/common/Spinner.js","Components/dashboard/SwaggerMenu.js","Components/dashboard/FilterTag.js","contexts/RuleContext.js","Components/refine/CustomRadioButton.js","Components/refine/TextEditor.js","Components/refine/RuleList.js","Components/refine/SnippetList.js","Components/refine/DialogRule.js","Components/refine/DialogNoRule.js","Components/refine/Snackbar.js","Components/refine/RefineModalView.js","api/ModelTagsAPI.js","styles/SwaggerList.css.js","Components/dashboard/SwaggerList.js","styles/Dashboard.css.js","Components/base/Dashboard.js","api/ModelAPI.js","api/SwaggerAPI.js","helpers/tree_helper.js","api/GitReposAPI.js"],"names":["FreemindAPI","data","this","execute","xmlstring","modelId","BaseAPI","getModalStyle","top","left","transform","useStyles","makeStyles","theme","root","maxHeight","overflow","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ResourceSelector","props","classes","React","useState","modalStyle","value","setValue","invalidForm","setInvalidForm","Modal","aria-labelledby","aria-describedby","open","onClose","close","style","className","FormControl","component","formControl","Typography","variant","gutterBottom","RadioGroup","aria-label","name","group","onChange","event","target","resources","map","resource","FormControlLabel","control","Radio","label","Button","color","disabled","type","onClick","SwaggerAPI","getModelsFromResources","paths","api","then","modalContainer","borderRadius","textAlign","minWidth","buttonSaveTeam","margin","TeamSelector","teamChoiceOpen","handleTeamChoiceClose","InputLabel","id","Select","data-cy","labelid","team","e","handleTeamSelect","teams","t","MenuItem","key","handleTeamChoiceClick","schema","Joi","object","keys","swaggerName","string","min","max","required","schemaUploader","fileSource","fileName","regex","BootstrapInput","withStyles","marginTop","input","fontSize","transition","transitions","create","fontFamily","join","borderColor","InputBase","dashboardH2Titles","globalStyles","SwaggerForm","state","invalidFormExample","selectedExample","selectedExampleName","invalidFormUploader","openResourceSelector","checkForm","result","validate","setState","error","handleChangeExample","JsonExamples","find","x","handleClickExample","handleCreateModel","handleChangeFromScratch","handleClickFromScratch","newTree","handleResourceSelectorClose","redirectToModelTree","model","history","push","pathname","teamId","organizationId","organization","ModelAPI","createModel","a","Configuration","GRAVITEE_ENABLED","OrganizationAPI","getMyOwnOrganizations","organizations","graviteeOrganization","org","teamName","capitalizedTeamName","toUpperCase","substring","length","TeamAPI","getMyTeams","createTeam","onDragOver","preventDefault","onDrop","files","dataTransfer","onFileChange","file","currFile","reader","FileReader","onload","Notification","title","message","fileExtension","split","reverse","uploadFreemind","catch","response","errorMessage","getResourcesFromUploaded","readAsText","context","lateralMenu","paddingTitle","marginBottom","align","textSubTitle","exampleBtn","displayEmpty","selectEmpty","displayFullBtnText","TextField","size","inputSwaggerForm","onSubmit","onDragEnter","onDragLeave","accept","ref","handleClickFromImport","Component","contextType","UserContext","withRouter","height","paddingBottom","display","flexWrap","bootstrapFormLabel","whiteSpace","supportSection","supportSectionTitle","subTitle","loaderContainer","swaggerSpinner","loading","children","timeout","MenuListComposition","openDeleteModal","anchorElPub","gitReposList","handleToggle","handleToggleDeleteModel","handleClose","anchorEl","contains","handleClosePublish","openPopPub","preventForm","handleChange","handleClickPublish","GitReposAPI","getRepos","row","currentTarget","revertToThisModel","freezeModel","renameModel","deleteThisModel","duplicateThisModel","tags","transferThisModel","repoId","publishThisModel","publishToApiManager","isCurrent","isNotCurrent","downloadFreemind","downloadSwagger","IconButton","buttonRef","node","aria-owns","undefined","aria-haspopup","Popper","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","onClickRename","onClickFreeze","onClickDuplicate","onClickRevert","filename","exportFile","handleClosePub","listOrganizationTransfer","gitRepos","onClickPublish","onClickPublishToApiManager","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","onClickDelete","autoFocus","justifyContent","marginRight","menuVersionTextfield","paddingTop","IntegrationAutosuggest","handleInputChange","values","handleTagsChange","tagsList","Autocomplete","autoHighlight","multiple","limitTags","tag","options","getOptionLabel","option","renderInput","params","placeholder","fontWeight","RuleContext","createContext","initialState","rules","currentRule","isRulesSaved","openAlert","reducer","action","payload","filter","rule","yamlRule","foundIndex","findIndex","newRules","RuleContextProvider","useReducer","dispatch","Provider","Consumer","icon","backgroundImage","outline","outlineOffset","checkedIcon","content","formContainer","formLabel","StyledRadio","disableRipple","Chip","CustomizedRadios","useContext","operation","Editor","onChangeTextEditor","mode","minHeight","text","editorProps","$blockScrolling","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","StyledListItem","borderBottom","selected","ListItem","flexGrow","demo","buttonAddRule","ruleContainer","operationIcon","titleRuleList","userSelect","highligthTitleRuleList","ruleName","InteractiveList","selectedIndex","setSelectedIndex","addRule","deleteRule","Card","List","dense","index","button","handleListItemClick","heading","typography","pxToRem","flexShrink","secondaryHeading","secondary","titleSnippetList","highligthTitleSnippetList","ControlledExpansionPanels","expanded","setExpanded","panel","isExpanded","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","container","gridTemplateColumns","gridColumnGap","gridRowGap","justifyItems","mainContainerRows","gridTemplateRows","rulesListBlock","gridColumn","gridRow","editMetadataBlock","yamlRuleBlock","snippetsBlock","overflowY","saveAllBtn","testAllBtn","operationsRadioBtn","ruleNameInput","rulePathInput","operationInput","textfieldContainer","rootInput","cssLabel","lineHeight","DialogRule","saveRules","testRules","Container","InputLabelProps","InputProps","notchedOutline","path","TextEditor","gridGap","containerDialogNoRule","DialogNoRule","snackbarText","alignItems","snackbarIcon","snackbarSaveButton","snackbarCancelButton","PositionedSnackbar","vertical","horizontal","showSnack","dismissSaveRules","Snackbar","anchorOrigin","SnackbarContent","Transition","forwardRef","Slide","direction","createMuiTheme","overrides","MuiDialog","paperWidthSm","maxWidth","paperFullWidth","MuiPaper","MuiContainer","maxWidthSm","buttonCloseDialog","right","dialogHeader","titleDialogChip","RefineModalView","setOpen","setShowSnack","updateSwaggerList","refinerRules","createdRule","uuid","handleClickOpen","getModelRules","fetchedRules","testModelRule","success","createModelRule","ThemeProvider","fullScreen","fullWidth","TransitionComponent","edge","ModelTagsAPI","styles","swaggerList","swaggerListPadding","swaggerSelect","table","searchSelect","chip","filterIcon","verticalAlign","cursor","inputTag","modelSection","modelPaddingTitle","overflowX","tableHeaderCell","zIndex","tableBodyCell","paginationBlock","tablePagination","ellipsis","textOverflow","wordBreak","buttonGravitee","modelSectionTitle","uuidv4","require","SwaggerList","getUserModelsTags","getTags","fileType","Promise","resolve","getModelSwaggerAsFile","JSON","stringify","getFreemind","editMindmap","frozenMindmap","getModel","populatedModel","loadOptionModel","err","status","revertModel","changeOrganizationModel","commitModelToRepos","deleteModel","env","showGravitee","graviteeMessage","closeGraviteeModal","handleNameChange","page","handleTeamChange","selectedTeam","handleChangePage","handleChangeRowsPerPage","pageSize","getModelNames","resp","modelNames","el","formPreventDefault","total","models","showMe","labelId","labelInput","isClicked","isClickID","tagName","modelLoading","inputLabel","focus","renameThisModel","createTag","formSubmit","Input","inputRef","elem","changeLabel","onBlur","hideMe","freezeTag","textDecoration","date","formatDate","dateStr","Date","toLocaleDateString","toLocaleTimeString","hour","minute","revealMe","mapName","getModels","flat","setFocus","duplicateModel","setFocusTag","deleteTag","includes","user","htmlFor","sort","compareNameList","FilterTag","Table","TableHead","TableRow","TableCell","TableBody","colSpan","hover","inputName","author","username","displayFormattedDate","createdAt","lastUpdatedUser","updatedAt","startsWith","avatar","Avatar","onDelete","clickable","handleDelete","hideInput","inputClassName","changeTagName","cancelTag","SwaggerMenu","nameVersion","TablePagination","rowsPerPageOptions","count","rowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","dashboardContainer","dashboardLateralMenu","dashboardSwaggerList","Dashboard","location","PureComponent","hasExited","ruleId","jsonstring","searchTreeByKey","startnode","stack","pop","nodeKey","isAncestorOf","ofNodeKey","ofNode","parent","cloneTree","parentNodeKey","generateId","uniqid","child","addNewChildNode","selectedNodeKey","allData","nodeWhereToAdd","newNodeKey","newNode","referenceId","isArray","example","abstract","description","queryable","paginable","patchable","notImplemented","isSubPath","verbs","calculated","queryParams","branchColor","parentId","updateSubNodes","parentNodeToUpdate","changeFunction","updateParentNodes","childNode","changeFunctionParam","updateTree","nodeToUpdate","xDescription","tmpNode","url","password","git_username","git_password","repo"],"mappings":"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","file":"static/js/14.abf65e34.chunk.js","sourcesContent":["import BaseAPI from './BaseAPI';\n\nexport default class FreemindAPI extends BaseAPI {\n  static uploadFreemind(data) {\n    return this.execute('post', '/freeminds', { data: { xmlstring: data } });\n  }\n\n  static getFreemind(modelId) {\n    return this.execute('get', `/models/${modelId}/freemind`);\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport {\n  FormControl,\n  Typography,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Button\n} from '@material-ui/core';\nimport SwaggerAPI from '../../api/SwaggerAPI';\n\nfunction getModalStyle() {\n  return {\n    top: '50%',\n    left: `50%`,\n    transform: `translate(-50%, -50%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxHeight: 500,\n    overflow: 'scroll'\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    maxHeight: '80%',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nexport default function ResourceSelector(props) {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [value, setValue] = React.useState('');\n  const [invalidForm, setInvalidForm] = React.useState(true);\n\n  function handleChange(event) {\n    if (event.target.value) {\n      setInvalidForm(false);\n    }\n    setValue(event.target.value);\n  }\n\n  function formHandleClick() {\n    SwaggerAPI.getModelsFromResources({\n      resource: value,\n      paths: props.paths,\n      api: props.api\n    }).then(data => {\n      props.close(data);\n    });\n  }\n\n  return (\n    <Modal\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n      open={props.open}\n      onClose={props.close}\n    >\n      <div style={modalStyle} className={classes.paper}>\n        <div className={classes.root}>\n          <FormControl component=\"fieldset\" className={classes.formControl}>\n            <Typography variant=\"h5\" component=\"h5\" gutterBottom>\n              We found several APIs to import!\n            </Typography>\n            <Typography variant=\"h7\" component=\"h7\" gutterBottom>\n              To start, please choose the model you want to import into\n              apigrow:\n            </Typography>\n            <RadioGroup\n              aria-label=\"Resource\"\n              name=\"resource\"\n              className={classes.group}\n              value={value}\n              onChange={handleChange}\n            >\n              {props.resources.map(resource => {\n                return (\n                  <FormControlLabel\n                    value={resource}\n                    control={<Radio />}\n                    label={resource}\n                  />\n                );\n              })}\n            </RadioGroup>\n          </FormControl>\n        </div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={`el-button import-button el-button--primary shared-width ${\n            invalidForm ? 'is-disabled' : ''\n          }`}\n          disabled={invalidForm}\n          type=\"button\"\n          onClick={formHandleClick}\n        >\n          Import\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Modal,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  modalContainer: {\n    backgroundColor: '#e0e0e0',\n    width: 'fit-content',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    padding: '20px',\n    transform: 'translateY(-50%) translateX(-50%)',\n    borderRadius: '10px',\n    border: 'solid 1px black',\n    textAlign: 'center'\n  },\n  formControl: {\n    minWidth: '120px'\n  },\n  buttonSaveTeam: {\n    margin: '10px'\n  }\n}));\n\nexport default function TeamSelector(props) {\n  const classes = useStyles();\n\n  return (\n    <Modal\n      open={props.teamChoiceOpen}\n      onClose={() => props.handleTeamChoiceClose()}\n    >\n      <div className={classes.modalContainer}>\n        <Typography>Where do you want to save it?</Typography>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"select-label\">Team</InputLabel>\n          <Select\n            data-cy=\"select-team-before-model-save\"\n            labelid=\"select-label\"\n            value={props.team}\n            onChange={e => {\n              props.handleTeamSelect(e);\n            }}\n          >\n            {props.teams.map(t => {\n              return (\n                <MenuItem key={t.id} value={t}>\n                  {t.name}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n        <Button\n          className={classes.buttonSaveTeam}\n          variant=\"contained\"\n          onClick={() => props.handleTeamChoiceClick()}\n        >\n          Ok\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n","/* eslint-disable no-param-reassign */\n/* eslint-disable react/no-string-refs */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport { Button, TextField } from '@material-ui/core';\nimport { Notification } from 'element-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Joi from '@hapi/joi';\nimport FreemindAPI from '../../api/FreemindAPI';\nimport SwaggerAPI from '../../api/SwaggerAPI';\nimport globalStyles from '../../styles/global.css';\nimport JsonExamples from '../../examples/examples.json';\nimport ResourceSelector from './ResourceSelector';\nimport TeamSelector from './TeamSelector';\nimport ModelAPI from '../../api/ModelAPI';\nimport TeamAPI from '../../api/TeamAPI';\nimport { UserContext } from '../../contexts/UserContext';\nimport { newTree } from '../../helpers/tree_helper';\nimport Configuration from '../../helpers/configuration';\nimport OrganizationAPI from '../../api/OrganizationAPI';\n\n\nconst schema = Joi.object().keys({\n  swaggerName: Joi.string()\n    .label('Model name')\n    .min(2)\n    .max(64)\n    .required()\n});\n\nconst schemaUploader = Joi.object().keys({\n  fileSource: Joi.string()\n    .min(2)\n    .required(),\n  fileName: Joi.string()\n    .min(4)\n    .required()\n    .regex(/.*(\\.mm|\\.json)$/)\n});\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    width: '100%',\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    }\n  }\n}))(InputBase);\n\nconst { dashboardH2Titles } = globalStyles;\nconst styles = theme => ({\n  dashboardH2Titles,\n  lateralMenu: {\n    padding: '1.5rem',\n    backgroundColor: '#fff',\n    height: '92%'\n  },\n  paddingTitle: {\n    paddingBottom: '1rem'\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  exampleBtn: {\n    margin: 0,\n    marginBottom: 14,\n    width: '100%'\n  },\n  bootstrapFormLabel: {\n    fontSize: 18\n  },\n  displayFullBtnText: {\n    whiteSpace: 'normal'\n  },\n  selectEmpty: {},\n  supportSection: {\n    border: '1px solid rgb(234, 238, 251)',\n    borderRadius: '4px',\n    padding: '10px',\n    height: 'auto',\n    backgroundColor: '#fff',\n    boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.12), 0 0 6px 0 rgba(0, 0, 0, 0.04)',\n    width: '270px',\n    margin: 'auto',\n    marginBottom: '5px',\n    textAlign: 'center'\n  },\n  supportSectionTitle: {\n    fontSize: '20px',\n    color: '#324157'\n  },\n  subTitle: {\n    margin: theme.spacing(1)\n  },\n  textSubTitle: {\n    color: '#324157',\n    fontSize: '20px'\n  },\n  inputSwaggerForm: {\n    marginTop: '0',\n    marginBottom: '15px',\n    width: '-webkit-fill-available'\n  }\n});\n\nclass SwaggerForm extends Component {\n  static contextType = UserContext;\n\n  state = {\n    invalidForm: true,\n    invalidFormExample: true,\n    swaggerName: '',\n    selectedExample: {},\n    selectedExampleName: '',\n    invalidFormUploader: true,\n    data: '',\n    resources: [],\n    paths: [],\n    api: {},\n    openResourceSelector: false,\n    team: { id: null, name: '' },\n    teamChoiceOpen: false\n  };\n\n  checkForm = () => {\n    const data = {\n      swaggerName: this.state.swaggerName\n    };\n    const result = schema.validate(data);\n    this.setState({\n      invalidForm: !!result.error\n    });\n  };\n\n  handleChangeExample = event => {\n    this.setState({\n      selectedExampleName: event.target.value,\n      selectedExample: JsonExamples.find(x => x.name === event.target.value),\n      invalidFormExample: false\n    });\n  };\n\n  handleClickExample = () => {\n    this.setState({ data: this.state.selectedExample }, () =>\n      this.handleCreateModel()\n    );\n  };\n\n  handleChangeFromScratch = (type, value) => {\n    this.setState({ [type]: value }, this.checkForm);\n  };\n\n  handleClickFromScratch = () => {\n    if (this.state.invalidForm === false) {\n      this.setState({ data: newTree(this.state.swaggerName) }, () =>\n        this.handleCreateModel()\n      );\n    }\n  };\n\n  handleResourceSelectorClose = data => {\n    this.setState({ openResourceSelector: false, data }, () => {\n      if (data.name) {\n        this.handleCreateModel();\n      }\n    });\n  };\n\n  handleTeamSelect = event => {\n    this.setState({ team: event.target.value });\n  };\n\n  handleTeamChoiceClose = () => {\n    this.setState({ teamChoiceOpen: false });\n  };\n\n  redirectToModelTree = (model) => {\n    this.props.history.push({\n      pathname: '/tree',\n      state: {\n        modelId: model.id,\n        teamId: model.team,\n        organizationId: model.organization\n      }\n    });\n  }\n\n  handleTeamChoiceClick = () => {\n    ModelAPI.createModel(this.state.team.id, { data: this.state.data })\n      .then(this.redirectToModelTree);\n  };\n\n\n  handleCreateModel = async () => {\n    if (Configuration.GRAVITEE_ENABLED) {\n      // Get the Gravitee organization\n      const organizations = await OrganizationAPI.getMyOwnOrganizations();\n      const graviteeOrganization = organizations.find((org) => org.name === 'Gravitee');\n\n      // Create the API team\n      const teamName = this.state.data.name;\n      const capitalizedTeamName = teamName[0].toUpperCase()\n        + teamName.substring(1, teamName.length);\n\n      const teams = await TeamAPI.getMyTeams();\n      let team = teams.find(t => t.team.name === capitalizedTeamName);\n      if (!team) {\n        team = await TeamAPI.createTeam(`${capitalizedTeamName} API`, graviteeOrganization.id);\n      }\n\n      // Create the model in the newly created team\n      const model = await ModelAPI.createModel(team.id, { data: this.state.data })\n\n      // Finally redirect to user to the tree view\n      this.redirectToModelTree(model);\n    } else {\n      this.setState({ teamChoiceOpen: true });\n    }\n  }\n\n  onDragOver = e => {\n    e.preventDefault();\n  };\n\n  onDrop = e => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    this.onFileChange(e, files[0]);\n  };\n\n  onFileChange = (e, file) => {\n    const currFile = file || e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const fileSource = reader.result;\n      const fileName = currFile.name;\n\n      const result = schemaUploader.validate({\n        fileSource,\n        fileName\n      });\n\n      if (!result.error) {\n        const fileExtension = fileName.split('.').reverse()[0];\n        if (fileExtension === 'mm') {\n          FreemindAPI.uploadFreemind(fileSource).then(data => {\n            this.setState({\n              data,\n              invalidFormUploader: false\n            }, () => {\n              this.handleCreateModel();\n            })\n          }).catch((error) => {\n            Notification.error({\n              title: 'Error',\n              message:\n                error.response.data.errorMessage ||\n                'Could\\'t import the .mm file.'\n            });\n          });\n        }\n\n        if (fileExtension === 'json') {\n          SwaggerAPI.getResourcesFromUploaded(fileSource)\n            .then(data => {\n              this.setState(\n                {\n                  resources: data.resources,\n                  paths: data.paths,\n                  api: data.api\n                },\n                () => {\n                  this.setState({ openResourceSelector: true });\n                }\n              );\n            })\n            .catch(error => {\n              Notification.error({\n                title: 'Error',\n                message:\n                  error.response.data.message ||\n                  'Could not find a valid schema in the endpoint'\n              });\n            });\n        }\n      } else {\n        this.setState(\n          {\n            invalidFormUploader: true\n          },\n          () => {\n            Notification.error({\n              title: 'Error',\n              message:\n                'There was a problem uploading your file. Please make sure to upload the right extension (.mm, .json)'\n            });\n          }\n        );\n      }\n    };\n\n    reader.readAsText(currFile);\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { teams } = this.context;\n    const { team, teamChoiceOpen } = this.state;\n    return (\n      <>\n        <div className={classes.lateralMenu}>\n          <h2 className={`${classes.dashboardH2Titles} ${classes.paddingTitle}`}>New Model</h2>\n          <div style={{ marginBottom: '24px' }}>\n            <Typography align=\"left\" className={classes.textSubTitle}>\n              From an example...\n            </Typography>\n            <FormControl className={classes.exampleBtn}>\n              <Select\n                displayEmpty\n                data-cy=\"dashboard-try-example-select\"\n                className={classes.selectEmpty}\n                value={this.state.selectedExampleName}\n                onChange={this.handleChangeExample}\n                input={\n                  <BootstrapInput\n                    name=\"nameSelected\"\n                    id=\"age-customized-select\"\n                  />\n                }\n              >\n                <MenuItem value=\"\" disabled>\n                  Select an example:\n                </MenuItem>\n                {JsonExamples.map((e, key) => {\n                  return (\n                    <MenuItem key={key} value={e.name}>\n                      {e.name}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              data-cy=\"dashboard-try-example-btn\"\n              className={`el-button el-button--primary shared-width ${classes.displayFullBtnText} ${\n                this.state.invalidFormExample ? 'is-disabled' : ''\n              }`}\n              disabled={this.state.invalidFormExample}\n              type=\"button\"\n              onClick={this.handleClickExample}\n            >\n              Try the {this.state.selectedExampleName} example\n            </Button>\n          </div>\n\n          <div style={{ marginBottom: '24px' }}>\n            <Typography align=\"left\" className={classes.textSubTitle}>\n              ...or from scratch{' '}\n            </Typography>\n            <TextField\n              id=\"outlined-name\"\n              label=\"New Model Name\"\n              size=\"small\"\n              className={classes.inputSwaggerForm}\n              onChange={e => {\n                this.handleChangeFromScratch('swaggerName', e.target.value);\n              }}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={`el-button create-button el-button--primary shared-width ${\n                this.state.invalidForm ? 'is-disabled' : ''\n              }`}\n              disabled={this.state.invalidForm}\n              onClick={this.handleClickFromScratch}\n              type=\"button\"\n            >\n              Create empty model\n            </Button>\n          </div>\n\n          <form onSubmit={() => this.handleCreateModel()}>\n            <Typography align=\"left\" className={classes.textSubTitle}>\n              ...or from import{' '}\n            </Typography>\n            <div className=\"el-input\">\n              <div className=\"el-form-item\">\n                <label className=\"el-upload el-upload--text full-width\">\n                  <div\n                    className=\"el-upload-dragger full-width\"\n                    onDragEnter={this.onDragEnter}\n                    onDragLeave={this.onDragLeave}\n                    onDragOver={this.onDragOver}\n                    onDrop={this.onDrop}\n                  >\n                    <i className=\"el-icon-upload\" />\n                  </div>\n                  <input\n                    name=\"freemind\"\n                    className=\"el-upload__input\"\n                    accept=\"*.mm\"\n                    type=\"file\"\n                    onClick={event => {\n                      event.target.value = null;\n                    }}\n                    onChange={this.onFileChange}\n                    ref=\"input\"\n                  />\n                </label>\n                <div className=\"el-upload__tip\">\n                  Only Freemind and Swagger files are accepted (.mm, .json)\n                </div>\n              </div>\n            </div>\n\n            <div className=\"el-input double-ctn\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={`el-button import-button el-button--primary shared-width ${\n                  this.state.invalidFormUploader ? 'is-disabled' : ''\n                }`}\n                disabled={this.state.invalidFormUploader}\n                type=\"button\"\n                onClick={this.handleClickFromImport}\n              >\n                Import\n              </Button>\n            </div>\n          </form>\n        </div>\n        <ResourceSelector\n          open={this.state.openResourceSelector}\n          close={this.handleResourceSelectorClose}\n          resources={this.state.resources}\n          paths={this.state.paths}\n          api={this.state.api}\n        />\n        <TeamSelector\n          team={team}\n          teams={teams.map((t) => t.team)}\n          teamChoiceOpen={teamChoiceOpen}\n          handleTeamSelect={this.handleTeamSelect}\n          handleTeamChoiceClose={this.handleTeamChoiceClose}\n          handleTeamChoiceClick={this.handleTeamChoiceClick}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(SwaggerForm));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst styles = () => {\n  return {\n    loaderContainer: {\n      width: '100%',\n      position: 'absolute',\n      left: 0,\n      textAlign: 'center'\n    },\n    swaggerSpinner: {\n      margin: '10px'\n    }\n  };\n};\n\nconst Spinner = ({ loading, children, classes }) => {\n  return (\n    (loading && (\n      <div className={classes.loaderContainer}>\n        <Loader\n          className={classes.swaggerSpinner}\n          type=\"TailSpin\"\n          color=\"#324157\"\n          height={50}\n          width={50}\n          timeout={60000000}\n        />\n      </div>\n    )) ||\n    children\n  );\n};\n\nexport default withStyles(styles)(Spinner);\n","import React, { Component } from 'react';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { withStyles } from '@material-ui/core/styles';\nimport DownloadLink from 'react-download-link';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {\n  IconButton,\n  MenuList,\n  MenuItem,\n  Popper,\n  Paper,\n  Grow,\n  ClickAwayListener\n} from '@material-ui/core';\nimport { UserContext } from '../../contexts/UserContext';\nimport GitReposAPI from '../../api/GitReposAPI';\nimport Configuration from '../../helpers/configuration';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    justifyContent: 'center'\n  },\n  paper: {\n    marginRight: theme.spacing(2)\n  },\n  menuVersionTextfield: {\n    padding: theme.spacing(2),\n    paddingTop: 0\n  },\n  listOrganizationTransfer: {\n    overflow: 'auto',\n    maxHeight: '200px'\n  }\n});\n\nclass MenuListComposition extends Component {\n  static contextType = UserContext;\n\n  state = {\n    open: false,\n    openDeleteModal: false,\n    // anchorEl: '',\n    anchorElPub: '',\n    gitReposList: []\n  };\n\n  onClickRevert() {\n    const { revertToThisModel } = this.props;\n    revertToThisModel();\n    this.handleToggle();\n  }\n\n  onClickFreeze() {\n    const { freezeModel } = this.props;\n    freezeModel();\n    this.handleToggle();\n  }\n\n  onClickRename() {\n    const { renameModel } = this.props;\n    renameModel();\n    this.handleToggle();\n  }\n\n  onClickDelete() {\n    const { deleteThisModel } = this.props;\n    deleteThisModel();\n    this.handleToggleDeleteModel();\n  }\n\n  onClickDuplicate() {\n    const { duplicateThisModel } = this.props;\n    duplicateThisModel();\n    this.handleToggle();\n  }\n\n  onClickTransfer(modelId, tags, name, organizationId) {\n    const { transferThisModel } = this.props;\n    transferThisModel(modelId, tags, name, organizationId);\n  }\n\n  onClickPublish(repoId, modelId) {\n    const { publishThisModel } = this.props;\n    publishThisModel(repoId, modelId);\n  }\n\n  onClickPublishToApiManager() {\n    const { publishToApiManager } = this.props;\n    publishToApiManager();\n    this.handleToggle()\n  }\n\n  handleToggle = () => {\n    this.setState(state => ({ open: !state.open }));\n  };\n\n  handleToggleDeleteModel = () => {\n    this.setState(state => ({\n      open: false,\n      openDeleteModal: !state.openDeleteModal\n    }));\n  };\n\n  handleClose = event => {\n    if (this.anchorEl.contains(event.target)) {\n      return;\n    }\n    this.setState({ open: false });\n    // this.setState({ open: false, openPop: false });\n  };\n\n  handleClosePublish = event => {\n    if (this.anchorElPub.contains(event.target)) {\n      return;\n    }\n    this.setState({ open: false, openPopPub: false });\n  };\n\n  preventForm = e => {\n    e.preventDefault();\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  // handleClick = event => {\n  //   this.setState({ anchorEl: event.currentTarget, openPop: true });\n  // };\n\n  handleClickPublish = async event => {\n    await GitReposAPI.getRepos(this.props.row.organization.id)\n      .then(result => {\n        this.setState({ gitReposList: result });\n      })\n      .catch(() => {});\n    this.setState({ anchorElPub: event.currentTarget, openPopPub: true });\n  };\n\n  render() {\n    const {\n      classes,\n      isCurrent,\n      isNotCurrent,\n      downloadFreemind,\n      downloadSwagger,\n      name\n      // user\n    } = this.props;\n    const {\n      open,\n      openDeleteModal,\n      // anchorEl,\n      // openPop,\n      anchorElPub,\n      openPopPub,\n      gitReposList\n    } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <div>\n          <IconButton\n            data-cy=\"dashboard-actions-btn\"\n            size=\"small\"\n            buttonRef={node => {\n              this.anchorEl = node;\n            }}\n            aria-label=\"More\"\n            aria-owns={open ? 'menu-list-grow' : undefined}\n            aria-haspopup=\"true\"\n            onClick={this.handleToggle}\n          >\n            <MoreVertIcon />\n          </IconButton>\n          <Popper\n            className=\"menu-swagger-list\"\n            open={open || false}\n            anchorEl={this.anchorEl}\n            transition\n          >\n            {({ TransitionProps, placement }) => (\n              <Grow\n                {...TransitionProps}\n                id=\"menu-list-grow\"\n                style={{\n                  transformOrigin:\n                    placement === 'bottom' ? 'center top' : 'center bottom'\n                }}\n              >\n                <Paper>\n                  <ClickAwayListener onClickAway={this.handleClose}>\n                    <MenuList>\n                      <MenuItem\n                        disabled={isNotCurrent}\n                        onClick={() => this.onClickRename()}\n                      >\n                        Rename\n                      </MenuItem>\n                      <MenuItem\n                        disabled={isNotCurrent}\n                        onClick={() => this.onClickFreeze()}\n                      >\n                        Freeze model\n                      </MenuItem>\n                      <MenuItem\n                        disabled={isNotCurrent}\n                        onClick={() => this.onClickDuplicate()}\n                      >\n                        Duplicate\n                      </MenuItem>\n                      <MenuItem\n                        disabled={isCurrent}\n                        onClick={() => this.onClickRevert()}\n                      >\n                        Create a new current from this model\n                      </MenuItem>\n                      <MenuItem>\n                        <DownloadLink\n                          className=\"export-button\"\n                          filename={`${name}_model.mm`}\n                          exportFile={() => downloadFreemind()}\n                          label=\"Export to Freemind\"\n                        />\n                      </MenuItem>\n                      <MenuItem>\n                        <DownloadLink\n                          className=\"export-button\"\n                          filename={`${name}_swagger.yaml`}\n                          exportFile={() => downloadSwagger('YAML_FILE')}\n                          label=\"Download specifications as YAML\"\n                        />\n                      </MenuItem>\n                      <MenuItem>\n                        <DownloadLink\n                          className=\"export-button\"\n                          filename={`${name}_swagger.json`}\n                          exportFile={() => downloadSwagger('JSON_FILE')}\n                          label=\"Download specifications as JSON\"\n                        />\n                      </MenuItem>\n                      {/* {user.organizations.length > 1 ? (\n                        <>\n                          <MenuItem onClick={this.handleClick}>\n                            Transfer to organization\n                            <Popper\n                              open={openPop}\n                              anchorEl={anchorEl}\n                              onClose={this.handleClose}\n                              placement=\"right-start\"\n                            >\n                              <Paper\n                                className={classes.listOrganizationTransfer}\n                              >\n                                <MenuList>\n                                  {user.organizations\n                                    .filter(\n                                      organization =>\n                                        organization.id !==\n                                        this.props.row.organization.id\n                                    )\n                                    .map(organization => (\n                                      <MenuItem\n                                        onClick={() =>\n                                          this.onClickTransfer(\n                                            this.props.row.id,\n                                            this.props.row.tags,\n                                            this.props.row.name,\n                                            organization.id\n                                          )\n                                        }\n                                      >\n                                        {organization.name}\n                                      </MenuItem>\n                                    ))}\n                                </MenuList>\n                              </Paper>\n                            </Popper>\n                          </MenuItem>\n                        </>\n                      ) : null} */}\n\n                      {gitReposList.length > 0 ? (\n                        <>\n                          <MenuItem onClick={this.handleClickPublish}>\n                            Push to repository\n                            <Popper\n                              open={openPopPub || false}\n                              anchorEl={anchorElPub}\n                              onClose={this.handleClosePub}\n                              placement=\"right-start\"\n                            >\n                              <Paper\n                                className={classes.listOrganizationTransfer}\n                              >\n                                <MenuList>\n                                  {gitReposList.length > 0\n                                    ? gitReposList.map(gitRepos => (\n                                        <MenuItem\n                                          onClick={() =>\n                                            this.onClickPublish(\n                                              this.props.row.id,\n                                              gitRepos.id\n                                            )\n                                          }\n                                        >\n                                          {gitRepos.name}\n                                        </MenuItem>\n                                      ))\n                                    : null}\n                                </MenuList>\n                              </Paper>\n                            </Popper>\n                          </MenuItem>\n                        </>\n                      ) : null}\n                      {\n                        Configuration.GRAVITEE_ENABLED && <MenuItem\n                          onClick={() => this.onClickPublishToApiManager()}\n                        >\n                          Deploy to API Manager\n                        </MenuItem>\n                      }\n                      <MenuItem\n                        disabled={isNotCurrent}\n                        onClick={() => this.handleToggleDeleteModel()}\n                      >\n                        Delete\n                      </MenuItem>\n                    </MenuList>\n                  </ClickAwayListener>\n                </Paper>\n              </Grow>\n            )}\n          </Popper>\n        </div>\n        <div>\n          <Dialog\n            open={openDeleteModal}\n            onClose={this.handleClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">\n              Delete a model\n            </DialogTitle>\n            <DialogContent>\n              <DialogContentText id=\"alert-dialog-description\">\n                Are you sure you want to delete this model?\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleToggleDeleteModel} color=\"primary\">\n                Cancel\n              </Button>\n              <Button\n                data-cy=\"delete-model-modal-btn\"\n                onClick={() => this.onClickDelete()}\n                className=\"danger-btn\"\n                color=\"inherit\"\n                autoFocus\n              >\n                Delete\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(MenuListComposition);\n","import React, { Component } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => ({\n  root: {\n    width: '20rem',\n    backgroundColor: '#fff',\n    '& > div > div > span': {\n      padding: '2px 5px',\n      fontWeight: 'normal',\n      borderRadius: '16px'\n    },\n  },\n  tag: {\n    backgroundColor: '#4cab90',\n    color: 'white',\n    fontWeight: 'bold'\n  },\n});\n\nclass IntegrationAutosuggest extends Component {\n  handleInputChange = (event, values) => {\n    this.props.handleTagsChange(values);\n  };\n\n  render() {\n    const { classes, tagsList } = this.props;\n\n    return (\n      <Autocomplete\n        key={tagsList}\n        autoHighlight\n        multiple\n        limitTags={2}\n        id=\"multiple-limit-tags\"\n        onChange={this.handleInputChange}\n        size=\"small\"\n        classes={{\n          root: classes.root,\n          tag: classes.tag\n        }}\n        options={tagsList}\n        getOptionLabel={(option) => option}\n        renderInput={(params) => (\n          <TextField {...params} variant=\"outlined\" label=\"Search by Tags\" placeholder=\"Tags\" />\n        )}\n      />\n    );\n  }\n}\n\nexport default withStyles(styles)(IntegrationAutosuggest);\n","import React, { createContext, useReducer } from 'react';\n\nconst RuleContext = createContext();\n\nconst initialState = {\n  rules: [],\n  currentRule: {},\n  isRulesSaved: true,\n  openAlert: false\n};\n\nconst reducer = (state, action) => {\n  const { payload, type } = action;\n  const { currentRule, rules } = state;\n\n  switch (type) {\n    case 'addRule':\n      return { ...state, rules: [...rules, payload], isRulesSaved: false };\n    case 'deleteRule':\n      return {\n        ...state,\n        rules: [...rules.filter(rule => rule !== payload)],\n        isRulesSaved: false\n      };\n    case 'updateCurrentRule': {\n      return {\n        ...state,\n        currentRule: {\n          ...currentRule,\n          [payload.name]: payload.value\n        },\n        rules: [...rules],\n        isRulesSaved: false\n      };\n    }\n    case 'updateCurrentRuleText':\n      return {\n        ...state,\n        currentRule: { ...currentRule, yamlRule: payload, isRulesSaved: false }\n      };\n    case 'saveCurrentRule': {\n      const foundIndex = rules.findIndex(x => x.id === currentRule.id);\n      const newRules = rules;\n      newRules[foundIndex] = currentRule;\n      return { ...state, rules: newRules, isRulesSaved: false };\n    }\n    case 'selectRule':\n      return { ...state, currentRule: payload };\n    case 'fetchRules':\n      return { ...state, rules: payload };\n    case 'save':\n      return { ...state, isRulesSaved: payload };\n    default:\n      return { ...state };\n  }\n};\n\nfunction RuleContextProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <RuleContext.Provider value={value}>{props.children}</RuleContext.Provider>\n  );\n}\n\nconst RuleContextConsumer = RuleContext.Consumer;\n\nexport { RuleContext, RuleContextProvider, RuleContextConsumer };\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Radio,\n  Chip,\n  RadioGroup,\n  FormControlLabel,\n  FormControl\n} from '@material-ui/core';\n\nimport { RuleContext } from '../../contexts/RuleContext';\n\nconst useStyles = makeStyles({\n  root: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n      margin: 'auto'\n    }\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow:\n      'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage:\n      'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5'\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)'\n    }\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage:\n      'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"'\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3'\n    }\n  },\n  formContainer: {\n    margin: 'auto'\n  },\n  formLabel: {\n    margin: 0\n  }\n});\n\nfunction StyledRadio(props) {\n  const classes = useStyles();\n  const { label } = props;\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={\n        <Chip\n          color={label === 'DROP' ? 'primary' : 'secondary'}\n          label={label}\n        />\n      }\n      icon={\n        <Chip\n          variant=\"outlined\"\n          color={label === 'DROP' ? 'primary' : 'secondary'}\n          label={label}\n        />\n      }\n      {...props}\n    />\n  );\n}\n\nexport default function CustomizedRadios(props) {\n  const classes = useStyles();\n  const { onChange } = props;\n  const { state } = useContext(RuleContext);\n  const { currentRule } = state;\n\n  return (\n    <FormControl component=\"fieldset\" className={classes.formContainer}>\n      <RadioGroup\n        row\n        value={currentRule.operation || 'ADD'}\n        aria-label=\"Operation\"\n        name=\"operation\"\n        onChange={onChange}\n        style={{ justifyContent: 'center' }}\n      >\n        <FormControlLabel\n          className={classes.formLabel}\n          value=\"ADD\"\n          control={<StyledRadio label=\"ADD\" />}\n        />\n        <FormControlLabel\n          className={classes.formLabel}\n          value=\"DROP\"\n          control={<StyledRadio label=\"DROP\" />}\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n","import React from 'react';\nimport AceEditor from 'react-ace';\n\nimport 'ace-builds/src-noconflict/mode-yaml';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nconst Editor = props => {\n  const { yamlRule, onChangeTextEditor } = props;\n  return (\n    <AceEditor\n      fontSize={16}\n      mode=\"yaml\"\n      theme=\"monokai\"\n      style={{\n        width: '-webkit-fill-available',\n        height: '100%',\n        minHeight: '100%'\n      }}\n      value={yamlRule}\n      onChange={text => onChangeTextEditor(text)}\n      name=\"yamlRule\"\n      editorProps={{ $blockScrolling: false }}\n      showPrintMargin\n      showGutter\n      highlightActiveLine\n      setOptions={{\n        showLineNumbers: true,\n        tabSize: 2\n      }}\n    />\n  );\n};\n\nexport default Editor;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useContext } from 'react';\nimport { Card, List, ListItem, Button, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport { RuleContext } from '../../contexts/RuleContext';\n\nconst StyledListItem = withStyles({\n  root: {\n    \"&$selected\": {\n      // backgroundColor: \"\"\n    },\n    borderBottom: '1px solid rgba(0, 0, 0, 0.1)'\n  },\n  selected: {}\n})(ListItem);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    height: '100%'\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper,\n    height: '100%'\n  },\n  title: {\n    margin: theme.spacing(4, 0, 2)\n  },\n  buttonAddRule: {\n    margin: 'auto',\n    display: 'flex',\n    width: '-webkit-fill-available',\n    color: 'gray'\n  },\n  ruleContainer: {\n    height: '100%',\n    overflow: 'auto'\n  },\n  operationIcon: {\n    marginRight: '0.5rem'\n  },\n  titleRuleList: {\n    width: 'fit-content',\n    margin: 'auto',\n    paddingTop: '30px',\n    paddingBottom: '1rem',\n    fontSize: '22px',\n    fontWeight: 700,\n    marginBottom: '20px',\n    userSelect: 'none'\n  },\n  highligthTitleRuleList: {\n    width: '100px',\n    height: '3px',\n    margin: '8px auto 0',\n    display: 'block',\n    backgroundColor: '#314056'\n  },\n  ruleName: {\n    fontWeight: '300',\n    width: '90%'\n  }\n}));\n\nexport default function InteractiveList(props) {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(RuleContext);\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const { rules } = state;\n  const { addRule, deleteRule } = props;\n\n  const handleListItemClick = (index, rule) => {\n    setSelectedIndex(index);\n    dispatch({ type: 'selectRule', payload: rule });\n  };\n\n  const handleAddItem = () => {\n    setSelectedIndex(rules.length);\n    addRule();\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.demo}>\n        <Card className={classes.ruleContainer}>\n          <div className={classes.titleRuleList}>\n            Refine rules\n            <span className={classes.highligthTitleRuleList} />\n          </div>\n          <List dense>\n            {rules.length > 0 &&\n              rules.map((rule, index) => (\n                <StyledListItem\n                  key={index}\n                  button\n                  selected={selectedIndex === index}\n                  onClick={() => handleListItemClick(index, rule)}\n                >\n                  {rule.operation === 'ADD' ? (\n                    <AddIcon\n                      color=\"secondary\"\n                      className={classes.operationIcon}\n                    />\n                  ) : (\n                    <RemoveIcon\n                      color=\"primary\"\n                      className={classes.operationIcon}\n                    />\n                  )}\n                  <Typography\n                    color={rule.operation === 'ADD' ? 'secondary' : 'primary'}\n                    className={classes.ruleName}\n                  >\n                    {rule.name}\n                  </Typography>\n                  <div style={{ textAlign: 'right', width: '10%' }}>\n                    <DeleteIcon\n                      className=\"danger-btn\"\n                      onClick={() => deleteRule(rule)}\n                    />\n                  </div>\n                </StyledListItem>\n              ))}\n          </List>\n          <Button\n            color=\"secondary\"\n            onClick={() => handleAddItem()}\n            className={classes.buttonAddRule}\n          >\n            Create a new rule\n          </Button>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    width: '100%',\n    flexShrink: 0\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  },\n  titleSnippetList: {\n    width: 'fit-content',\n    margin: 'auto',\n    paddingTop: '30px',\n    paddingBottom: '1rem',\n    fontSize: '22px',\n    fontWeight: 700,\n    marginBottom: '20px',\n    userSelect: 'none'\n  },\n  highligthTitleSnippetList: {\n    width: '100px',\n    height: '3px',\n    margin: '8px auto 0',\n    display: 'block',\n    backgroundColor: '#314056'\n  }\n}));\n\nexport default function ControlledExpansionPanels() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.titleSnippetList}>\n        Snippets box\n        <span className={classes.highligthTitleSnippetList} />\n      </div>\n      <ExpansionPanel\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography className={classes.heading}>Customize the title</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            In order to change the default title,\n            add the following in the path field: <b>info.title</b>{' '}\n            and the following in the content field:\n            <blockquote>&#x22;my customized title&#x22;</blockquote>\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === 'panel2'}\n        onChange={handleChange('panel2')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\"\n        >\n          <Typography className={classes.heading}>Remove a specific response</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography style={{ width: '100%' }}>\n            In order to remove a specific status code from the responses,\n            create a DROP rule and place, for example,\n            the following in the path field:{' '}\n            <b style={{ fontSize: '12px' }}>paths./products/&#x7B;id&#x7D;.get.responses.401</b>\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === 'panel3'}\n        onChange={handleChange('panel3')}\n      >\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3bh-content\"\n          id=\"panel3bh-header\"\n        >\n          <Typography className={classes.heading}>Add a custom query param</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography style={{ width: '100%' }}>\n            In order to add a custom query param on a path,\n            add (for example) the following in the path field:{' '}\n            <b>paths./orders.get.parameters</b>{' '}\n            and the following in the content field:{' '}\n            <blockquote style={{ fontSize: '14px' }}>\n              - in: query<br />\n              &nbsp;&nbsp;name: sort<br />\n              &nbsp;&nbsp;required: false<br />\n              &nbsp;&nbsp;schema:<br />\n              &nbsp;&nbsp;&nbsp;&nbsp;type: string<br />\n              &nbsp;&nbsp;&nbsp;&nbsp;enum:<br />\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- &#x22;updatedAt:asc&#x22;\n            </blockquote>\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport {\n  Card,\n  Container,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RadioButton from './CustomRadioButton';\nimport TextEditor from './TextEditor';\nimport RuleList from './RuleList';\nimport SnippetList from './SnippetList';\n\nimport { RuleContext } from '../../contexts/RuleContext';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'grid',\n    gridTemplateColumns: '22% 56% 22%',\n    gridColumnGap: '0.5rem',\n    gridRowGap: '0.5rem',\n    height: '100%',\n    justifyItems: 'stretch'\n  },\n  mainContainerRows: {\n    gridTemplateRows: '9.5rem 40% auto',\n  },\n  rulesListBlock: {\n    gridColumn: 1,\n    gridRow: '1 / 4'\n  },\n  editMetadataBlock: {\n    gridColumn: 2,\n    gridRow: 1,\n    display: 'flex',\n    paddingTop: '1.3rem'\n  },\n  yamlRuleBlock: {\n    gridColumn: 2,\n    gridRow: '2 / 4'\n  },\n  snippetsBlock: {\n    gridColumn: 3,\n    gridRow: '1 / 4',\n    overflowY: 'auto'\n  },\n  saveAllBtn: {\n    width: '-webkit-fill-available',\n    gridColumn: '3 / 4',\n    backgroundColor: '#55A646',\n    '&:hover': {\n      backgroundColor: '#448238'\n    }\n  },\n  testAllBtn: {\n    width: '-webkit-fill-available',\n    color: '#5DBC42',\n    '&:hover': {\n      color: 'white',\n      backgroundColor: '#5DBC42'\n    }\n  },\n  operationsRadioBtn: {\n    display: 'block',\n    width: 'min-content',\n    paddingTop: '0.5rem'\n  },\n  ruleNameInput: {\n    gridRow: 1,\n    margin: '10px',\n    width: '-webkit-fill-available',\n    height: '40px'\n  },\n  rulePathInput: {\n    margin: '10px',\n    width: '-webkit-fill-available'\n  },\n  operationInput: {\n    margin: 'auto'\n  },\n  textfieldContainer: {\n    width: '-webkit-fill-available'\n  },\n  rootInput: {\n    borderRadius: '20px'\n  },\n  root: {\n    height: '40px'\n  },\n  cssLabel: {\n    fontSize: '15px',\n    lineHeight: 0\n  }\n}));\n\nexport default function DialogRule(props) {\n  const classes = useStyles();\n  const { state } = useContext(RuleContext);\n  const { currentRule, rules, isRulesSaved } = state;\n  const {\n    addRule,\n    deleteRule,\n    saveRules,\n    testRules,\n    onChange,\n    onChangeTextEditor\n  } = props;\n\n  return (\n    <>\n      <DialogContent style={{ padding: '1rem 0 0.5rem 0' }}>\n        <Container className={`${classes.container} ${classes.mainContainerRows}`}>\n          <div className={classes.rulesListBlock}>\n            <RuleList addRule={addRule} deleteRule={deleteRule} rules={rules} />\n          </div>\n          <Card className={classes.editMetadataBlock}>\n            <div className={classes.operationsRadioBtn}>\n              <RadioButton\n                className={classes.operationInput}\n                operation={currentRule.operation}\n                onChange={onChange}\n              />\n            </div>\n            <div className={classes.textfieldContainer}>\n              <TextField\n                className={classes.ruleNameInput}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel\n                  }\n                }}\n                InputProps={{\n                  classes: {\n                    notchedOutline: classes.rootInput,\n                    root: classes.root\n                  }\n                }}\n                value={currentRule.name}\n                id=\"outlined-helperText\"\n                label=\"Rule name\"\n                name=\"name\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                placeholder=\"Ex: Security rule on all POST\"\n                onChange={onChange}\n              />\n              <TextField\n                className={classes.rulePathInput}\n                InputLabelProps={{\n                  classes: {\n                    root: classes.cssLabel\n                  }\n                }}\n                InputProps={{\n                  classes: {\n                    notchedOutline: classes.rootInput,\n                    root: classes.root\n                  }\n                }}\n                value={currentRule.path}\n                id=\"outlined-helperText\"\n                label=\"Path\"\n                name=\"path\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                placeholder=\"path.products.post.message\"\n                onChange={onChange}\n              />\n            </div>\n          </Card>\n          {currentRule.operation !== 'DROP' && (\n            <>\n              <div className={classes.yamlRuleBlock}>\n                <TextEditor\n                  yamlRule={currentRule.yamlRule}\n                  onChangeTextEditor={onChangeTextEditor}\n                />\n              </div>\n            </>\n          )}\n          <Card className={classes.snippetsBlock}>\n            <SnippetList />\n          </Card>\n        </Container>\n      </DialogContent>\n      <DialogActions>\n        <Container className={classes.container}>\n          <Button\n            variant=\"outlined\"\n            className={classes.testAllBtn}\n            onClick={testRules}\n          >\n            Test all rules\n          </Button>\n          <Button\n            disabled={isRulesSaved}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.saveAllBtn}\n            onClick={saveRules}\n          >\n            Save rules\n          </Button>\n        </Container>\n      </DialogActions>\n    </>\n  );\n}\n","import React from 'react';\nimport {\n  Container,\n  DialogContent,\n  Typography,\n  Button\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'grid',\n    gridTemplateColumns: '25% 55% 20%',\n    gridTemplateRows: '20% 60% 20%',\n    gridGap: '0.1rem',\n    height: '100%'\n  },\n  containerDialogNoRule: {\n    gridRow: '1/4',\n    gridColumn: '1 / 4',\n    margin: 'auto',\n    textAlign: 'center'\n  },\n  buttonAddRule: {\n    margin: '5rem auto'\n  }\n}));\n\nexport default function DialogNoRule(props) {\n  const classes = useStyles();\n  const { addRule } = props;\n\n  return (\n    <>\n      <DialogContent>\n        <Container className={classes.container}>\n          <Container className={classes.containerDialogNoRule}>\n            <Typography variant=\"h4\" component=\"h1\">\n              There are no rules on this model\n            </Typography>\n\n            <Typography variant=\"body1\" component=\"p\">\n              {`Using \"refiners\", you can customize the generated specifications.\\n\n              Adding, modifying and removing lines is possible.\\n So in case one\n              feature is missing or does not meet your needs, it can be easily\n              adjusted here.\\n For example one can add custom security settings,\n              an introductory text, or remove an unwanted response status, etc.\\n\n              This does not affect the models: the refinements defined here act\n              as a presentation layer above the generated specifications.\\n\n              Reciprocally, modifying the models afterwards will not alter the\n              refiners.`}\n            </Typography>\n\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              onClick={addRule}\n              className={classes.buttonAddRule}\n            >\n              Create my first rule\n            </Button>\n          </Container>\n        </Container>\n      </DialogContent>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button, Snackbar, SnackbarContent } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ErrorIcon from '@material-ui/icons/Error';\n\nconst useStyles = makeStyles(() => ({\n  snackbarText: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  snackbarIcon: {\n    marginRight: '0.6rem'\n  },\n  snackbarSaveButton: {\n    marginRight: '0.5rem',\n    color: '#55A646',\n    border: '1px solid #448238',\n    '&:hover': {\n      color: '#448238',\n      border: '1px solid #448238'\n    }\n  },\n  snackbarCancelButton: {\n    color: '#EB4C2F',\n    border: '1px solid #EB4C2F',\n    '&:hover': {\n      color: '#c54129',\n      border: '1px solid #c54129'\n    }\n  }\n}));\n\nexport default function PositionedSnackbar(props) {\n  const classes = useStyles();\n  const [state] = useState({\n    vertical: 'top',\n    horizontal: 'center'\n  });\n  const { showSnack, saveRules, dismissSaveRules } = props;\n  const { vertical, horizontal } = state;\n\n  return (\n    <Snackbar\n      anchorOrigin={{ vertical, horizontal }}\n      key={`${vertical},${horizontal}`}\n      open={showSnack}\n    >\n      <SnackbarContent\n        message={\n          <span className={classes.snackbarText}>\n            <ErrorIcon className={classes.snackbarIcon} /> Do you want to save\n            your modification?\n          </span>\n        }\n        action={[\n          <>\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={saveRules}\n              className={classes.snackbarSaveButton}\n            >\n              Save\n            </Button>\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              onClick={dismissSaveRules}\n              className={classes.snackbarCancelButton}\n            >\n              Cancel\n            </Button>\n          </>\n        ]}\n      />\n    </Snackbar>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport uuid from 'uuid/v4';\nimport { Dialog, DialogTitle, IconButton, Chip } from '@material-ui/core';\nimport { createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Slide from '@material-ui/core/Slide';\nimport { Notification } from 'element-react';\nimport DialogRule from './DialogRule';\nimport DialogNoRule from './DialogNoRule';\nimport Snackbar from './Snackbar';\nimport ModelAPI from '../../api/ModelAPI';\n\nimport { RuleContext } from '../../contexts/RuleContext';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiDialog: {\n      paperWidthSm: {\n        width: 'fit-content',\n        maxWidth: 'none',\n        height: 'fit-content',\n        maxHeight: 'none'\n      },\n      paperFullWidth: {\n        height: '95%',\n        maxHeight: 'fit-content'\n      }\n    },\n    MuiPaper: {\n      root: {\n        height: '100%'\n      }\n    },\n    MuiContainer: {\n      maxWidthSm: {\n        maxWidth: 'max-content'\n      }\n    }\n  }\n});\n\nconst useStyles = makeStyles(() => ({\n  buttonCloseDialog: {\n    color: 'white',\n    position: 'absolute',\n    right: '1rem',\n    top: '0.130rem'\n  },\n  dialogHeader: {\n    backgroundColor: '#324157',\n    color: 'white'\n  },\n  titleDialogChip: {\n    fontWeight: 500,\n    marginRight: '1.25rem'\n  }\n}));\n\nexport default function RefineModalView(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [showSnack, setShowSnack] = useState(false);\n  const { state, dispatch } = useContext(RuleContext);\n  const { updateSwaggerList } = props;\n  const { id, name, refinerRules } = props.row;\n  const { currentRule, rules, isRulesSaved } = state;\n\n  const addRule = () => {\n    const createdRule = {\n      id: uuid(),\n      name: '',\n      path: '',\n      operation: 'ADD',\n      yamlRule: ''\n    };\n    dispatch({ type: 'addRule', payload: createdRule });\n    dispatch({ type: 'selectRule', payload: createdRule });\n  };\n\n  const deleteRule = rule => {\n    dispatch({ type: 'deleteRule', payload: rule });\n    dispatch({ type: 'selectRule', payload: rules[rules.length - 2] });\n  };\n\n  const onChangeCurrentRule = event => {\n    dispatch({ type: 'updateCurrentRule', payload: event.target });\n    dispatch({ type: 'saveCurrentRule', payload: currentRule });\n  };\n\n  const onChangeCurrentRuleText = text => {\n    dispatch({ type: 'updateCurrentRuleText', payload: text });\n    dispatch({ type: 'saveCurrentRule', payload: currentRule });\n  };\n\n  const handleClose = () => {\n    if (isRulesSaved) {\n      setShowSnack(false);\n      setOpen(false);\n      updateSwaggerList();\n    } else {\n      setShowSnack(true);\n    }\n  };\n\n  const handleClickOpen = async () => {\n    try {\n      const fetchedRules = await ModelAPI.getModelRules(id);\n      dispatch({ type: 'fetchRules', payload: fetchedRules });\n      setOpen(true);\n      dispatch({ type: 'selectRule', payload: fetchedRules[0] });\n    } catch (err) {\n      Notification.error({\n        title: 'Error',\n        message: 'You can only modify your own models. Please ask your team leader if you need a modification on this model.'\n      });\n    }\n  };\n\n  const testRules = async () => {\n    try {\n      await ModelAPI.testModelRule(id, rules);\n      Notification.success({\n        title: 'Success',\n        message: 'All tests have passed.'\n      });\n    } catch (err) {\n      Notification.error({\n        title: 'Error',\n        message: \"The tests didn't pass\"\n      });\n    }\n  };\n\n  const saveRules = async () => {\n    try {\n      await ModelAPI.createModelRule(id, rules);\n      dispatch({ type: 'save', payload: true });\n      setShowSnack(false);\n      Notification.success({\n        title: 'Success',\n        message: 'The rules have been saved'\n      });\n    } catch (err) {\n      Notification.error({\n        title: 'Error',\n        message: 'An error occurred while saving the rules'\n      });\n    }\n  };\n\n  const dismissSaveRules = () => {\n    dispatch({ type: 'save', payload: true });\n    setShowSnack(false);\n  };\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Chip\n          color=\"primary\"\n          size=\"small\"\n          onClick={handleClickOpen}\n          label={\n            refinerRules.length > 1\n              ? `${refinerRules.length} Rules`\n              : `${refinerRules.length} Rule`\n          }\n        />\n        <Dialog\n          fullScreen\n          open={open}\n          onClose={handleClose}\n          maxWidth=\"lg\"\n          fullWidth\n          TransitionComponent={Transition}\n        >\n          <DialogTitle id=\"alert-dialog-title\" className={classes.dialogHeader}>\n            <Chip\n              className={classes.titleDialogChip}\n              label={`${name.toUpperCase()}`}\n            />\n            <IconButton\n              edge=\"end\"\n              aria-label=\"delete\"\n              onClick={handleClose}\n              className={classes.buttonCloseDialog}\n            >\n              <CancelIcon fontSize=\"large\" />\n            </IconButton>\n          </DialogTitle>\n\n          {rules && rules.length > 0 ? (\n            <DialogRule\n              name={name}\n              addRule={addRule}\n              deleteRule={deleteRule}\n              saveRules={saveRules}\n              testRules={testRules}\n              onChange={onChangeCurrentRule}\n              onChangeTextEditor={onChangeCurrentRuleText}\n              handleClose={handleClose}\n            />\n          ) : (\n            <DialogNoRule\n              name={name}\n              addRule={addRule}\n              saveRules={saveRules}\n              handleClose={handleClose}\n            />\n          )}\n          <Snackbar\n            showSnack={showSnack}\n            saveRules={saveRules}\n            dismissSaveRules={dismissSaveRules}\n          />\n        </Dialog>\n      </ThemeProvider>\n    </div>\n  );\n}\n","import BaseAPI from './BaseAPI';\n\nexport default class ModelTagsAPI extends BaseAPI {\n  static getTags(teamId) {\n    const params = teamId ? { params: { teamId } } : {};\n    return this.execute('get', '/users/me/tags', params);\n  }\n\n  static createTag(tag, modelId) {\n    return this.execute('post', `/models/${modelId}/tags?input=${tag}`);\n  }\n\n  static deleteTag(tag, modelId) {\n    return this.execute('delete', `/models/${modelId}/tags?input=${tag}`);\n  }\n}\n","import globalStyles from './global.css';\n\nconst { dashboardH2Titles } = globalStyles;\nconst styles = theme => ({\n  dashboardH2Titles,\n  swaggerList: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: '#f3f3f3'\n  },\n  swaggerListPadding: {\n    padding: '1.5rem'\n  },\n  swaggerSelect: {\n    display: 'flex',\n    padding: '1.5rem',\n    justifyContent: 'center'\n  },\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  table: {\n    position: 'relative'\n  },\n  searchSelect: {\n    marginRight: '1rem'\n  },\n  bootstrapFormLabel: {\n    fontSize: 18\n  },\n  chip: {\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: '#4cab90 !important'\n  },\n  filterIcon: {\n    margin: theme.spacing(1),\n    color: '#4cab90',\n    verticalAlign: 'middle',\n    cursor: 'pointer'\n  },\n  inputTag: {\n    margin: theme.spacing(1),\n    verticalAlign: 'middle',\n    textAlign: 'center',\n    color: 'white',\n    borderRadius: '15px',\n    backgroundColor: '#4cab90',\n    height: '27.5px',\n    border: 'none',\n    fontWeight: 'bold',\n    fontSize: '12px'\n  },\n  modelSection: {\n    border: '1px solid rgb(234, 238, 251)',\n    borderRadius: '4px',\n    padding: '10px',\n    height: 'auto',\n    backgroundColor: '#fff',\n    boxShadow: '0 2px 4px 0 rgba(0, 0, 0, 0.12), 0 0 6px 0 rgba(0, 0, 0, 0.04)',\n    width: 'fill-content',\n    margin: 'auto',\n    marginBottom: '5px',\n    textAlign: 'center'\n  },\n  modelPaddingTitle: {\n    paddingTop: '1.5rem'\n  },\n  paper: {\n    margin: '0 1.5rem',\n    overflowX: 'auto',\n    height: '70%',\n  },\n  tableHeaderCell: {\n    backgroundColor: '#324157',\n    color: '#bfcbd9',\n    position: 'sticky',\n    zIndex: '400',\n    top: '0',\n    fontSize: '15px',\n    padding: '1rem'\n  },\n  tableBodyCell: {\n    fontSize: '13px'\n  },\n  paginationBlock: {\n    width: '100%',\n    verticalAlign: 'middle',\n    textAlign: 'center',\n    fontSize: '12px'\n  },\n  tablePagination: {\n    display: 'inline-block'\n  },\n  ellipsis: {\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    \"&:hover\": {\n      overflow: 'visible',\n      wordBreak: 'break-all',\n      whiteSpace: 'break-spaces'\n    }\n  },\n  modalContainer: {\n    backgroundColor: '#e0e0e0',\n    width: '300px',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    padding: '20px',\n    transform: 'translateY(-50%) translateX(-50%)',\n    borderRadius: '10px',\n    border: 'solid 1px black',\n    textAlign: 'center'\n  },\n  buttonGravitee: {\n    marginTop: '10px'\n  },\n  modelSectionTitle: {\n    fontSize: '20px',\n    color: '#324157'\n  }\n});\n\nexport default styles;\n","/* eslint-disable class-methods-use-this */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable react/no-array-index-key */\n/* eslint-disable jsx-a11y/label-has-for */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { Component } from 'react';\nimport { Notification } from 'element-react';\nimport { withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport Input from '@material-ui/core/Input';\nimport AutosizeInput from 'react-input-autosize';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport AddFilterIcon from '@material-ui/icons/AddCircleOutline';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Spinner from '../common/Spinner';\nimport SwaggerMenu from './SwaggerMenu';\nimport FilterTag from './FilterTag';\nimport RefineView from '../refine/RefineModalView';\nimport FreemindAPI from '../../api/FreemindAPI';\nimport ModelAPI from '../../api/ModelAPI';\nimport ModelTagsAPI from '../../api/ModelTagsAPI';\nimport GitReposAPI from '../../api/GitReposAPI';\nimport styles from '../../styles/SwaggerList.css';\nimport { UserContext } from '../../contexts/UserContext';\nimport { RuleContextProvider } from '../../contexts/RuleContext';\nimport Configuration from '../../helpers/configuration';\n\nconst uuidv4 = require('uuid/v4');\n\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    minWidth: '15rem',\n    width: '25rem',\n    maxWidth: '25rem',\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    table: {\n      minWidth: 700\n    },\n    '&:hover': {\n      border: '1px solid black'\n    },\n    '&:focus': {\n      borderRadius: '4px',\n      backgroundColor: theme.palette.background.paper,\n    }\n  }\n}))(InputBase);\n\nclass SwaggerList extends Component {\n  static contextType = UserContext;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      tagsList: [],\n      tags: [],\n      pageSize: 20,\n      page: 0,\n      total: 0,\n      models: [],\n      modelNames: [],\n      showMe: false,\n      labelId: '',\n      labelInput: '',\n      isClicked: true,\n      isClickID: '',\n      tagName: '',\n      modelLoading: true,\n      showGravitee: false,\n      graviteeMessage: null\n    };\n    this.inputLabel = null;\n    this.inputTag = null;\n  }\n\n  componentDidMount() {\n    const { selectedTeam } = this.context;\n    const teamId = selectedTeam ? selectedTeam.id : '';\n    this.updateSwaggerList();\n    this.loadOptionModel(teamId);\n    this.getUserModelsTags(teamId);\n  }\n\n  setFocus() {\n    this.inputLabel.focus();\n  }\n\n  setFocusTag() {\n    this.inputTag.focus();\n  }\n\n  getUserModelsTags = (teamId) => {\n    ModelTagsAPI.getTags(teamId)\n      .then(tagsList => {\n        this.setState({ tagsList });\n      });\n  }\n\n  downloadSwagger = (model, fileType) => {\n    return new Promise(resolve => {\n      ModelAPI.getModelSwaggerAsFile(model.id, fileType).then(result => {\n        resolve(fileType === 'JSON_FILE' ? JSON.stringify(result) : result);\n      });\n    });\n  };\n\n  downloadFreemind = model => {\n    return new Promise(resolve => {\n      FreemindAPI.getFreemind(model.id).then(data => {\n        resolve(data);\n      });\n    });\n  };\n\n  editMindmap = model => {\n    this.props.history.push({\n      pathname: '/tree',\n      state: {\n        modelId: model.id,\n        organizationId: model.organization.id,\n        teamId: model.team.id,\n        teamName: model.team.name\n      }\n    });\n  };\n\n  frozenMindmap = model => {\n    ModelAPI.getModel(model.id).then(populatedModel => {\n      this.props.history.push({\n        pathname: '/tree-frozen',\n        state: {\n          model: populatedModel\n        }\n      });\n    });\n  };\n\n  freezeModel = model => {\n    ModelAPI.freezeModel(model.id)\n      .then(() => {\n        this.updateSwaggerList();\n        this.loadOptionModel();\n        Notification.success({\n          title: 'Success',\n          message: 'A frozen model has been created.'\n        });\n      })\n      .catch(err => {\n        if (err.response.status === 403) {\n          Notification.error({\n            title: 'Error',\n            message:\n              'You can only modify your own models. Please ask your team leader if you need a modification on this model.'\n          });\n        } else {\n          Notification.error({\n            title: 'Error',\n            message: 'An error occurred while freezing model.'\n          });\n        }\n      });\n  };\n\n  revertToThisModel = model => {\n    ModelAPI.revertModel(model.id)\n      .then(() => {\n        this.updateSwaggerList();\n        this.loadOptionModel();\n        Notification.success({\n          title: 'Success',\n          message: 'Current model has been reverted to this tagged model.'\n        });\n      })\n      .catch(() => {\n        Notification.error({\n          title: 'Error',\n          message: 'An error occurred while reverting'\n        });\n      });\n  };\n\n  transferThisModel = (modelId, tags, name, organizationId) => {\n    ModelAPI.changeOrganizationModel(modelId, tags, name, organizationId)\n      .then(() => {\n        this.updateSwaggerList();\n        this.loadOptionModel();\n        Notification.success({\n          title: 'Success',\n          message: 'This model has been transferred.'\n        });\n      })\n      .catch(() => {\n        Notification.error({\n          title: 'Error',\n          message: 'An error occurred while transferring.'\n        });\n      });\n  };\n\n  publishThisModel = (repoId, modelId) => {\n    GitReposAPI.commitModelToRepos(repoId, modelId)\n      .then(() => {\n        Notification.success({\n          title: 'Success',\n          message: 'This model have been publish to git.'\n        });\n      })\n      .catch(() => {\n        Notification.error({\n          title: 'Error',\n          message: 'An error occurred while publishing to git.'\n        });\n      });\n  };\n\n  deleteThisModel = model => {\n    ModelAPI.deleteModel(model.id)\n      .then(() => {\n        this.updateSwaggerList();\n        this.loadOptionModel();\n        Notification.success({\n          title: 'Success',\n          message: 'This model has been deleted.'\n        });\n      })\n      .catch(err => {\n        if (err.response.status === 403) {\n          Notification.error({\n            title: 'Error',\n            message:\n              'You can only delete your own models. Please ask your team leader if you need to delete this model.'\n          });\n        } else {\n          Notification.error({\n            title: 'Error',\n            message: 'An error occurred while deleting.'\n          });\n        }\n      });\n  };\n\n  publishToApiManager = async (model, env) => {\n    try {\n      const api = await ModelAPI.publishToApiManager(model.id, env);\n      this.updateSwaggerList();\n      this.setState({\n        showGravitee: true,\n        graviteeMessage: api.message\n      });\n    } catch (error) {\n      this.setState({\n        showGravitee: true,\n        graviteeMessage: error.response.data.message\n      });\n    }\n  };\n\n  closeGraviteeModal = () => {\n    this.setState({\n      showGravitee: false,\n      graviteeMessage: null\n    });\n  };\n\n  handleNameChange = event => {\n    this.setState({ name: event.target.value, page: 0 }, () => {\n      this.updateSwaggerList();\n    });\n  };\n\n  handleTeamChange = ({ target }) => {\n    this.setState(\n      {\n        name: '',\n        tags: [],\n        page: 0\n      },\n      () => {\n        this.context.selectedTeam = target.value;\n        this.loadOptionModel(target.value.id || target.value);\n        this.getUserModelsTags(target.value.id || target.value);\n        this.updateSwaggerList();\n      }\n    );\n  };\n\n  handleTagsChange = tags => {\n    this.setState({ tags, page: 0 }, () => {\n      this.updateSwaggerList();\n    });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page }, () => {\n      this.updateSwaggerList();\n    });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ pageSize: event.target.value, page: 0 }, () => {\n      this.updateSwaggerList();\n    });\n  };\n\n  loadOptionModel = teamId => {\n    ModelAPI.getModelNames(teamId).then(resp => {\n      this.setState({\n        modelNames: resp.map(el => ({ id: uuidv4(), name: el }))\n      });\n    });\n  };\n\n  formPreventDefault = e => {\n    e.preventDefault();\n  };\n\n  formSubmit(model, target) {\n    this.setState({ showMe: false });\n    if (model.name !== target.value) {\n      this.renameThisModel(model, target.value);\n    }\n  }\n\n  formSubmitTag(model, target) {\n    this.createTag(model, target.value);\n  }\n\n  inputName(row) {\n    const { classes } = this.props;\n    if (this.state.labelId === row.id && this.state.showMe) {\n      return (\n        <form onSubmit={() => this.formSubmit(row, this.inputLabel)}>\n          <Input\n            name=\"Rename\"\n            // eslint-disable-next-line no-return-assign\n            inputRef={elem => (this.inputLabel = elem)}\n            id={row.id}\n            label=\"name\"\n            type=\"name\"\n            onChange={e => this.changeLabel(e.target)}\n            value={this.state.labelInput}\n            onBlur={e => this.hideMe(e.target, row)}\n          />\n        </form>\n      );\n    }\n    if (row.freezeTag === '0') {\n      return (\n        <div\n          onClick={() => this.editMindmap(row)}\n          style={{\n            verticalAlign: 'middle',\n            cursor: 'pointer'\n          }}\n        >\n          <div className={classes.ellipsis}>\n            <label\n              disabled\n              style={{\n                cursor: 'pointer',\n                textDecoration: 'underline'\n              }}\n            >\n              {row.name}\n            </label>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div\n        onClick={() => this.frozenMindmap(row)}\n        style={{\n          verticalAlign: 'middle',\n          textOverflow: 'ellipsis',\n          whiteSpace: 'nowrap',\n          overflow: 'hidden',\n          cursor: 'pointer'\n        }}\n      >\n        <div className={classes.ellipsis}>\n          <label\n            disabled\n            style={{\n              cursor: 'pointer',\n              textDecoration: 'underline'\n            }}\n          >\n            {row.name}\n          </label>\n        </div>\n      </div>\n    );\n  }\n\n  displayFormattedDate(freezeTag, date) {\n    return freezeTag === '0' ? (\n      <p>{this.formatDate(date)}</p>\n    ) : (\n      <p style={{ color: '#2a8dff' }}>\n        {this.formatDate(date)}\n      </p>\n    );\n  }\n\n  formatDate(dateStr) {\n    const date = new Date(dateStr);\n    return `${date.toLocaleDateString('en-US')} ${date.toLocaleTimeString(\n      'en-US',\n      {\n        hour: 'numeric',\n        minute: 'numeric'\n      }\n    )}`;\n  }\n\n  renameModel(row) {\n    this.revealMe(row.id, row.name, row.freezeTag);\n    this.setState({ showMe: true });\n  }\n\n  updateSwaggerList() {\n    this.setState({\n      modelLoading: true\n    });\n\n    const {\n      page,\n      pageSize,\n      name,\n      tags\n    } = this.state;\n\n    const { selectedTeam } = this.context;\n\n    const mapName = [];\n\n    const params = { page, pageSize };\n\n    if (name) params.name = name;\n    if (tags && tags.length > 0) params.tags = tags.join(',');\n    if (selectedTeam) params.team = selectedTeam.id;\n\n    ModelAPI.getModels(params)\n      .then(response => {\n        if (response.data.data) {\n          mapName.push(response.data.data);\n        }\n\n        this.setState({\n          models: mapName.flat(),\n          total: response.data.total,\n          pageSize: response.data.pageSize,\n          modelLoading: false\n        });\n      })\n      .catch(() => {\n        this.setState({\n          models: [],\n          total: 0,\n          pageSize: 0,\n          modelLoading: false\n        });\n      });\n  }\n\n  revealMe(id, label, freezeTag) {\n    if (freezeTag === '0') {\n      this.setState({ showMe: true, labelId: id, labelInput: label }, () =>\n        this.setFocus()\n      );\n    }\n  }\n\n  hideMe(target, data) {\n    this.setState({ showMe: false }, () =>\n      this.renameThisModel(data, target.value)\n    );\n  }\n\n  changeLabel(target) {\n    this.setState({\n      labelInput: target.value\n    });\n  }\n\n  renameThisModel(model, value) {\n    ModelAPI.renameModel(model.id, value)\n      .then(() => {\n        this.updateSwaggerList();\n        this.loadOptionModel();\n      })\n      .catch(err => {\n        if (err.response.status === 403) {\n          Notification.error({\n            title: 'Error',\n            message:\n              'You can only modify your own models. Please ask your team leader if you need a modification on this model.'\n          });\n        } else {\n          Notification.error({\n            title: 'Error',\n            message: 'A model already have this name.'\n          });\n        }\n      });\n  }\n\n  duplicateThisModel(model) {\n    ModelAPI.duplicateModel(model.id)\n      .then(() => {\n        this.updateSwaggerList();\n        this.loadOptionModel();\n        Notification.success({\n          title: 'Success',\n          message: 'This model has been duplicated.'\n        });\n      })\n      .catch(err => {\n        if (err.response.status === 403) {\n          Notification.error({\n            title: 'Error',\n            message:\n              'You can only modify your own models. Please ask your team leader if you need a modification on this model.'\n          });\n        } else {\n          Notification.error({\n            title: 'Error',\n            message: 'An error occurred while duplicating.'\n          });\n        }\n      });\n  }\n\n  handleDelete(e) {\n    this.setState({ isClicked: false, isClickID: e }, () => this.setFocusTag());\n  }\n\n  deleteTag(tag, model) {\n    ModelTagsAPI.deleteTag(tag, model.id)\n      .then(() => {\n        this.updateSwaggerList();\n      })\n      .catch(err => {\n        if (err.response.status === 403) {\n          Notification.error({\n            title: 'Error',\n            message:\n              'You can only modify your own models. Please ask your team leader if you need a modification on this model.'\n          });\n        } else {\n          Notification.error({\n            title: 'Error',\n            message: 'An error occurred while deleting a tag.'\n          });\n        }\n      });\n  }\n\n  cancelTag() {\n    this.setState({ isClicked: true, isClickID: null, tagName: '' });\n  }\n\n  hideInput(model) {\n    this.setState({ isClicked: true, isClickID: null }, () => {\n      const { tagName, tagsList } = this.state;\n      ModelTagsAPI.createTag(tagName, model.id)\n        .then(() => {\n          if (!tagsList.includes(tagName)) {\n            this.state.tagsList.push(tagName);\n          }\n          this.setState({ tagName: '' });\n          this.updateSwaggerList();\n        })\n        .catch(err => {\n          this.setState({ tagName: '' });\n          if (err.response.status === 403) {\n            Notification.error({\n              title: 'Error',\n              message:\n                'You can only modify your own models. Please ask your team leader if you need a modification on this model.'\n            });\n          } else {\n            Notification.error({\n              title: 'Error',\n              message: 'An error occurred while creating a tag.'\n            });\n          }\n        });\n    });\n  }\n\n  changeTagName(e) {\n    this.setState({ tagName: e.target.value });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { page, pageSize, models, modelLoading, modelNames, tagsList } = this.state;\n    const { user } = this.context;\n    return (\n      <div className={classes.swaggerList} onSubmit={this.formPreventDefault}>\n        <h2 className={`${classes.dashboardH2Titles} ${classes.modelPaddingTitle}`}>Models List</h2>\n        <div className={classes.swaggerSelect}>\n          { !Configuration.GRAVITEE_ENABLED && <FormControl className={classes.searchSelect}>\n              <InputLabel\n                htmlFor=\"age-customized-select-team-name\"\n                className={classes.bootstrapFormLabel}\n              />\n              <Select\n                displayEmpty\n                style={{ margin: 0 }}\n                value={this.context.selectedTeam || ''}\n                onChange={this.handleTeamChange}\n                input={\n                  <BootstrapInput name=\"team\" id=\"age-customized-select-team-name\" />\n                }\n              >\n                <MenuItem value=\"\">\n                  <em>All teams</em>\n                </MenuItem>\n                {this.context.teams.map(t => {\n                  return (\n                    <MenuItem key={t.team.id} value={t.team}>\n                      {t.team.name}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          }\n          <FormControl className={classes.searchSelect}>\n            <InputLabel\n              htmlFor=\"age-customized-select-models-name\"\n              className={classes.bootstrapFormLabel}\n            />\n            <Select\n              displayEmpty\n              data-cy=\"model-name-from-models-select\"\n              style={{ margin: 0 }}\n              value={this.state.name}\n              onChange={this.handleNameChange}\n              input={\n                <BootstrapInput name=\"name\" id=\"age-customized-select-models-name\" />\n              }\n            >\n              <MenuItem value=\"\">\n                <em>All models</em>\n              </MenuItem>\n              {modelNames.sort(this.compareNameList).map(e => {\n                return (\n                  <MenuItem key={e.id} value={e.name}>\n                    {e.name}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n          <FilterTag tagsList={tagsList} handleTagsChange={tags => this.handleTagsChange(tags)} />\n        </div>\n\n        <Paper className={`${classes.root} ${classes.paper}`} >\n          <Table className={classes.table} size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell className={classes.tableHeaderCell} align=\"left\">Model</TableCell>\n                <TableCell className={classes.tableHeaderCell} align=\"center\">Creation</TableCell>\n                <TableCell className={classes.tableHeaderCell} align=\"center\">Last Modifications</TableCell>\n                <TableCell className={classes.tableHeaderCell} align=\"center\">Team</TableCell>\n                <TableCell className={classes.tableHeaderCell} align=\"center\">Tags</TableCell>\n                <TableCell className={classes.tableHeaderCell} align=\"center\">Refining</TableCell>\n                <TableCell className={classes.tableHeaderCell} align=\"center\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <Spinner loading={modelLoading}>\n              <TableBody>\n                {models.length === 0 && (\n                  <TableRow>\n                    <TableCell size=\"medium\" align=\"center\" component=\"th\" colSpan={7} style={{ fontSize: '18px' }}>\n                      <p>No models in selection.</p>\n                    </TableCell>\n                  </TableRow>\n                )}\n                {models.map(row => {\n                  return (\n                    <TableRow key={row.id} hover>\n                      <TableCell className={classes.tableBodyCell} style={{ width: '12rem' }} key={row.id} data-cy=\"model-name-from-swagger-list\" align=\"left\">\n                        <p style={{ width: '12rem' }}>{this.inputName(row)}</p>\n                      </TableCell>\n                      <TableCell className={classes.tableBodyCell} align=\"center\">\n                        <p>{row.author.username}</p>\n                        {this.displayFormattedDate(row.freezeTag, row.createdAt)}\n                      </TableCell>\n                      <TableCell className={classes.tableBodyCell} align=\"center\">\n                        {\n                          row.freezeTag === '0' ?\n                              <div>\n                                <p>{row.lastUpdatedUser || row.author.username}</p>\n                                {this.displayFormattedDate(row.freezeTag, row.updatedAt)}\n                              </div>\n                            :\n                              <p style={{ color: '#2a8dff' }}>This model is Frozen</p>\n                        }\n                      </TableCell>\n                      <TableCell className={classes.tableBodyCell} align=\"center\"><p>{row.team.name}</p></TableCell>\n                      <TableCell align=\"center\">\n                        {row.tags.map(tag => {\n                          return tag.startsWith('version:') ? (\n                            <Chip\n                              key={tag}\n                              className={classes.chip}\n                              avatar={<Avatar>V</Avatar>}\n                              label={tag.split(':')[1]}\n                              onDelete={() => this.deleteTag(tag, row)}\n                              size=\"small\"\n                              clickable={false}\n                            />\n                          ) : (\n                            <Chip\n                              key={tag}\n                              className={classes.chip}\n                              label={tag}\n                              onDelete={() => this.deleteTag(tag, row)}\n                              size=\"small\"\n                              clickable={false}\n                            />\n                          );\n                        })}\n                        {this.state.isClicked ? (\n                          <AddFilterIcon\n                            onClick={() => this.handleDelete(row.id)}\n                            className={classes.filterIcon}\n                          />\n                        ) : this.state.isClickID === row.id ? (\n                          <form onSubmit={() => this.hideInput(row)}>\n                            <AutosizeInput\n                              name=\"Rename\"\n                              // eslint-disable-next-line no-return-assign\n                              inputRef={elem => (this.inputTag = elem)}\n                              id={row.id}\n                              inputClassName={classes.inputTag}\n                              label=\"name\"\n                              type=\"name\"\n                              onChange={e => this.changeTagName(e)}\n                              value={this.state.tagName}\n                              onBlur={() => this.cancelTag()}\n                            />\n                          </form>\n                        ) : (\n                          <AddFilterIcon\n                            onClick={() => this.handleDelete(row.id)}\n                            className={classes.filterIcon}\n                          />\n                        )}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <RuleContextProvider>\n                          <RefineView\n                            row={row}\n                            updateSwaggerList={() => this.updateSwaggerList()}\n                          />\n                        </RuleContextProvider>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <SwaggerMenu\n                          user={user}\n                          row={row}\n                          isNotCurrent={row.freezeTag !== '0'}\n                          isCurrent={row.freezeTag === '0'}\n                          name={row.name}\n                          renameModel={() => this.renameModel(row)}\n                          nameVersion={() => this.nameVersion(row)}\n                          freezeModel={() => this.freezeModel(row)}\n                          downloadFreemind={() => this.downloadFreemind(row)}\n                          publishThisModel={(repoId, modelId) =>\n                            this.publishThisModel(repoId, modelId)\n                          }\n                          publishToApiManager={() =>\n                            this.publishToApiManager(row)\n                          }\n                          downloadSwagger={fileType =>\n                            this.downloadSwagger(row, fileType)\n                          }\n                          revertToThisModel={() =>\n                            this.revertToThisModel(row)\n                          }\n                          transferThisModel={(\n                            modelId,\n                            tags,\n                            name,\n                            organizationId\n                          ) =>\n                            this.transferThisModel(\n                              modelId,\n                              tags,\n                              name,\n                              organizationId\n                            )\n                          }\n                          deleteThisModel={() => this.deleteThisModel(row)}\n                          duplicateThisModel={() =>\n                            this.duplicateThisModel(row)\n                          }\n                        />\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Spinner>\n          </Table>\n        </Paper>\n        <div className={classes.paginationBlock}>\n          <TablePagination\n            className={classes.tablePagination}\n            rowsPerPageOptions={[20, 30, 50]}\n            component=\"div\"\n            page={page}\n            count={this.state.total}\n            rowsPerPage={pageSize}\n            backIconButtonProps={{\n              'aria-label': 'Previous Page'\n            }}\n            nextIconButtonProps={{\n              'aria-label': 'Next Page'\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n          />\n        </div>\n        <Modal\n          open={this.state.showGravitee}\n          onClose={() => this.closeGraviteeModal()}\n        >\n          {this.state.graviteeMessage && (\n            <div className={classes.modalContainer}>\n              <Typography variant=\"h6\">{this.state.graviteeMessage}</Typography>\n\n              <Button\n                className={classes.buttonGravitee}\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => this.closeGraviteeModal()}\n              >\n                OK\n              </Button>\n            </div>\n          )}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(SwaggerList));\n","const styles = () => {\n  return {\n    dashboardContainer: {\n      display: 'inline-flex',\n      width: '100%',\n      height: '100vh',\n      overflow: 'auto'\n    },\n    dashboardLateralMenu: {\n      width: '16%',\n      minWidth: '290px'\n    },\n    dashboardSwaggerList: {\n      width: '84%'\n    }\n  };\n};\n\nexport default styles;\n","import React, { PureComponent } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Notification } from 'element-react';\nimport SwaggerForm from '../dashboard/SwaggerForm';\nimport SwaggerList from '../dashboard/SwaggerList';\nimport styles from '../../styles/Dashboard.css';\nimport { UserContext } from '../../contexts/UserContext';\n\nclass Dashboard extends PureComponent {\n  static contextType = UserContext;\n\n  render() {\n    const { classes, location } = this.props;\n\n    if (location && location.state && location.state.error) {\n      Notification.error({\n        title: 'Error',\n        message: location.state.error\n      });\n    }\n\n    return (\n      <div className={classes.dashboardContainer}>\n        <div className={classes.dashboardLateralMenu}>\n          <SwaggerForm />\n        </div>\n        <div className={classes.dashboardSwaggerList}>\n          <SwaggerList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Dashboard);\n","import BaseAPI from './BaseAPI';\n\nexport default class ModelAPI extends BaseAPI {\n  static getModelNames(teamId) {\n    const params = teamId ? { params: { teamId } } : {};\n    return this.execute('get', 'users/me/modelsList', params);\n  }\n\n  static getModels(params) {\n    return this.execute('get', `users/me/models`, { params }, true);\n  }\n\n  static getModelSwaggerAsFile(modelId, fileType) {\n    return this.execute('get', `models/${modelId}/swagger?type=${fileType}`);\n  }\n\n  static createModel(teamId, model) {\n    return this.execute('post', `/models/`, {\n      data: { model, teamId }\n    });\n  }\n\n  static getModel(modelId) {\n    return this.execute('get', `/models/${modelId}`);\n  }\n\n  static saveModel(modelId, model, hasExited) {\n    if (hasExited) {\n      return this.execute('put', `/models/${modelId}?hasExited=true`, { data: model });\n    }\n    return this.execute('put', `/models/${modelId}`, { data: model });\n  }\n\n  static freezeModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=freeze`);\n  }\n\n  static revertModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=revert`);\n  }\n\n  static duplicateModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=duplicate`);\n  }\n\n  static deleteModel(modelId) {\n    return this.execute('delete', `/models/${modelId}`);\n  }\n\n  static renameModel(modelId, name) {\n    return this.execute('patch', `/models/${modelId}`, { data: { name } });\n  }\n\n  static publishToApiManager(modelId) {\n    return this.execute('post', `/models/${modelId}/gravitee`);\n  }\n\n  static changeOrganizationModel(modelId, tags, name, organizationId) {\n    return this.execute('patch', `/models/${modelId}`, {\n      data: { tags, name, organizationId }\n    });\n  }\n\n  static getModelRules(modelId) {\n    return this.execute('get', `/models/${modelId}/refinerRules`);\n  }\n\n  static testModelRule(modelId, rules) {\n    return this.execute(\n      'post',\n      `/models/${modelId}/refinerRules?testOnly=true`,\n      {\n        data: rules\n      }\n    );\n  }\n\n  static createModelRule(modelId, rules) {\n    return this.execute('put', `/models/${modelId}/refinerRules`, {\n      data: rules\n    });\n  }\n\n  static updateModelRule(modelId, ruleId, rule) {\n    return this.execute('put', `/models/${modelId}/refinerRules/${ruleId}`, {\n      data: rule\n    });\n  }\n\n  static deleteModelRule(modelId, ruleId) {\n    return this.execute('delete', `/models/${modelId}/refinerRules/${ruleId}`);\n  }\n}\n","import BaseAPI from './BaseAPI';\n\nexport default class SwaggerAPI extends BaseAPI {\n  static getResourcesFromUploaded(data) {\n    return this.execute('post', '/swaggerUpload/resources', {\n      data: { jsonstring: data }\n    });\n  }\n\n  static getModelsFromResources(data) {\n    return this.execute('post', '/swaggerUpload/models', {\n      data\n    });\n  }\n\n  static requestPreview(data) {\n    return this.execute('post', '/swaggerPreviews', { data });\n  }\n\n  static requestLivePreview(data, organizationId) {\n    return this.execute(\n      'post',\n      `/swaggerLivePreviews?organizationId=${organizationId}`,\n      { data }\n    );\n  }\n}\n","import uniqid from 'uniqid';\n\nexport function searchTreeByKey(key, startnode) {\n  const stack = [startnode];\n  while (stack.length) {\n    const node = stack.pop();\n    if (node.nodeKey === key) return node;\n    stack.push(...node.children);\n  }\n  return stack.pop() || null;\n}\n\nexport function isAncestorOf(nodeKey, ofNodeKey, root) {\n  let ofNode = searchTreeByKey(ofNodeKey, root);\n\n  while (ofNode.nodeKey !== nodeKey && ofNode.parent) {\n    ofNode = searchTreeByKey(ofNode.parent, root);\n  }\n\n  return ofNode.nodeKey === nodeKey;\n}\n\nexport function cloneTree(node, parentNodeKey, generateId = true) {\n  return {\n    ...node,\n    nodeKey: generateId ? uniqid() : node.nodeKey,\n    parent: parentNodeKey,\n    children: node.children.map(child => {\n      return cloneTree(child, node.nodeKey, generateId);\n    })\n  };\n}\n\nexport function addNewChildNode(root, selectedNodeKey, direction) {\n  if (!selectedNodeKey) {\n    return {};\n  }\n  const allData = cloneTree(root, null, false);\n  const nodeWhereToAdd = searchTreeByKey(selectedNodeKey, allData);\n  const newNodeKey = uniqid();\n  const newNode = {\n    name: '',\n    direction: direction || nodeWhereToAdd.direction,\n    parent: nodeWhereToAdd.nodeKey,\n    children: [],\n    nodeKey: newNodeKey,\n    type: 'string',\n    referenceId: '',\n    isArray: false,\n    example: '',\n    abstract: true,\n    description: '',\n    queryable: false,\n    paginable: false,\n    patchable: false,\n    notImplemented: false,\n    isSubPath: false,\n    verbs: [],\n    calculated: false,\n    queryParams: '',\n    branchColor: nodeWhereToAdd.branchColor\n  };\n  nodeWhereToAdd.children.push(newNode);\n  nodeWhereToAdd.type = nodeWhereToAdd.type === 'array' ? 'array' : 'object';\n  return {\n    data: allData,\n    selectedNodeKey: newNodeKey,\n    node: newNode\n  };\n}\n\nexport function newTree(swaggerName) {\n  const parentId = uniqid();\n  return {\n    name: swaggerName,\n    direction: 'right',\n    nodeKey: parentId,\n    parent: null,\n    description: '',\n    example: '',\n    type: 'string',\n    referenceId: '',\n    isArray: false,\n    abstract: true,\n    queryable: false,\n    paginable: false,\n    patchable: false,\n    notImplemented: false,\n    isSubPath: false,\n    calculated: false,\n    queryParams: '',\n    verbs: ['SEARCH', 'POST', 'GET', 'PUT', 'DELETE'],\n    children: [\n      {\n        name: 'id',\n        direction: 'right',\n        description: '',\n        type: 'integer',\n        referenceId: '',\n        isArray: false,\n        abstract: true,\n        queryable: false,\n        paginable: false,\n        patchable: false,\n        notImplemented: false,\n        isSubPath: false,\n        calculated: true,\n        example: '',\n        parent: parentId,\n        nodeKey: uniqid(),\n        children: []\n      },\n      {\n        name: 'an attribute',\n        direction: 'right',\n        description: '',\n        type: 'integer',\n        referenceId: '',\n        isArray: false,\n        abstract: true,\n        queryable: false,\n        paginable: false,\n        patchable: false,\n        notImplemented: false,\n        isSubPath: false,\n        calculated: true,\n        example: '',\n        parent: parentId,\n        nodeKey: uniqid(),\n        children: []\n      }\n    ]\n  };\n}\n\nfunction updateSubNodes(parentNodeToUpdate, changeFunction) {\n  changeFunction(parentNodeToUpdate);\n\n  if (parentNodeToUpdate.children && parentNodeToUpdate.children.length > 0) {\n    parentNodeToUpdate.children.map(child =>\n      updateSubNodes(child, changeFunction)\n    );\n  }\n}\n\nfunction updateParentNodes(\n  root,\n  childNode,\n  changeFunction,\n  changeFunctionParam\n) {\n  changeFunction(childNode, changeFunctionParam);\n  if (childNode.parent) {\n    const parent = searchTreeByKey(childNode.parent, root);\n\n    if (parent) {\n      updateParentNodes(root, parent, changeFunction, changeFunctionParam);\n    }\n  }\n}\n\nexport function updateTree(root, node) {\n  const data = cloneTree(root, null, false);\n  const nodeToUpdate = searchTreeByKey(node.nodeKey, data);\n  nodeToUpdate.name = node.name;\n  nodeToUpdate.description = node.description;\n  nodeToUpdate.xDescription = node.xDescription;\n  nodeToUpdate.example = node.example;\n  nodeToUpdate.type = node.type;\n  nodeToUpdate.referenceId = node.referenceId;\n  nodeToUpdate.isArray = node.isArray;\n\n  nodeToUpdate.queryable = node.queryable;\n  nodeToUpdate.isSubPath = node.isSubPath;\n  nodeToUpdate.calculated = node.calculated;\n  nodeToUpdate.paginable = node.paginable;\n  nodeToUpdate.patchable = node.patchable;\n\n  nodeToUpdate.queryParams = node.queryParams;\n  nodeToUpdate.verbs = node.verbs;\n  nodeToUpdate.parent = node.parent;\n\n  if (nodeToUpdate.type === 'reference') {\n    nodeToUpdate.children = node.children;\n  }\n\n  if (node.branchColor !== nodeToUpdate.branchColor) {\n    updateSubNodes(nodeToUpdate, tmpNode => {\n      tmpNode.branchColor = node.branchColor; // eslint-disable-line no-param-reassign\n    });\n  }\n\n  if (nodeToUpdate.notImplemented !== node.notImplemented) {\n    if (node.notImplemented) {\n      // Mark all subnodes as not implemented\n      updateSubNodes(nodeToUpdate, tmpNode => {\n        tmpNode.notImplemented = true; // eslint-disable-line no-param-reassign\n      });\n    } else {\n      // Mark all parent nodes as implemented\n      updateParentNodes(data, nodeToUpdate, tmpNode => {\n        tmpNode.notImplemented = false; // eslint-disable-line no-param-reassign\n      });\n    }\n  }\n\n  if (nodeToUpdate.abstract !== node.abstract) {\n    if (node.abstract) {\n      // Add the parent to abstract\n      updateParentNodes(data, nodeToUpdate, tmpNode => {\n        tmpNode.abstract = true; // eslint-disable-line no-param-reassign\n      });\n    } else {\n      // remove only this from abstract\n      nodeToUpdate.abstract = node.abstract; // eslint-disable-line no-param-reassign\n    }\n  }\n\n  return data;\n}\n","import BaseAPI from './BaseAPI';\n\nexport default class GitReposAPI extends BaseAPI {\n  static addGitRepo(organizationId, { url, name, username, password }) {\n    return this.execute('post', `/organizations/${organizationId}/gitRepos`, {\n      data: {\n        url,\n        name,\n        git_username: username,\n        git_password: password\n      }\n    });\n  }\n\n  static commitModelToRepos(repoId, modelId) {\n    return this.execute(\n      'post',\n      `/gitRepos/${modelId}/models/${repoId}/commits?includeSwagger=true`\n    );\n  }\n\n  static getRepos(organizationId) {\n    return this.execute('get', `/organizations/${organizationId}/gitRepos`);\n  }\n\n  static testGit(repoId) {\n    return this.execute('post', `/gitRepos/${repoId}/commits`, {\n      data: {}\n    });\n  }\n\n  static deleteGit(repoId) {\n    return this.execute('delete', `/gitRepos/${repoId}`);\n  }\n\n  static updateGit(repoId, repo) {\n    return this.execute('put', `/gitRepos/${repoId}`, { data: { ...repo } });\n  }\n}\n"],"sourceRoot":""}