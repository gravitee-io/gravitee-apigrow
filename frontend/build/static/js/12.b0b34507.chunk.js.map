{"version":3,"sources":["Components/mindmap/Node.js","Components/mindmap/ContextMenu.js","Components/mindmap/Mindmap.js","Components/mindmap/Animated.js","Components/mindmap/Tree.js","Components/mindmap/Checkbox.js","styles/EditNodeMenu.css.js","Components/mindmap/EditNodeMenu.js","Components/base/MindmapView.js","api/ModelAPI.js","helpers/tree_helper.js","api/SwaggerAPI.js","Components/mindmap/Link.js","styles/MindmapView.css.js","Components/mindmap/LoaderIndicator.js","styles/LivePreview.css.js","Components/mindmap/LivePreview.js"],"names":["Node","plusSignHandler","event","stopPropagation","props","addNewChildNode","nodeKey","mainNodeLeftPlusSignHandler","onDragStart","name","onDragStopRight","onDragStop","onDragStopLeft","onDragStopAbove","onDragStopBelow","nodeTextLength","length","handleLeftClick","onNodeSelect","node","data","handleRightClick","e","openContextMenu","this","parent","className","width","height","y","currentNode","keyProp","x","textAnchor","dy","textDecoration","label","type","isArray","isSubPath","direction","textProps","fontStyle","fill","fontWeight","abstract","r","isDraggingMoving","cy","cx","onMouseUp","leftPlusSign","onClick","gProps","transform","onContextMenu","onMouseDown","createNode","Component","ContextMenu","id","data-action","insert","open","copy","cut","paste","delete","PureComponent","Mindmap","openNodeContextMenu","preventDefault","nodeContext","setState","showContext","contextContainerStyle","display","top","clientY","left","clientX","closeContextMenu","onWheelScroll","zoom","state","deltaY","nodeName","isPaning","isDragging","draggedNodeKey","moveNode","onPanStart","startX","changedTouches","startY","onPanMove","panX","panY","onPanEnd","keydown","onKeyPress","prevProps","isFocus","mindmap","focus","tabIndex","onFocus","ref","style","viewBox","minX","minY","maxX","nodeWidth","maxY","onMouseMove","onMouseLeave","onWheel","pointerEvents","links","map","link","Link","colorScheme","target","charCodeAt","branchColor","isDottedLine","notImplemented","key","source","x1","x2","y1","y2","pathProps","nodes","filter","n","labelProp","Width","Animated","animated","initialX","initialY","l","animate","initialState","newState","addedNodes","n1","every","n2","areNodesSame","base","old","getClosestAncestor","new","changedNodes","some","find","removedNodes","addedLinks","l1","l2","areLinksSame","changedLinks","removedLinks","concat","stateWithNode","stateWithoutNode","oldParent","newParent","getChildren","c","nextProps","clearInterval","animation","counter","animationContext","getAnimationContext","setInterval","steps","calculateNewState","duration","a","b","interval","calculateNodePosition","calculateLinkPosition","start","end","calculateNewValue","easing","defaultProps","easeQuadOut","children","margins","bottom","right","Tree","previousStates","toCopyNodeKey","toCutNodeKey","fullScreen","swaggerHtml","keyHandler","which","f2Key","downKeyHandler","upKeyHandler","leftKeyHandler","rightKeyHandler","ctrlKey","boldHandler","copyHandler","cutHandler","pasteHandler","metaKey","onUndo","enterKeyHandler","insertKeyHandler","deleteKeyHandler","onLetterDown","updateChildrenParentLinks","newParentKey","forEach","child","destinationNodeKey","isAncestorOf","allData","cloneTree","nodeWhereToAdd","searchTreeByKey","nodeToDelete","parentNode","splice","findIndex","v","newNode","push","onTreeUpdate","dataUpdated","destIndex","getTreeDepthAndCardinality","depth","cardinality","maxDepth","getTreeTextWidth","textWidth","maxLength","lengths","Math","max","propagateDirection","dir","propagateShiftLeft","horizontalShift","nodeShift","propagateShiftRight","nodePlacementAdaptation","treeMaxLength","uncle","selectedNodeKey","openReferenceHandler","ModelAPI","getModel","referenceId","then","populatedModel","freezeTag","history","pathname","modelId","model","nodeToCopy","Object","keys","_","isString","indexOf","replace","onToolsMenuChange","indexWhereToAdd","newNodeKey","uniqid","example","description","queryParams","queryable","paginable","isInPostResponse","patchable","calculated","selectedNode","indexWhereToGo","goToParent","goToFirstChild","contentHeight","ld","contentWidth","leftData","clone","rootLeft","tree","size","hierarchy","nodesLeft","descendants","linksLeft","rightData","rd","rootRight","nodesRight","linksRight","dh","nl","ll","shift","centerX","centerY","onSaveTree","saveTree","theme","createMuiTheme","overrides","MuiIconButton","root","fontSize","useStyles","makeStyles","backgroundColor","icon","borderRadius","border","customcolor","color","background","boxShadow","checkedIcon","StyledCheckbox","classes","ThemeProvider","Checkbox","clsx","CustomizedCheckbox","margin","styles","editContainer","overflowY","overflowX","padding","minWidth","zIndex","fieldContainer","formControl","formLabel","ExpansionPanelDetails","hideEditIcon","marginBottom","hideIconContainer","justifyContent","referencePaper","ToolsMenu","models","onCheckBoxChange","checked","onInversedCheckBoxChange","onVerbButtonClick","verbs","onNodeTypeChange","value","onTextFieldChange","onDropDownChange","onBranchColorChange","hex","onSubpathCheckboxChange","handleChange","getModels","organization","pageSize","nameInput","onEditClick","xDescription","verb","nodeHasOperationAncestor","hasOperationAncestor","nodeHasAncestorWithPost","hasAncestorWithPost","IconButton","Tooltip","title","placement","TextField","disabled","InputLabelProps","shrink","variant","onChange","onKeyDown","keyCode","onEnterDown","inputRef","input","multiline","autoComplete","FormControl","InputLabel","InputLabelRef","htmlFor","Select","native","OutlinedInput","labelWidth","Paper","Typography","triangle","onChangeComplete","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","heading","component","FormLabel","FormGroup","includes","withStyles","MindmapView","saved","canBeSaved","refinerRules","livePreviewSwagger","isLivePreviewOpen","isEditMenuOpen","location","organizationId","intervalId","requestLivePreview","setModelLock","isLock","catch","err","response","status","Notification","error","message","saveModel","isExitSave","isPublic","isLocked","hasOwnProperty","updateTree","onPreviewClick","onPreviewClose","pop","setFocus","trackPromise","SwaggerAPI","result","preview","handleClass","customHandle","borderClass","customResizeBorder","position","maxWidth","LivePreview","swagger","treeWidth","svgContainer","Slide","in","mountOnEnter","unmountOnExit","EditNodeMenu","context","user","organizations","newModel","handleNewModelWarningOpen","showIcon","showIconEdit","contextType","UserContext","withRouter","teamId","params","execute","fileType","tags","rules","ruleId","rule","BaseAPI","startnode","stack","ofNodeKey","ofNode","parentNodeKey","generateId","newTree","swaggerName","parentId","updateSubNodes","parentNodeToUpdate","changeFunction","updateParentNodes","childNode","changeFunctionParam","nodeToUpdate","tmpNode","jsonstring","d","red","green","blue","stroke","flexGrow","flexFlow","treeContainer","previewButton","marginLeft","sideBarContainer","editButton","toggleContainer","tabButton","optionMenu","headband","headbandFrozen","headbandReadOnly","exportMenu","editIcon","modalContainer","textAlign","buttonSaveTeam","cursor","overflow","alignItems","alignContent","customFrozenMindmapZoom","marginTop","marginRight","showIconFrozenTree","loaderContainer","swaggerSpinner","promiseInProgress","usePromiseTracker","useState","promise","setPromise","setTimeout","timeout","spinner","hideIcon","spec","docExpansion","showExtensions"],"mappings":"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","file":"static/js/12.b0b34507.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nconst propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  keyProp: PropTypes.string.isRequired,\n  labelProp: PropTypes.string.isRequired,\n  nodeKey: PropTypes.string.isRequired\n};\n\nexport default class Node extends Component {\n  plusSignHandler = event => {\n    event.stopPropagation(); // empêche la selection du noeud qui porte le signe plus\n    this.props.addNewChildNode(this.props.nodeKey);\n    return event;\n  };\n\n  mainNodeLeftPlusSignHandler = event => {\n    // spécialement pour le noeud principal, signe plus à gauche\n    event.stopPropagation(); // empêche la selection du noeud qui porte le signe plus\n    this.props.addNewChildNode(this.props.nodeKey, 'left');\n    return event;\n  };\n\n  onDragStart = event => {\n    event.stopPropagation(); // empêche le paning\n    this.props.onDragStart(this.props.name, this.props.nodeKey); // prévient le mindmap de quel noeud est draggé\n    return event;\n  };\n\n  onDragStopRight = event => {\n    event.stopPropagation(); // empêche le paning\n    this.props.onDragStop(this.props.nodeKey, 'right'); // informe le mindmap de là où le noeud est droppé\n    return event;\n  };\n\n  onDragStopLeft = event => {\n    event.stopPropagation(); // empêche le paning\n    this.props.onDragStop(this.props.nodeKey, 'left'); // informe le mindmap de là où le noeud est droppé\n    return event;\n  };\n\n  onDragStopAbove = event => {\n    event.stopPropagation(); // empêche le paning\n    this.props.onDragStop(this.props.nodeKey, 'above'); // informe le mindmap de là où le noeud est droppé\n    return event;\n  };\n\n  onDragStopBelow = event => {\n    event.stopPropagation(); // empêche le paning\n    this.props.onDragStop(this.props.nodeKey, 'below'); // informe le mindmap de là où le noeud est droppé\n    return event;\n  };\n\n  nodeTextLength = () => {\n    return this.props.name.length * 9;\n  };\n\n  handleLeftClick = () => {\n    this.props.onNodeSelect(this.props.node.data);\n  };\n\n  handleRightClick = e => {\n    this.props.onNodeSelect(this.props.node.data);\n    this.props.openContextMenu(e);\n  };\n\n  createNode() {\n    if (!this.props.parent) {\n      // we are in main node\n      return (\n        <svg\n          className=\"svg-rect\"\n          width={this.nodeTextLength() + 6}\n          height=\"30\"\n          y=\"-10\"\n        >\n          <rect\n            className={\n              this.props.currentNode.nodeKey === this.props[this.props.keyProp]\n                ? 'selected-node'\n                : 'main-node'\n            }\n            width={this.nodeTextLength() + 6}\n            height={30}\n          />\n          <text\n            x=\"50%\"\n            y=\"50%\"\n            textAnchor=\"middle\"\n            dy=\".3em\"\n            textDecoration=\"underline\"\n            className=\"node\"\n          >\n            /{this.props.name}\n          </text>\n        </svg>\n      );\n    }\n    const label =\n      (this.props.type === 'reference' && this.props.isArray ? '[' : '') +\n      (this.props.type === 'reference' ? '#' : '') +\n      (this.props.isSubPath === true ? '/' : '') +\n      (this.props.type === 'array' ? '[' : '') +\n      (this.props.type === 'operation' ? '_' : '') +\n      this.props.name +\n      (this.props.type === 'array' ? ']' : '') +\n      (this.props.type === 'reference' && this.props.isArray ? ']' : '');\n    return (\n      <g>\n        <rect\n          className={\n            this.nodeTextLength() === 0 ? 'error-node' : 'noerror-node'\n          }\n          width={25}\n          height={20}\n          y=\"-17\"\n          x={this.props.direction === 'left' ? -25 : 0}\n        />\n        <rect\n          className={\n            this.props.currentNode.nodeKey === this.props[this.props.keyProp]\n              ? 'selected-node'\n              : 'unselected-node'\n          }\n          width={this.nodeTextLength()}\n          height={20}\n          y=\"-17\"\n          x={this.props.direction === 'left' ? -this.nodeTextLength() : 0}\n        />\n        <text\n          textAnchor={this.props.direction === 'right' ? 'start' : 'end'}\n          {...this.props.textProps}\n          className=\"node\"\n          fontStyle={this.props.type === 'operation' ? 'italic' : 'normal'}\n          fill={this.props.type === 'operation' ? 'CornflowerBlue' : 'black'}\n          textDecoration={this.props.isSubPath === true ? 'underline' : ''}\n          fontWeight={this.props.abstract === true ? 'bold' : ''}\n        >\n          {label}\n        </text>\n        <circle\n          r=\"10\"\n          className={this.props.isDraggingMoving ? 'active' : 'inactive'}\n          cy=\"-13\"\n          cx={\n            this.props.direction === 'left'\n              ? -this.nodeTextLength() / 2\n              : this.nodeTextLength() / 2\n          }\n          onMouseUp={this.onDragStopAbove}\n        />\n        <circle\n          r=\"10\"\n          className={this.props.isDraggingMoving ? 'active' : 'inactive'}\n          cy=\"7\"\n          cx={\n            this.props.direction === 'left'\n              ? -this.nodeTextLength() / 2\n              : this.nodeTextLength() / 2\n          }\n          onMouseUp={this.onDragStopBelow}\n        />\n      </g>\n    );\n  }\n\n  render() {\n    let leftPlusSign;\n    if (this.props.parent === null) {\n      leftPlusSign = (\n        <g onClick={this.mainNodeLeftPlusSignHandler}>\n          <rect className=\"plussign\" width=\"11\" height=\"11\" y=\"0\" x=\"-8\" />\n          <text className=\"plussign\" y=\"11\" x=\"-7\">\n            +\n          </text>\n        </g>\n      );\n    }\n\n    return (\n      <g\n        {...this.props.gProps}\n        transform={`translate(${this.props.y}, ${this.props.x - 5})`}\n        onContextMenu={e => this.handleRightClick(e)}\n        onMouseDown={this.props.parent !== null ? this.onDragStart : null}\n      >\n        <g className=\"allnodes\" onClick={this.handleLeftClick}>\n          {this.createNode()}\n          <circle\n            r=\"10\"\n            className={\n              this.props.isDraggingMoving &&\n              (this.props.direction === 'left' || this.props.parent === null)\n                ? 'active'\n                : 'inactive'\n            }\n            cy=\"-3\"\n            cx={\n              -20 -\n              (this.props.direction === 'left' ? this.nodeTextLength() : 0)\n            }\n            onMouseUp={this.onDragStopLeft}\n          />\n          <circle\n            r=\"10\"\n            className={\n              this.props.isDraggingMoving && this.props.direction === 'right'\n                ? 'active'\n                : 'inactive'\n            }\n            cy=\"-3\"\n            cx={\n              (this.props.direction === 'right' ? this.nodeTextLength() : 0) +\n              20\n            }\n            onMouseUp={this.onDragStopRight}\n          />\n          {leftPlusSign}\n          {this.props.type !== 'reference' && (\n            <g onClick={this.plusSignHandler}>\n              <rect\n                className={\n                  this.props.isDraggingMoving ? 'plussign-dragging' : 'plussign'\n                }\n                width=\"11\"\n                height=\"11\"\n                y=\"0\"\n                x={\n                  this.props.direction === 'right'\n                    ? this.nodeTextLength()\n                    : -8 - this.nodeTextLength()\n                }\n              />\n              <text\n                className={\n                  this.props.isDraggingMoving ? 'plussign-dragging' : 'plussign'\n                }\n                y=\"11\"\n                x={\n                  this.props.direction === 'right'\n                    ? 1 + this.nodeTextLength()\n                    : -7 - this.nodeTextLength()\n                }\n              >\n                +\n              </text>\n            </g>\n          )}\n        </g>\n      </g>\n    );\n  }\n}\n\nNode.propTypes = propTypes;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { PureComponent } from 'react';\n\nexport default class ContextMenu extends PureComponent {\n  render() {\n    return (\n      <ul className=\"custom-ul\" id=\"container-menu\">\n        {(this.props.currentNode.type !== 'reference' && (\n          <li data-action=\"addChild\" onClick={this.props.insert}>\n            Add Child\n          </li>\n        )) || (\n          <li data-action=\"open\" onClick={this.props.open}>\n            Open\n          </li>\n        )}\n        <li data-action=\"copy\" onClick={this.props.copy}>\n          Copy\n        </li>\n        <li data-action=\"cut\" onClick={this.props.cut}>\n          Cut\n        </li>\n        <li data-action=\"paste\" onClick={this.props.paste}>\n          Paste\n        </li>\n        <li data-action=\"delete\" onClick={this.props.delete}>\n          Delete\n        </li>\n      </ul>\n    );\n  }\n}\n","/* eslint-disable react/sort-comp */\n/* eslint-disable camelcase */\n/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\n/* eslint-disable no-shadow */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport keydown from 'react-keydown';\nimport Link from './Link';\nimport Node from './Node';\nimport ContextMenu from './ContextMenu';\n\nconst propTypes = {\n  keyProp: PropTypes.string.isRequired,\n  labelProp: PropTypes.string.isRequired,\n  gProps: PropTypes.object.isRequired,\n  textProps: PropTypes.object.isRequired\n};\n\nclass Mindmap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      panX: 0,\n      panY: 0,\n      zoom: 0.7,\n      isPaning: false,\n      isDragging: false,\n      isDraggingMoving: false,\n      showContext: false,\n      contextContainerStyle: {}\n    };\n\n    this.nodeContext = false;\n  }\n\n  UNSAFE_componentWillReceiveProps({ keydown }) {\n    if (keydown.event) {\n      this.props.onKeyPress({ keydown });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.isFocus !== this.props.isFocus &&\n      this.props.isFocus &&\n      this.mindmap\n    ) {\n      this.mindmap.focus();\n    }\n  }\n\n  openNodeContextMenu = e => {\n    e.preventDefault();\n    this.nodeContext = true;\n    this.setState({\n      showContext: true,\n      contextContainerStyle: {\n        display: 'block',\n        top: `${e.clientY}px`,\n        left: `${e.clientX}px`\n      }\n    });\n  };\n\n  closeContextMenu = () => {\n    this.setState({\n      showContext: false\n    });\n  };\n\n  onWheelScroll = e => {\n    let zoom = this.state.zoom;\n    if (e.deltaY < 0) {\n      zoom *= 1.1;\n      if (zoom > 3) zoom = 3;\n    } else {\n      zoom *= 0.94;\n      if (zoom < 0.4) zoom = 0.4;\n    }\n    this.setState({ zoom });\n  };\n\n  onDragStart = (nodeName, nodeKey) => {\n    this.setState({\n      isPaning: false,\n      isDragging: true,\n      isDraggingMoving: false,\n      draggedNodeKey: nodeKey\n    });\n  };\n\n  onDragStop = (nodeKey, direction) => {\n    this.setState({\n      isPaning: false,\n      isDragging: false,\n      isDraggingMoving: false\n    });\n    this.props.moveNode(this.state.draggedNodeKey, nodeKey, direction);\n  };\n\n  onPanStart = e => {\n    const startX =\n      typeof e.clientX === 'undefined'\n        ? e.changedTouches[0].clientX\n        : e.clientX;\n    const startY =\n      typeof e.clientY === 'undefined'\n        ? e.changedTouches[0].clientY\n        : e.clientY;\n    this.setState({ isPaning: true, isDragging: false, startX, startY });\n  };\n\n  onPanMove = e => {\n    if (this.state.isDragging) {\n      this.setState({ isDraggingMoving: true });\n      return;\n    }\n\n    if (!this.state.isPaning) {\n      return;\n    }\n    const x =\n      typeof e.clientX === 'undefined'\n        ? e.changedTouches[0].clientX\n        : e.clientX;\n    const y =\n      typeof e.clientY === 'undefined'\n        ? e.changedTouches[0].clientY\n        : e.clientY;\n\n    this.setState({\n      panX: this.state.panX + x - this.state.startX,\n      panY: this.state.panY + y - this.state.startY,\n      startX: x,\n      startY: y\n    });\n  };\n\n  onPanEnd = () => {\n    this.setState({\n      isPaning: false,\n      isDragging: false,\n      isDraggingMoving: false\n    });\n  };\n\n  render() {\n    return (\n      <div\n        tabIndex=\"0\"\n        id=\"mindmap\"\n        onClick={this.closeContextMenu}\n        onFocus={() => this.props.onFocus()}\n        ref={ref => {\n          this.mindmap = ref;\n        }}\n      >\n        <div\n          className=\"custom-menu\"\n          id=\"context-container\"\n          style={this.state.contextContainerStyle}\n        >\n          {this.state.showContext && <ContextMenu {...this.props} />}\n        </div>\n        <svg\n          viewBox={`${this.props.minX} ${this.props.minY} ${this.props.maxX -\n            this.props.minX +\n            this.props.nodeWidth +\n            1} ${this.props.maxY - this.props.minY + 1}`}\n          className=\"custom\"\n          onMouseDown={this.onPanStart}\n          onMouseMove={this.onPanMove}\n          onMouseLeave={this.onPanEnd}\n          onMouseUp={this.onPanEnd}\n          onWheel={this.onWheelScroll}\n          style={{ pointerEvents: 'auto', height: '100%' }}\n        >\n          <g\n            transform={` translate(${this.state.panX} ${this.state.panY}) scale(${this.state.zoom}) `}\n          >\n            {this.props.links.map(link => (\n              <Link\n                colorScheme={link.target.data.name.charCodeAt(0)}\n                branchColor={link.target.data.branchColor}\n                isDottedLine={link.target.data.notImplemented}\n                key={link.target.data[this.props.keyProp]}\n                keyProp={this.props.keyProp}\n                source={link.source}\n                target={link.target}\n                x1={link.source.x}\n                x2={link.target.x}\n                y1={\n                  link.source.y +\n                  (link.source.data.direction === 'right' &&\n                  link.target.data.direction === 'right'\n                    ? link.source.data.name.length * 9\n                    : 0) -\n                  (link.source.data.direction === 'left' &&\n                  link.target.data.direction === 'left'\n                    ? link.source.data.name.length * 9\n                    : 0)\n                }\n                y2={\n                  link.target\n                    .y /* + ((link.target.data.direction === \"left\"\t)?link.target.data.name.length*9:0)  */\n                }\n                pathProps={{\n                  ...this.props.pathProps,\n                  ...link.target.data.pathProps\n                }}\n              />\n            ))}\n            {this.props.nodes\n              .filter(n => n.data.nodeKey)\n              .map(node => (\n                <g key={node.data.nodeKey}>\n                  <Link\n                    branchColor={node.data.branchColor}\n                    isDottedLine={node.data.notImplemented}\n                    x1={node.x}\n                    x2={node.x}\n                    y1={\n                      node.y +\n                      (node.data.direction === 'right'\n                        ? node.data.name.length * 9\n                        : 0)\n                    }\n                    y2={\n                      node.y -\n                      (node.data.direction === 'left'\n                        ? node.data.name.length * 9\n                        : 0)\n                    }\n                    pathProps={{\n                      ...this.props.pathProps,\n                      ...node.data.pathProps\n                    }}\n                  />\n                  <Node\n                    node={node}\n                    currentNode={this.props.currentNode}\n                    onNodeSelect={this.props.onNodeSelect}\n                    addNewChildNode={this.props.addNewChildNode}\n                    onDragStart={this.onDragStart}\n                    onDragStop={this.onDragStop}\n                    openContextMenu={this.openNodeContextMenu}\n                    isDraggingMoving={this.state.isDraggingMoving}\n                    key={node.data[this.props.keyProp]}\n                    keyProp={this.props.keyProp}\n                    labelProp={this.props.labelProp}\n                    x={node.x}\n                    y={node.y}\n                    Width={this.props.nodeWidth}\n                    gProps={{\n                      ...this.props.gProps,\n                      ...node.data.gProps\n                    }}\n                    textProps={{\n                      ...this.props.textProps,\n                      ...node.data.textProps\n                    }}\n                    {...node.data}\n                  />\n                </g>\n              ))}\n          </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nMindmap.propTypes = propTypes;\nexport default keydown(Mindmap);\n","/* eslint-disable camelcase */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable react/forbid-prop-types */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Mindmap from './Mindmap';\n\nconst propTypes = {\n  animated: PropTypes.bool.isRequired,\n  getChildren: PropTypes.func.isRequired,\n  keyProp: PropTypes.string.isRequired,\n  links: PropTypes.array.isRequired,\n  nodes: PropTypes.array.isRequired,\n  duration: PropTypes.number.isRequired,\n  easing: PropTypes.func.isRequired,\n  steps: PropTypes.number.isRequired\n};\n\nexport default class Animated extends Component {\n  constructor(props) {\n    super(props);\n    if (props.animated) {\n      // If we are animating, we set the initial positions of the nodes and links to be the position of the root node\n      // and animate from there\n      const initialX = props.nodes[0].x;\n      const initialY = props.nodes[0].y;\n      this.state = {\n        nodes: props.nodes.map(n =>\n          ({ ...n, x: initialX, y: initialY})\n        ),\n        links: props.links.map(l => ({\n          source: {\n            ...l.source,\n            x: initialX,\n            y: initialY\n          },\n          target: {\n            ...l.target,\n            x: initialX,\n            y: initialY\n          }\n        }))\n      };\n    } else {\n      this.state = {\n        nodes: props.nodes,\n        links: props.links\n      };\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.animated) {\n      this.animate(this.props);\n    }\n  }\n\n  getAnimationContext(initialState, newState) {\n    // Nodes/links that are in both states need to be moved from the old position to the new one\n    // Nodes/links only in the initial state are being removed, and should be moved to the position\n    // of the closest ancestor that still exists, or the new root\n    // Nodes/links only in the new state are being added, and should be moved from the position of\n    // the closest ancestor that previously existed, or the old root\n\n    // The base determines which node/link the data (like classes and labels) comes from for rendering\n\n    // We only run this once at the start of the animation, so optimization is less important\n    const addedNodes = newState.nodes\n      .filter(n1 => initialState.nodes.every(n2 => !this.areNodesSame(n1, n2)))\n      .map(n1 => ({\n        base: n1,\n        old: this.getClosestAncestor(n1, newState, initialState),\n        new: n1\n      }));\n    const changedNodes = newState.nodes\n      .filter(n1 => initialState.nodes.some(n2 => this.areNodesSame(n1, n2)))\n      .map(n1 => ({\n        base: n1,\n        old: initialState.nodes.find(n2 => this.areNodesSame(n1, n2)),\n        new: n1\n      }));\n    const removedNodes = initialState.nodes\n      .filter(n1 => newState.nodes.every(n2 => !this.areNodesSame(n1, n2)))\n      .map(n1 => ({\n        base: n1,\n        old: n1,\n        new: this.getClosestAncestor(n1, initialState, newState)\n      }));\n\n    const addedLinks = newState.links\n      .filter(l1 => initialState.links.every(l2 => !this.areLinksSame(l1, l2)))\n      .map(l1 => ({\n        base: l1,\n        old: this.getClosestAncestor(l1.target, newState, initialState),\n        new: l1\n      }));\n    const changedLinks = newState.links\n      .filter(l1 => initialState.links.some(l2 => this.areLinksSame(l1, l2)))\n      .map(l1 => ({\n        base: l1,\n        old: initialState.links.find(l2 => this.areLinksSame(l1, l2)),\n        new: l1\n      }));\n    const removedLinks = initialState.links\n      .filter(l1 => newState.links.every(l2 => !this.areLinksSame(l1, l2)))\n      .map(l1 => ({\n        base: l1,\n        old: l1,\n        new: this.getClosestAncestor(l1.target, initialState, newState)\n      }));\n\n    return {\n      nodes: changedNodes.concat(addedNodes).concat(removedNodes),\n      links: changedLinks.concat(addedLinks).concat(removedLinks)\n    };\n  }\n\n  getClosestAncestor(node, stateWithNode, stateWithoutNode) {\n    let oldParent = node;\n\n    while (oldParent) {\n      // eslint-disable-next-line\n      let newParent = stateWithoutNode.nodes.find(n =>\n        this.areNodesSame(oldParent, n)\n      );\n\n      if (newParent) {\n        return newParent;\n      }\n      // eslint-disable-next-line\n      oldParent = stateWithNode.nodes.find(n =>\n        (this.props.getChildren(n) || []).some(c =>\n          this.areNodesSame(oldParent, c)\n        )\n      );\n    }\n\n    return stateWithoutNode.nodes[0];\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.nodes === this.props.nodes &&\n      nextProps.links === this.props.links\n    ) {\n      return;\n    }\n\n    if (!nextProps.animated) {\n      this.setState({\n        nodes: nextProps.nodes,\n        links: nextProps.links\n      });\n      return;\n    }\n\n    this.animate(nextProps);\n  }\n\n  animate(props) {\n    // Stop previous animation if one is already in progress.  We will start the next animation\n    // from the position we are currently in\n    clearInterval(this.animation);\n\n    let counter = 0;\n\n    // Do as much one-time calculation outside of the animation step, which needs to be fast\n    const animationContext = this.getAnimationContext(this.state, props);\n\n    this.animation = setInterval(() => {\n      counter += 1;\n\n      if (counter === props.steps) {\n        clearInterval(this.animation);\n        this.animation = null;\n        this.setState({\n          nodes: props.nodes,\n          links: props.links\n        });\n        return;\n      }\n\n      this.setState(\n        this.calculateNewState(animationContext, counter / props.steps)\n      );\n    }, props.duration / props.steps);\n  }\n\n  areNodesSame(a, b) {\n    return a.data[this.props.keyProp] === b.data[this.props.keyProp];\n  }\n\n  areLinksSame(a, b) {\n    return (\n      a.source.data[this.props.keyProp] === b.source.data[this.props.keyProp] &&\n      a.target.data[this.props.keyProp] === b.target.data[this.props.keyProp]\n    );\n  }\n\n  calculateNewState(animationContext, interval) {\n    return {\n      nodes: animationContext.nodes.map(n =>\n        this.calculateNodePosition(n.base, n.old, n.new, interval)\n      ),\n      links: animationContext.links.map(l =>\n        this.calculateLinkPosition(l.base, l.old, l.new, interval)\n      )\n    };\n  }\n\n  calculateNodePosition(node, start, end, interval) {\n    return {\n      ...node,\n      x: this.calculateNewValue(start.x, end.x, interval),\n      y: this.calculateNewValue(start.y, end.y, interval)\n    };\n  }\n\n  calculateLinkPosition(link, start, end, interval) {\n    return {\n      source: {\n        ...link.source,\n        x: this.calculateNewValue(\n          start.source ? start.source.x : start.x,\n          end.source ? end.source.x : end.x,\n          interval\n        ),\n        y: this.calculateNewValue(\n          start.source ? start.source.y : start.y,\n          end.source ? end.source.y : end.y,\n          interval\n        )\n      },\n      target: {\n        ...link.target,\n        x: this.calculateNewValue(\n          start.target ? start.target.x : start.x,\n          end.target ? end.target.x : end.x,\n          interval\n        ),\n        y: this.calculateNewValue(\n          start.target ? start.target.y : start.y,\n          end.target ? end.target.y : end.y,\n          interval\n        )\n      }\n    };\n  }\n\n  calculateNewValue(start, end, interval) {\n    return start + (end - start) * this.props.easing(interval);\n  }\n\n  render() {\n    return <Mindmap {...this.props} {...this.state} />;\n  }\n}\n\nAnimated.propTypes = propTypes;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-shadow */\n/* eslint-disable prefer-const */\n/* eslint-disable class-methods-use-this */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/default-props-match-prop-types */\n/* eslint-disable react/require-default-props */\nimport clone from 'clone';\nimport { easeQuadOut } from 'd3-ease';\nimport { hierarchy, tree } from 'd3-hierarchy';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport uniqid from 'uniqid';\nimport _ from 'lodash';\nimport Animated from './Animated';\nimport ModelAPI from '../../api/ModelAPI';\nimport {\n  searchTreeByKey,\n  isAncestorOf,\n  cloneTree,\n  addNewChildNode,\n} from '../../helpers/tree_helper';\n\nconst propTypes = {\n  animated: PropTypes.bool.isRequired,\n  children: PropTypes.node,\n  duration: PropTypes.number.isRequired,\n  easing: PropTypes.func.isRequired,\n  steps: PropTypes.number.isRequired,\n  keyProp: PropTypes.string.isRequired,\n  labelProp: PropTypes.string.isRequired,\n  getChildren: PropTypes.func.isRequired,\n  margins: PropTypes.shape({\n    bottom: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    right: PropTypes.number.isRequired,\n    top: PropTypes.number.isRequired,\n  }).isRequired,\n  gProps: PropTypes.object.isRequired,\n  pathProps: PropTypes.object.isRequired,\n  textProps: PropTypes.object.isRequired,\n};\n\nconst defaultProps = {\n  animated: false,\n  duration: 50,\n  easing: easeQuadOut,\n  getChildren: n => n.children,\n  steps: 5,\n  keyProp: 'nodeKey',\n  labelProp: 'name',\n  margins: {\n    bottom: 10,\n    left: 100,\n    right: 150,\n    top: 10,\n  },\n  nodeWidth: 100,\n  gProps: {\n    className: 'node',\n  },\n  pathProps: {\n    className: 'link',\n  },\n  textProps: {},\n};\n\nconst oneCharWidth = 10;\n\nexport default class Tree extends Component {\n  previousStates = [];\n\n  state = {\n    toCopyNodeKey: null,\n    toCutNodeKey: null,\n    event: '',\n    fullScreen: false,\n    swaggerHtml: '',\n  };\n\n  keyHandler = ({ keydown }) => {\n    if (keydown.event) {\n      if (keydown.event.which === 113) {\n        this.f2Key();\n      }\n      if (keydown.event.which === 40) {\n        this.downKeyHandler();\n      }\n      if (keydown.event.which === 38) {\n        this.upKeyHandler();\n      }\n      if (keydown.event.which === 37) {\n        this.leftKeyHandler();\n      }\n      if (keydown.event.which === 39) {\n        this.rightKeyHandler();\n      }\n      if (keydown.event.which === 66 && keydown.event.ctrlKey) {\n        this.boldHandler();\n      }\n      if (keydown.event.which === 67 && keydown.event.ctrlKey) {\n        this.copyHandler();\n      }\n      if (keydown.event.which === 88 && keydown.event.ctrlKey) {\n        this.cutHandler();\n      }\n      if (keydown.event.which === 86 && keydown.event.ctrlKey) {\n        this.pasteHandler();\n      }\n      if (\n        (keydown.event.which === 90 && keydown.event.ctrlKey) ||\n        (keydown.event.which === 90 && keydown.event.metaKey)\n      ) {\n        this.props.onUndo();\n      }\n      if (keydown.event.which === 13) {\n        this.enterKeyHandler();\n      }\n      if (keydown.event.which === 45) {\n        this.insertKeyHandler();\n      }\n      if (keydown.event.which === 46 || keydown.event.which === 8) {\n        this.deleteKeyHandler();\n      }\n      if (\n        keydown.event.which >= 65 &&\n        keydown.event.which <= 90 &&\n        !keydown.event.ctrlKey &&\n        !keydown.event.metaKey\n      ) {\n        this.props.onLetterDown();\n      }\n    }\n  };\n\n  updateChildrenParentLinks = (children, newParentKey) => {\n    if (children && children.length > 0) {\n      children.forEach(child => {\n        child.parent = newParentKey;\n      });\n    }\n  };\n\n  moveNode = (draggedNodeKey, destinationNodeKey, direction) => {\n    if (\n      destinationNodeKey &&\n      draggedNodeKey &&\n      draggedNodeKey !== destinationNodeKey &&\n      !isAncestorOf(draggedNodeKey, destinationNodeKey, this.props.data)\n    ) {\n      const allData = cloneTree(this.props.data, null, false);\n      const nodeWhereToAdd = searchTreeByKey(destinationNodeKey, allData);\n      const nodeToDelete = searchTreeByKey(draggedNodeKey, allData);\n      if (nodeToDelete.parent) {\n        let parentNode = searchTreeByKey(nodeToDelete.parent, allData);\n        parentNode.children.splice(\n          parentNode.children.findIndex(v => v.nodeKey === draggedNodeKey),\n          1\n        );\n        if (direction === 'left' || direction === 'right') {\n          let newNode = cloneTree(nodeToDelete, nodeWhereToAdd.nodeKey);\n          newNode.direction = direction;\n          nodeWhereToAdd.children.push(newNode);\n          this.updateChildrenParentLinks(newNode.children, newNode.nodeKey);\n          this.props.onTreeUpdate({\n            dataUpdated: allData,\n            currentNode: newNode,\n          });\n        }\n        if (direction === 'above' || direction === 'below') {\n          if (nodeWhereToAdd.parent) {\n            let parentNode = searchTreeByKey(nodeWhereToAdd.parent, allData);\n            let destIndex = parentNode.children.findIndex(\n              v => v.nodeKey === destinationNodeKey\n            );\n            let newNode = cloneTree(nodeToDelete, nodeWhereToAdd.parent);\n            parentNode.children.splice(\n              direction === 'above' ? destIndex : destIndex + 1,\n              0,\n              newNode\n            );\n            newNode.direction = nodeWhereToAdd.direction;\n            this.updateChildrenParentLinks(newNode.children, newNode.nodeKey);\n            this.props.onTreeUpdate({\n              dataUpdated: allData,\n              currentNode: newNode,\n            });\n          }\n        }\n      }\n    }\n  };\n\n  getTreeDepthAndCardinality = (data, depth) => {\n    this.cardinality += 1;\n    if (this.maxDepth < depth) this.maxDepth = depth;\n    if (data.children.length !== 0)\n      data.children.forEach(n => this.getTreeDepthAndCardinality(n, depth + 1));\n  };\n\n  getTreeTextWidth = (data, textWidth, maxLength) => {\n    if (data.children.length !== 0) {\n      const lengths = data.children.map(n =>\n        this.getTreeTextWidth(n, textWidth + n.name.length)\n      );\n      return Math.max(...lengths);\n    }\n\n    if (data.name && maxLength > textWidth + data.name.length) {\n      return textWidth + data.name.length;\n    }\n\n    if (data.children.length === 0) {\n      return 0;\n    }\n\n    return maxLength;\n  };\n\n  propagateDirection = (node, dir) => {\n    node.direction = dir;\n    node.children.forEach(c => {\n      this.propagateDirection(c, dir);\n    });\n  };\n\n  propagateShiftLeft = (node, horizontalShift) => {\n    let nodeShift = node.data.name.length * oneCharWidth;\n    if (node.depth === 0) nodeShift = 0;\n    node.y += horizontalShift;\n    if (node.children)\n      node.children.forEach(c => {\n        this.propagateShiftLeft(c, horizontalShift + nodeShift);\n      });\n  };\n\n  propagateShiftRight = (node, horizontalShift) => {\n    const nodeShift = node.data.name.length * oneCharWidth;\n    if (node.children)\n      node.children.forEach(c => {\n        c.y += horizontalShift + nodeShift;\n        this.propagateShiftRight(c, horizontalShift + nodeShift);\n      });\n  };\n\n  nodePlacementAdaptation = (node, treeMaxLength) => {\n    if (node.parent && node.parent.parent) {\n      let maxLength = 0;\n      node.parent.parent.children.forEach(uncle => {\n        if (uncle.data.name.length > maxLength) {\n          maxLength = uncle.data.name.length;\n        }\n      });\n      treeMaxLength += maxLength;\n      node.y +=\n        (treeMaxLength -\n          node.parent.data.name.length * (1 + 0.11 * (node.depth - 1))) *\n        9;\n    }\n\n    if (node.children) {\n      node.children = node.children.map(child => {\n        return this.nodePlacementAdaptation(child, treeMaxLength);\n      });\n    }\n\n    return node;\n  };\n\n  addNewChildNode = (nodeKey, direction) => {\n    const { data, selectedNodeKey, node } = addNewChildNode(\n      this.props.data,\n      nodeKey,\n      direction\n    );\n    if (data && selectedNodeKey && node) {\n      this.props.onTreeUpdate({\n        dataUpdated: data,\n        currentNode: node,\n      });\n    }\n  };\n\n  openReferenceHandler = () => {\n    ModelAPI.getModel(this.props.currentNode.referenceId).then(\n      populatedModel => {\n        if (populatedModel.freezeTag === '0') {\n          this.props.history.push({\n            pathname: '/tree',\n            state: {\n              modelId: this.props.currentNode.referenceId,\n            },\n          });\n        } else {\n          this.props.history.push({\n            pathname: '/tree-frozen',\n            state: {\n              model: populatedModel,\n            },\n          });\n        }\n      }\n    );\n  };\n\n  insertKeyHandler = () => {\n    if (this.props.currentNode.type !== 'reference') {\n      this.addNewChildNode(this.props.currentNode.nodeKey, null);\n    }\n  };\n\n  deleteKeyHandler = () => {\n    if (this.props.currentNode.nodeKey) {\n      const allData = cloneTree(this.props.data, null, false);\n      let nodeToDelete = searchTreeByKey(\n        this.props.currentNode.nodeKey,\n        allData\n      );\n      if (nodeToDelete.parent) {\n        let parentNode = searchTreeByKey(nodeToDelete.parent, allData);\n        parentNode.children.splice(\n          parentNode.children.findIndex(\n            v => v.nodeKey === this.props.currentNode.nodeKey\n          ),\n          1\n        );\n        this.props.onTreeUpdate({\n          dataUpdated: allData,\n          currentNode: parentNode,\n        });\n      }\n    }\n  };\n\n  copyHandler = () => {\n    if (this.props.currentNode.nodeKey) {\n      this.setState({\n        toCopyNodeKey: this.props.currentNode.nodeKey,\n        toCutNodeKey: null,\n      });\n    }\n  };\n\n  cutHandler = () => {\n    if (this.props.currentNode.nodeKey) {\n      this.setState({\n        toCopyNodeKey: null,\n        toCutNodeKey: this.props.currentNode.nodeKey,\n      });\n    }\n  };\n\n  pasteHandler = () => {\n    let allData = cloneTree(this.props.data, null, false);\n    if (this.props.currentNode.nodeKey) {\n      let nodeWhereToAdd = searchTreeByKey(\n        this.props.currentNode.nodeKey,\n        allData\n      );\n\n      // Cut\n      if (\n        this.state.toCutNodeKey &&\n        !isAncestorOf(\n          this.state.toCutNodeKey,\n          this.props.currentNode.nodeKey,\n          this.props.data\n        )\n      ) {\n        let nodeToDelete = searchTreeByKey(this.state.toCutNodeKey, allData);\n        let newNode = cloneTree(nodeToDelete, nodeWhereToAdd.nodeKey);\n        let parentNode = searchTreeByKey(nodeToDelete.parent, allData);\n        parentNode.children.splice(\n          parentNode.children.findIndex(\n            v => v.nodeKey === this.state.toCutNodeKey\n          ),\n          1\n        );\n        nodeWhereToAdd.children.push(newNode);\n        this.props.onTreeUpdate({\n          dataUpdated: allData,\n          currentNode: newNode,\n        });\n      }\n\n      // Copy\n      if (this.state.toCopyNodeKey) {\n        let nodeToCopy = searchTreeByKey(this.state.toCopyNodeKey, allData);\n        if (nodeToCopy.parent) {\n          let newNode = cloneTree(nodeToCopy, nodeWhereToAdd.nodeKey);\n          nodeWhereToAdd.children.push(newNode);\n          this.props.onTreeUpdate({\n            dataUpdated: allData,\n            currentNode: newNode,\n          });\n        }\n      }\n    }\n  };\n\n  sanitizeNode(node) {\n    Object.keys(node).forEach(key => {\n      if (node[key] && _.isString(node[key]) && node[key].indexOf('\"') > -1) {\n        node[key] = node[key].replace('\"', '');\n      }\n    });\n  }\n\n  boldHandler() {\n    this.props.onToolsMenuChange({\n      abstract: !this.props.currentNode.abstract,\n    });\n  }\n\n  enterKeyHandler() {\n    if (this.props.currentNode.nodeKey) {\n      const allData = cloneTree(this.props.data, null, false);\n      let nodeWhereToAdd = searchTreeByKey(\n        this.props.currentNode.nodeKey,\n        allData\n      );\n      if (nodeWhereToAdd.parent) {\n        const parentNode = searchTreeByKey(nodeWhereToAdd.parent, allData);\n        const indexWhereToAdd = parentNode.children.indexOf(nodeWhereToAdd);\n        const newNodeKey = uniqid();\n        const newNode = {\n          name: '',\n          parent: parentNode.nodeKey,\n          children: [],\n          nodeKey: newNodeKey,\n          type: 'string',\n          referenceId: '',\n          isArray: false,\n          example: '',\n          abstract: false,\n          description: '',\n          queryParams: '',\n          direction: nodeWhereToAdd.direction,\n          queryable: false,\n          paginable: false,\n          isInPostResponse: false,\n          patchable: false,\n          notImplemented: false,\n          isSubPath: false,\n          calculated: false,\n          branchColor: parentNode.branchColor,\n        };\n        parentNode.children.splice(indexWhereToAdd + 1, 0, newNode);\n        this.props.onTreeUpdate({\n          dataUpdated: allData,\n          currentNode: newNode,\n        });\n      }\n    }\n  }\n\n  upKeyHandler() {\n    if (this.props.currentNode.nodeKey) {\n      const allData = this.props.data;\n      let selectedNode = searchTreeByKey(\n        this.props.currentNode.nodeKey,\n        allData\n      );\n      if (selectedNode.parent) {\n        let parentNode = searchTreeByKey(selectedNode.parent, allData);\n        for (\n          let indexWhereToGo = parentNode.children.indexOf(selectedNode) - 1;\n          indexWhereToGo >= 0;\n          indexWhereToGo -= 1\n        ) {\n          if (\n            parentNode.children[indexWhereToGo].direction ===\n            selectedNode.direction\n          ) {\n            this.props.onNodeSelect(\n              parentNode.children[indexWhereToGo],\n              allData\n            );\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  downKeyHandler() {\n    if (this.props.currentNode.nodeKey) {\n      const allData = this.props.data;\n      let selectedNode = searchTreeByKey(\n        this.props.currentNode.nodeKey,\n        allData\n      );\n      if (selectedNode.parent) {\n        let parentNode = searchTreeByKey(selectedNode.parent, allData);\n        let indexWhereToGo;\n        for (\n          indexWhereToGo = parentNode.children.indexOf(selectedNode) + 1;\n          indexWhereToGo < parentNode.children.length;\n          indexWhereToGo += 1\n        ) {\n          if (\n            parentNode.children[indexWhereToGo].direction ===\n            selectedNode.direction\n          ) {\n            this.props.onNodeSelect(\n              parentNode.children[indexWhereToGo],\n              allData\n            );\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  leftKeyHandler() {\n    if (this.props.currentNode.nodeKey) {\n      const allData = this.props.data;\n      let selectedNode = searchTreeByKey(\n        this.props.currentNode.nodeKey,\n        allData\n      );\n      if (selectedNode.nodeKey === this.props.data.nodeKey) {\n        let indexWhereToGo = selectedNode.children.findIndex(\n          n => n.direction === 'left'\n        );\n        if (indexWhereToGo !== -1) {\n          this.props.onNodeSelect(\n            selectedNode.children[indexWhereToGo],\n            allData\n          );\n        }\n      } else if (selectedNode.direction === 'right') {\n        this.goToParent(selectedNode, allData);\n      } else {\n        this.goToFirstChild(selectedNode, allData);\n      }\n    }\n  }\n\n  rightKeyHandler() {\n    if (this.props.currentNode.nodeKey) {\n      const allData = this.props.data;\n      const selectedNode = searchTreeByKey(\n        this.props.currentNode.nodeKey,\n        allData\n      );\n      if (selectedNode.direction === 'left') {\n        this.goToParent(selectedNode, allData);\n      } else {\n        this.goToFirstChild(selectedNode, allData);\n      }\n    }\n  }\n\n  goToParent(selectedNode, allData) {\n    if (selectedNode.parent) {\n      const parentNode = searchTreeByKey(selectedNode.parent, allData);\n      this.props.onNodeSelect(parentNode, allData);\n    }\n  }\n\n  goToFirstChild(selectedNode, allData) {\n    if (selectedNode.children && selectedNode.children.length > 0) {\n      const indexWhereToGo = selectedNode.children.findIndex(\n        n => n.direction === selectedNode.direction\n      );\n      if (indexWhereToGo !== -1) {\n        this.props.onNodeSelect(selectedNode.children[indexWhereToGo], allData);\n      }\n    }\n  }\n\n  render() {\n    const { isFocus, onNodeSelect, children, data, margins } = this.props;\n\n    // Calcule une taille de svg adaptée à la richesse de l'arbre\n    // Pour la largeur, trouver la branche où il y a le plus de texte cumulé, à gauche puis à droite\n    const maxLeftLength = this.getTreeTextWidth(\n      {\n        children: data.children.filter(ld => ld.direction === 'left'),\n      },\n      0,\n      120\n    );\n    const maxRightLength = this.getTreeTextWidth(\n      {\n        children: data.children.filter(ld => ld.direction === 'right'),\n      },\n      0,\n      120\n    );\n    const contentHeight =\n      600 +\n      (maxLeftLength + maxRightLength) * oneCharWidth -\n      margins.left -\n      margins.right;\n\n    // Pour la hauteur, on fait le nombre de champs divisé par le nombre de niveaux. Poura être amélioré\n    this.maxDepth = 0;\n    this.cardinality = 0;\n    this.getTreeDepthAndCardinality(data, 0);\n    const contentWidth =\n      200 +\n      (60 * (this.cardinality + 1)) / (this.maxDepth + 1) -\n      margins.top -\n      margins.bottom;\n\n    // Crée deux sous arbres gauche et droite\n    data.children.forEach(c => {\n      this.propagateDirection(c, c.direction);\n    });\n\n    const leftData = clone(data);\n    leftData.children = leftData.children.filter(ld => ld.direction === 'left');\n    this.propagateDirection(leftData, 'left');\n\n    let rootLeft = tree().size([contentWidth, contentHeight / 2])(\n      hierarchy(leftData)\n    );\n\n    rootLeft = this.nodePlacementAdaptation(rootLeft, 0);\n    const nodesLeft = rootLeft.descendants();\n    const linksLeft = rootLeft.links();\n    this.propagateShiftLeft(nodesLeft[0], 0);\n\n    const rightData = clone(data);\n    rightData.children = rightData.children.filter(\n      rd => rd.direction === 'right'\n    );\n    this.propagateDirection(rightData, 'right', 0);\n\n    let rootRight = tree().size([contentWidth, contentHeight / 2])(\n      hierarchy(rightData)\n    );\n\n    rootRight = this.nodePlacementAdaptation(rootRight, 0);\n    const nodesRight = rootRight.descendants();\n    const linksRight = rootRight.links();\n    this.propagateShiftRight(nodesRight[0], 0);\n\n    // Retourne le sous-arbre gauche et le positionne en face du droit\n    const dh = nodesRight[0].x - nodesLeft[0].x;\n    nodesLeft.forEach(nl => {\n      nl.x += dh;\n      nl.y = -nl.y;\n    });\n\n    // Rattache au noeud racine droite les enfants du noeud racine de gauche\n    linksLeft.forEach(ll => {\n      if (ll.source.data.nodeKey === nodesLeft[0].data.nodeKey) {\n        // eslint-disable-next-line no-param-reassign\n        ll.source = nodesRight[0];\n      }\n      if (ll.target.data.nodeKey === nodesLeft[0].data.nodeKey) {\n        ll.target = nodesRight[0];\n      }\n    });\n    nodesLeft.splice(0, 1);\n\n    // Joint les deux sous-arbres\n    const nodes = nodesLeft.concat(nodesRight);\n    const links = linksLeft.concat(linksRight);\n\n    // Mesure l'arbre résultat puis recentre\n    let minX = nodesRight[0].x;\n    let maxX = nodesRight[0].x;\n    let minY = nodesRight[0].y;\n    let maxY = nodesRight[0].y;\n    nodes.forEach(n => {\n      if (minX > n.x) minX = n.x;\n      if (maxX < n.x) maxX = n.x;\n      if (minY > n.y) minY = n.y;\n      if (maxY < n.y) maxY = n.y;\n    });\n    const shift = (minX + maxX) / 2; // Hauteur mediane\n    nodes.forEach(n => {\n      n.x -= shift;\n    });\n    maxX -= shift;\n    minX -= shift;\n\n    minY -= 100; // Centrage pour les petits mindmaps, comme celui du départ from scratch\n    return (\n      <Animated\n        {...this.props}\n        {...this.state}\n        minY={minX}\n        maxY={maxX}\n        minX={minY}\n        maxX={maxY}\n        links={links}\n        nodes={nodes}\n        centerX={nodes[0].y}\n        centerY={nodes[0].x}\n        cardinality={this.cardinality}\n        open={() => this.openReferenceHandler()}\n        insert={() => this.insertKeyHandler()}\n        copy={() => this.copyHandler()}\n        cut={() => this.cutHandler()}\n        paste={() => this.pasteHandler()}\n        delete={() => this.deleteKeyHandler()}\n        moveNode={this.moveNode}\n        addNewChildNode={this.addNewChildNode}\n        onSaveTree={this.saveTree}\n        onKeyPress={this.keyHandler}\n        onNodeSelect={onNodeSelect}\n        isFocus={isFocus}\n      >\n        {children}\n      </Animated>\n    );\n  }\n}\n\nTree.propTypes = propTypes;\nTree.defaultProps = defaultProps;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiIconButton: {\n      root: {\n        fontSize: '1rem'\n      },\n      label: {\n        display: 'block'\n      }\n    }\n  }\n});\n\nconst useStyles = makeStyles({\n  root: {\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  },\n  icon: props => ({\n    fontSize: '15px',\n    fontWeight: 'bold',\n    borderRadius: 30,\n    display: 'table-cell',\n    border: `3px solid ${props.customcolor}`,\n    color: props.customcolor,\n    width: 90,\n    height: 30,\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5'\n    },\n    'input:disabled ~ &': {\n      background: 'rgba(206,217,224,.5)'\n    },\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)'\n  }),\n  checkedIcon: props => ({\n    borderRadius: 30,\n    display: 'table-cell',\n    border: `3px solid ${props.customcolor}`,\n    color: 'white',\n    backgroundColor: `${props.customcolor}`,\n    width: 90,\n    height: 30,\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5'\n    },\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)'\n  })\n});\n\nfunction StyledCheckbox(props) {\n  const classes = useStyles(props);\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <Checkbox\n          className={classes.root}\n          checkedIcon={\n            <span className={clsx(classes.icon, classes.checkedIcon)}>\n              {props.label}\n            </span>\n          }\n          icon={<span className={classes.icon}>{props.label}</span>}\n          {...props}\n        />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default function CustomizedCheckbox(props) {\n  return (\n    <div style={{ margin: 'auto' }}>\n      <StyledCheckbox {...props} />\n    </div>\n  );\n}\n","const styles = () => {\n  return {\n    margin: {\n      margin: 'auto'\n    },\n    editContainer: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      padding: '10px !important',\n      backgroundColor: 'white',\n      width: '20%',\n      minWidth: '20%',\n      zIndex: 10\n    },\n    fieldContainer: {\n      padding: '10px',\n      display: 'grid'\n    },\n    formControl: {\n      margin: '10px'\n    },\n    formLabel: {\n      margin: 'auto',\n      fontSize: '1.4em',\n      padding: '10px'\n    },\n    ExpansionPanelDetails: {\n      display: 'grid'\n    },\n    hideEditIcon: {\n      color: '#324157',\n      width: 'fit-content',\n      marginBottom: '10px'\n    },\n    hideIconContainer: {\n      width: '100%',\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    referencePaper: {\n      padding: '20px',\n      display: 'inline-grid',\n      margin: '10px'\n    }\n  };\n};\n\nexport default styles;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/label-has-for */\nimport React, { Component } from 'react';\nimport {\n  Tooltip,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  OutlinedInput,\n  Checkbox,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  Typography,\n  ExpansionPanelDetails,\n  FormLabel,\n  FormGroup,\n  Paper,\n  IconButton,\n} from '@material-ui/core';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TwitterPicker } from 'react-color';\nimport CustomizedCheckbox from './Checkbox';\nimport ModelAPI from '../../api/ModelAPI';\nimport styles from '../../styles/EditNodeMenu.css';\nimport {\n  hasOperationAncestor,\n  hasAncestorWithPost,\n} from '../../helpers/tree_helper';\n\nclass ToolsMenu extends Component {\n  state = {\n    models: [],\n  };\n\n  componentDidMount() {\n    ModelAPI.getModels({\n      organization: this.props.organization,\n      pageSize: 0,\n    }).then(models => {\n      this.setState({\n        models: models.data.data.filter(\n          model => model.id !== this.props.modelId\n        ),\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isFocus !== prevProps.isFocus && this.nameInput) {\n      this.nameInput.focus();\n    }\n  }\n\n  onCheckBoxChange = ({ target }) => {\n    const node = { [target.name]: target.checked };\n    this.props.onToolsMenuChange(node);\n  };\n\n  onInversedCheckBoxChange = ({ target }) => {\n    const node = { [target.name]: !target.checked };\n    this.props.onToolsMenuChange(node);\n  };\n\n  onVerbButtonClick = ({ target }) => {\n    const node = { verbs: [target.name] };\n    this.props.onToolsMenuChange(node);\n  };\n\n  onNodeTypeChange = ({ target }) => {\n    const node = { [target.name]: target.value };\n    if (target.value === 'reference') {\n      node.referenceId = this.state.models[0].id;\n      node.children = [];\n    }\n    this.props.onToolsMenuChange(node);\n  };\n\n  onTextFieldChange = ({ target }) => {\n    const node = { [target.name]: target.value };\n    this.props.onToolsMenuChange(node);\n  };\n\n  onDropDownChange = ({ target }) => {\n    const node = { [target.name]: target.value };\n    this.props.onToolsMenuChange(node);\n  };\n\n  onBranchColorChange = color => {\n    const node = { branchColor: color.hex };\n    this.props.onToolsMenuChange(node);\n  };\n\n  onSubpathCheckboxChange = ({ target }) => {\n    const node = { isSubPath: target.checked };\n    // onToolsMenuChange requires to set the verbs in order to autoselect operations\n    // when creating a new child node\n    // Also, we can't just pass READ and UPDATE, all fields are required\n    if (target.checked) {\n      node.verbs = ['SEARCH', 'POST', 'PUT', 'GET', 'DELETE'];\n    }\n    this.props.onToolsMenuChange(node);\n  };\n\n  handleChange = name => event => {\n    this.setState({ ...name, [name]: event.target.checked });\n  };\n\n  render() {\n    const { node, classes, data, onEditClick } = this.props;\n    node.patchable = !!node.patchable;\n    node.notImplemented = !!node.notImplemented;\n    node.xDescription = node.xDescription || '';\n    node.verbs = node.verbs || ['SEARCH', 'POST', 'PUT', 'GET', 'DELETE'];\n    node.branchColor = node.branchColor || '#FCB900';\n\n    node.verbs = node.verbs.filter(verb => verb !== 'UPDATE'); // Update should not be a verb\n    const nodeHasOperationAncestor = hasOperationAncestor(node, data);\n    const nodeHasAncestorWithPost = hasAncestorWithPost(node, data);\n\n    return (\n      <div className={classes.editContainer}>\n        <div className={classes.fieldContainer}>\n          <div className={classes.hideIconContainer}>\n            <IconButton\n              id=\"editHideButton\"\n              onClick={onEditClick}\n              className={classes.hideEditIcon}\n            >\n              <VisibilityOffIcon />\n            </IconButton>\n          </div>\n          <label className=\"title-menu\">Edit attribute</label>\n\n          <Tooltip\n            title=\"Name of the attribute. Special case: if you specify comma-separated words, they'll serve as a list of possible values for the parent\"\n            placement=\"right\"\n          >\n            <TextField\n              disabled={!node.parent}\n              InputLabelProps={{ shrink: true }}\n              id=\"outlined-email-input\"\n              label=\"Label\"\n              name=\"name\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={this.onTextFieldChange}\n              onKeyDown={e => {\n                if (e.keyCode === 13) {\n                  this.props.onEnterDown();\n                }\n              }}\n              className=\"item-sidepanel\"\n              value={node.name}\n              inputRef={input => {\n                this.nameInput = input;\n              }}\n            />\n          </Tooltip>\n\n          {node.parent && (\n            <>\n              <Tooltip\n                title=\"A description to help developer who will use the API\"\n                placement=\"right\"\n              >\n                <TextField\n                  multiline\n                  disabled={!node.parent}\n                  InputLabelProps={{ shrink: true }}\n                  id=\"outlined-textarea\"\n                  label=\"Description\"\n                  name=\"description\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  onChange={this.onTextFieldChange}\n                  className=\"item-sidepanel\"\n                  value={node.description}\n                />\n              </Tooltip>\n              <Tooltip\n                title=\"The description that isn't public or included in the specification but only displayed to help API\"\n                placement=\"right\"\n              >\n                <TextField\n                  multiline\n                  disabled={!node.parent}\n                  InputLabelProps={{ shrink: true }}\n                  id=\"outlined-email-input\"\n                  label=\"Example\"\n                  type=\"example\"\n                  name=\"example\"\n                  autoComplete=\"example\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  onChange={this.onTextFieldChange}\n                  className=\"item-sidepanel\"\n                  value={node.example}\n                />\n              </Tooltip>\n              <FormControl\n                disabled={!node.parent}\n                variant=\"outlined\"\n                margin=\"normal\"\n              >\n                <InputLabel\n                  ref={ref => {\n                    this.InputLabelRef = ref;\n                  }}\n                  htmlFor=\"type-select\"\n                >\n                  Type\n                </InputLabel>\n                <Select\n                  className=\"dropdown\"\n                  native\n                  value={node.type}\n                  onChange={this.onNodeTypeChange}\n                  input={\n                    <OutlinedInput\n                      name=\"type\"\n                      labelWidth={35}\n                      id=\"type-select\"\n                    />\n                  }\n                >\n                  <option value=\"integer\">integer</option>\n                  <option value=\"number\">number</option>\n                  <option value=\"string\">text</option>\n                  <option value=\"boolean\">boolean</option>\n                  <option value=\"array\">list</option>\n                  <option value=\"object\">object</option>\n                  <option value=\"operation\">operation</option>\n                  <option value=\"reference\">reference to...</option>\n                </Select>\n              </FormControl>\n              {node.type === 'reference' && (\n                <Paper className={classes.referencePaper}>\n                  <Typography>Reference</Typography>\n                  <FormControl variant=\"outlined\" margin=\"normal\">\n                    <InputLabel\n                      ref={ref => {\n                        this.InputLabelRef = ref;\n                      }}\n                      htmlFor=\"reference-select\"\n                    >\n                      Model\n                    </InputLabel>\n                    <Select\n                      className=\"dropdown\"\n                      native\n                      value={node.referenceId}\n                      onChange={this.onDropDownChange}\n                      input={\n                        <OutlinedInput\n                          name=\"referenceId\"\n                          labelWidth={45}\n                          id=\"reference-select\"\n                        />\n                      }\n                    >\n                      {this.state.models.map(model => {\n                        return (\n                          <option key={model.id} value={model.id}>{`${\n                            model.name\n                          }${\n                            model.freezeTag !== '0' ? ' (frozen)' : ''\n                          }`}</option>\n                        );\n                      })}\n                    </Select>\n                  </FormControl>\n                  <Tooltip\n                    title=\"Determine if the reference model should be a simple object or an array\"\n                    placement=\"right\"\n                  >\n                    <label>\n                      <Checkbox\n                        color=\"default\"\n                        onChange={this.onCheckBoxChange}\n                        type=\"checkbox\"\n                        name=\"isArray\"\n                        checked={node.isArray}\n                      />\n                      Is Array\n                    </label>\n                  </Tooltip>\n                  <>\n                    <Tooltip\n                      title=\"Define branch color (with children)\"\n                      placement=\"right\"\n                    >\n                      <label\n                        style={{ fontSize: '14px', 'padding-bottom': '10px' }}\n                      >\n                        Color Branch\n                      </label>\n                    </Tooltip>\n                    <TwitterPicker\n                      color={node.branchColor}\n                      triangle=\"hide\"\n                      width=\"auto\"\n                      onChangeComplete={this.onBranchColorChange}\n                      style={{ 'padding-bottom': '20px', margin: 'auto' }}\n                    />\n                  </>\n                </Paper>\n              )}\n              {node.type !== 'reference' && node.type !== 'operation' && !nodeHasOperationAncestor && (\n                <Tooltip\n                  title=\"make this field searchable (include it in query params for searchs with GET /objects?field=...)\"\n                  placement=\"right\"\n                >\n                  <label>\n                    <Checkbox\n                      disabled={!node.parent}\n                      color=\"default\"\n                      onChange={this.onCheckBoxChange}\n                      type=\"checkbox\"\n                      name=\"queryable\"\n                      checked={node.queryable}\n                    />\n                    Searchable\n                  </label>\n                </Tooltip>\n              )}\n              {node.type !== 'operation' && !nodeHasOperationAncestor && (\n                <Tooltip\n                  title=\"make this field appear in search results (reponse to GET /objects)\"\n                  placement=\"right\"\n                >\n                  <label>\n                    <Checkbox\n                      disabled={!node.parent}\n                      color=\"default\"\n                      onChange={this.onCheckBoxChange}\n                      type=\"checkbox\"\n                      name=\"abstract\"\n                      checked={node.abstract}\n                    />\n                    In abstract\n                  </label>\n                </Tooltip>\n              )}\n            </>\n          )}\n          {node.type !== 'reference' && (\n            <ExpansionPanel>\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n              >\n                <Typography className={classes.heading}>\n                  Advanced settings\n                </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails className={classes.ExpansionPanelDetails}>\n                <>\n                  <Tooltip\n                    title=\"Define color branch (with children)\"\n                    placement=\"right\"\n                  >\n                    <label\n                      style={{ fontSize: '14px', 'padding-bottom': '10px' }}\n                    >\n                      Color branch\n                    </label>\n                  </Tooltip>\n                  <TwitterPicker\n                    color={node.branchColor}\n                    triangle=\"hide\"\n                    width=\"auto\"\n                    onChangeComplete={this.onBranchColorChange}\n                    style={{ 'padding-bottom': '20px', margin: 'auto' }}\n                  />\n                </>\n                {node.parent && !nodeHasOperationAncestor && (\n                  <>\n                    <Tooltip\n                      title=\"Make a sub context for this field (will be accessible by GET /objects/thisfield).\"\n                      placement=\"right\"\n                    >\n                      <label>\n                        <Checkbox\n                          disabled={!node.parent}\n                          color=\"default\"\n                          onChange={this.onSubpathCheckboxChange}\n                          type=\"checkbox\"\n                          name=\"isSubPath\"\n                          checked={node.isSubPath}\n                        />\n                        Subpath\n                      </label>\n                    </Tooltip>\n                  </>\n                )}\n                {node.parent && !nodeHasOperationAncestor && !node.isSubPath && (\n                  <>\n                    <Tooltip\n                      title=\"When this box is checked, the attribute will be individually updatable. Otherwise, updates are only possible for all the fields together.\"\n                      placement=\"right\"\n                    >\n                      <label>\n                        <Checkbox\n                          disabled={!node.parent}\n                          color=\"default\"\n                          onChange={this.onCheckBoxChange}\n                          type=\"checkbox\"\n                          name=\"patchable\"\n                          checked={node.patchable}\n                        />\n                        Partial update\n                      </label>\n                    </Tooltip>\n                  </>\n                )}\n                {node.parent && (\n                  <>\n                    <Tooltip\n                      title=\"Fields that are not yet implemented do not appear in the specification result\"\n                      placement=\"right\"\n                    >\n                      <label style={{ fontSize: '14px' }}>\n                        <Checkbox\n                          disabled={!node.parent}\n                          color=\"default\"\n                          onChange={this.onCheckBoxChange}\n                          type=\"checkbox\"\n                          name=\"notImplemented\"\n                          checked={node.notImplemented}\n                        />\n                        Not yet implemented\n                      </label>\n                    </Tooltip>\n                  </>\n                )}\n                {node.parent && node.type !== 'operation' && !node.isSubPath && (\n                  <>\n                    <Tooltip\n                      title=\"This field will be present on request payload (POST body) at creation time if checked\"\n                      placement=\"right\"\n                    >\n                      <label>\n                        <Checkbox\n                          disabled={!node.parent}\n                          color=\"default\"\n                          onChange={this.onInversedCheckBoxChange}\n                          type=\"checkbox\"\n                          name=\"calculated\"\n                          checked={!node.calculated}\n                        />\n                        {nodeHasOperationAncestor\n                          ? 'In Operation Request'\n                          : 'Known on create'}\n                      </label>\n                    </Tooltip>\n                  </>\n                )}\n                {node.type !== 'operation' &&\n                  !node.isSubPath &&\n                  node.parent &&\n                  (nodeHasOperationAncestor || nodeHasAncestorWithPost) && (\n                    <Tooltip\n                      title=\"make the field appear in POST responses\"\n                      placement=\"right\"\n                    >\n                      <label>\n                        <Checkbox\n                          color=\"default\"\n                          onChange={this.onCheckBoxChange}\n                          type=\"checkbox\"\n                          name=\"isInPostResponse\"\n                          checked={node.isInPostResponse}\n                        />\n                        {nodeHasOperationAncestor\n                          ? 'In Operation Response'\n                          : 'In Create Response'}\n                      </label>\n                    </Tooltip>\n                  )}\n                {node.type !== 'reference' && !nodeHasOperationAncestor && (\n                  <>\n                    <Tooltip\n                      title=\"make the results paginated (adds the query parameters page & pageSize)\"\n                      placement=\"right\"\n                    >\n                      <label>\n                        <Checkbox\n                          disabled={\n                            ((!node.isSubPath || node.type !== 'array') &&\n                              !!node.parent) ||\n                            false\n                          }\n                          color=\"default\"\n                          onChange={this.onCheckBoxChange}\n                          type=\"checkbox\"\n                          name=\"paginable\"\n                          checked={node.paginable}\n                        />\n                        Pagination\n                      </label>\n                    </Tooltip>\n\n                    <Tooltip\n                      title=\"Optionally define here additionals query params, comma-separated. Those terms come in addition to the ones that are 'searchable'\"\n                      placement=\"right\"\n                    >\n                      <TextField\n                        disabled={\n                          ((!node.isSubPath || node.type !== 'array') &&\n                            !!node.parent) ||\n                          false\n                        }\n                        label=\"Query Params\"\n                        type=\"queryParams\"\n                        name=\"queryParams\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.onTextFieldChange}\n                        className=\"item-sidepanel\"\n                        value={node.queryParams || ''}\n                      />\n                    </Tooltip>\n                    <Tooltip\n                      title=\"An optional, internal explanation for those who have to implement this API. For instance the database where to find the data for this attribute. (Not included in the public specification)\"\n                      placement=\"right\"\n                    >\n                      <TextField\n                        multiline\n                        disabled={!node.parent}\n                        InputLabelProps={{ shrink: true }}\n                        id=\"outlined-textarea\"\n                        label=\"Internal Description\"\n                        name=\"xDescription\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={this.onTextFieldChange}\n                        className=\"item-sidepanel\"\n                        value={node.xDescription}\n                      />\n                    </Tooltip>\n                  </>\n                )}\n                {(node.isSubPath || !node.parent) && (\n                  <FormControl\n                    component=\"fieldset\"\n                    className={classes.formControl}\n                  >\n                    <FormLabel className={classes.formLabel} component=\"legend\">\n                      Operations\n                    </FormLabel>\n                    <FormGroup>\n                      {(!node.parent || node.type === 'array') && (\n                        <CustomizedCheckbox\n                          customcolor=\"#61affe\"\n                          label=\"SEARCH\"\n                          name=\"SEARCH\"\n                          type=\"checkbox\"\n                          checked={node.verbs.includes('SEARCH')}\n                          onChange={this.onVerbButtonClick}\n                        />\n                      )}\n                      {(!node.parent || node.type === 'array') && (\n                        <CustomizedCheckbox\n                          customcolor=\"#49cc90\"\n                          label=\"CREATE\"\n                          name=\"POST\"\n                          type=\"checkbox\"\n                          checked={node.verbs.includes('POST')}\n                          onChange={this.onVerbButtonClick}\n                        />\n                      )}\n                      <CustomizedCheckbox\n                        customcolor=\"#61affe\"\n                        label=\"READ\"\n                        name=\"GET\"\n                        type=\"checkbox\"\n                        checked={node.verbs.includes('GET')}\n                        onChange={this.onVerbButtonClick}\n                      />\n                      <CustomizedCheckbox\n                        customcolor=\"#fca130\"\n                        label=\"UPDATE\"\n                        name=\"PUT\"\n                        type=\"checkbox\"\n                        checked={node.verbs.includes('PUT')}\n                        onChange={this.onVerbButtonClick}\n                      />\n                      {(!node.parent || node.type === 'array') && (\n                        <CustomizedCheckbox\n                          customcolor=\"#f93e3e\"\n                          label=\"DELETE\"\n                          name=\"DELETE\"\n                          type=\"checkbox\"\n                          checked={node.verbs.includes('DELETE')}\n                          onChange={this.onVerbButtonClick}\n                        />\n                      )}\n                    </FormGroup>\n                  </FormControl>\n                )}\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(ToolsMenu);\n","/* eslint-disable consistent-return */\nimport React, { Component } from 'react';\nimport { Notification } from 'element-react';\nimport { withRouter } from 'react-router-dom';\nimport Slide from '@material-ui/core/Slide';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport ResizePanel from 'react-resize-panel';\nimport { trackPromise } from 'react-promise-tracker';\nimport Tree from '../mindmap/Tree';\nimport { updateTree } from '../../helpers/tree_helper';\nimport EditNodeMenu from '../mindmap/EditNodeMenu';\nimport LivePreview from '../mindmap/LivePreview';\nimport SwaggerAPI from '../../api/SwaggerAPI';\nimport ModelAPI from '../../api/ModelAPI';\nimport styles from '../../styles/MindmapView.css';\nimport { UserContext } from '../../contexts/UserContext';\n\nclass MindmapView extends Component {\n  static contextType = UserContext;\n\n  state = {\n    history: [],\n    saved: true,\n    canBeSaved: false,\n    currentNode: { nodeKey: '' },\n    data: { children: [], name: '' },\n    refinerRules: [],\n    livePreviewSwagger: null,\n    isLivePreviewOpen: true,\n    isEditMenuOpen: true,\n    focus: 'tree',\n    modelId: this.props.location.state\n      ? this.props.location.state.modelId\n      : null,\n    organizationId: this.props.location.state\n      ? this.props.location.state.organizationId\n      : null\n  };\n\n  intervalId = null;\n\n  componentDidMount() {\n    const { location, history } = this.props;\n\n    if (!location.state) {\n      history.push('/dashboard');\n    } else {\n      const { data, modelId, isPublic } = location.state;\n\n      if (!isPublic) {\n        ModelAPI.getModel(modelId).then(model => {\n          this.setState(\n            {\n              data: model.data,\n              refinerRules: model.refinerRules || [],\n              currentNode: { ...model.data },\n              canBeSaved: true\n            },\n            () => {\n              this.saveModel(false);\n              this.requestLivePreview(this.state.data);\n            }\n          );\n        });\n      } else {\n        this.setState(\n          {\n            data,\n            currentNode: { ...data }\n          },\n          () => {\n            this.saveModel(false);\n            this.requestLivePreview(this.state.data);\n          }\n        );\n      }\n\n      this.intervalId = setInterval(() => {\n        if (this.state.canBeSaved) {\n          this.saveModel(false);\n        }\n      }, 10000);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n    if (this.state.canBeSaved) {\n      this.saveModel(true);\n    }\n  }\n\n  onNodeSelect = node => {\n    this.setState({\n      currentNode: { ...node }\n    });\n  };\n\n  onTreeUpdate = ({ dataUpdated, currentNode }) => {\n    const { history, data } = this.state;\n    history.push(data);\n    this.setState({ data: dataUpdated, currentNode, history, saved: false });\n    this.requestLivePreview(dataUpdated);\n  };\n\n  setModelLock = isLock => {\n    const { modelId } = this.state;\n    ModelAPI.setModelLock(modelId, isLock).catch(err => {\n      if (err.response.status === 403) {\n        Notification.error({\n          title: 'Error',\n          message:\n            'You can only modify your own models. Please ask your team leader if you need a modification on this model.'\n        });\n      } else {\n        Notification.error({\n          title: 'Error',\n          message: 'Could not lock/unlock. Please log in'\n        });\n      }\n    });\n  };\n\n  saveModel = isExitSave => {\n    // eslint-disable-next-line\n    const { saved, modelId, data } = this.state;\n    const { isPublic } = this.props.location.state;\n\n    if (isPublic) {\n      return;\n    }\n\n    if (saved && !isExitSave) {\n      // Already saved, only maintain the lock\n      return this.setModelLock(true);\n    }\n\n    if (saved && isExitSave) {\n      // Already saved, only remove the lock\n      return this.setModelLock(false);\n    }\n\n    const isLocked = !isExitSave;\n\n    ModelAPI.saveModel(modelId, { data }, isLocked)\n      .then(() => {\n        this.setState({ saved: true });\n      })\n      .catch(err => {\n        if (err.response.status === 403) {\n          Notification.error({\n            title: 'Error',\n            message:\n              'You can only modify your own models. Please ask your team leader if you need a modification on this model.'\n          });\n        } else {\n          Notification.error({\n            title: 'Error',\n            message: 'Could not save. Please log in'\n          });\n        }\n      });\n  };\n\n  onToolsMenuChange = node => {\n    let { currentNode, data } = this.state;\n    const { history } = this.state;\n\n    if (node.verbs) {\n      if (currentNode.verbs.includes(node.verbs[0])) {\n        const newNode = {\n          verbs: currentNode.verbs.filter(verb => verb !== node.verbs[0])\n        };\n        // eslint-disable-next-line no-prototype-builtins\n        if (node.hasOwnProperty('isSubPath')) {\n          newNode.isSubPath = node.isSubPath;\n        }\n        currentNode = { ...currentNode, ...newNode };\n      } else {\n        const newNode = { verbs: currentNode.verbs.concat(node.verbs) };\n        // eslint-disable-next-line no-prototype-builtins\n        if (node.hasOwnProperty('isSubPath')) {\n          newNode.isSubPath = node.isSubPath;\n        }\n        currentNode = { ...currentNode, ...newNode };\n      }\n    } else {\n      currentNode = { ...currentNode, ...node };\n    }\n    data = updateTree(data, currentNode);\n    history.push(data);\n    this.setState({\n      data,\n      history,\n      currentNode,\n      saved: false\n    });\n    this.requestLivePreview(data);\n  };\n\n  onPreviewClick = () => {\n    const { isLivePreviewOpen, data } = this.state;\n    this.setState({\n      isLivePreviewOpen: !isLivePreviewOpen\n    });\n\n    if (!isLivePreviewOpen) {\n      this.requestLivePreview(data);\n    }\n  };\n\n  onEditClick = () => {\n    const { isEditMenuOpen } = this.state;\n    this.setState({\n      isEditMenuOpen: !isEditMenuOpen\n    });\n  };\n\n  onPreviewClose = () => {\n    this.setState({ isLivePreviewOpen: false });\n  };\n\n  onUndo = () => {\n    const { history } = this.state;\n    if (history.length === 0) {\n      return;\n    }\n\n    const data = history.pop();\n    this.setState({ currentNode: data, data, history });\n  };\n\n  setFocus = onFocus => {\n    const { focus } = this.state;\n    if (focus !== onFocus) {\n      this.setState({ focus: onFocus });\n    }\n  };\n\n  requestLivePreview = async data => {\n    const { isLivePreviewOpen, refinerRules } = this.state;\n    const organizationId = this.state.organizationId\n      ? this.state.organizationId\n      : 1;\n    if (isLivePreviewOpen) {\n      // Promise tracker to display a loading spinner\n      trackPromise(\n        SwaggerAPI.requestLivePreview(\n          { data, refinerRules },\n          organizationId\n        ).then(result => {\n          this.setState({ livePreviewSwagger: result });\n        })\n      );\n    }\n  };\n\n  render() {\n    const {\n      currentNode,\n      data,\n      focus,\n      isLivePreviewOpen,\n      isEditMenuOpen,\n      livePreviewSwagger\n    } = this.state;\n    const { classes, location } = this.props;\n    const modelId = location.state ? location.state.modelId : null;\n\n    const preview = (\n      <ResizePanel\n        direction=\"w\"\n        handleClass={classes.customHandle}\n        borderClass={classes.customResizeBorder}\n        style={{\n          position: 'inherit',\n          right: '0',\n          width: '45%',\n          maxWidth: '80%',\n          zIndex: 10\n        }}\n      >\n        <LivePreview\n          swagger={livePreviewSwagger}\n          onPreviewClick={this.onPreviewClick}\n        />\n      </ResizePanel>\n    );\n\n    let treeWidth = '';\n\n    if (isLivePreviewOpen) {\n      treeWidth = isEditMenuOpen ? 'small-tree' : 'left-half-tree';\n    } else {\n      treeWidth = isEditMenuOpen ? 'right-half-tree' : 'full-tree';\n    }\n\n    return data ? (\n      <div className={classes.svgContainer}>\n        <Slide direction=\"right\" in={isEditMenuOpen} mountOnEnter unmountOnExit>\n          <EditNodeMenu\n            organization={this.state.organizationId}\n            modelId={this.state.modelId}\n            node={currentNode}\n            data={data}\n            onToolsMenuChange={this.onToolsMenuChange}\n            onEnterDown={() => this.setFocus('tree')}\n            isFocus={focus === 'menu'}\n            onEditClick={this.onEditClick}\n          />\n        </Slide>\n        <div className={`relative-container ${treeWidth}`}>\n          {this.context.user.organizations ? (\n            <>\n              <Tree\n                {...this.props}\n                animated\n                data={data}\n                modelId={modelId}\n                currentNode={currentNode}\n                isFocus={focus === 'tree'}\n                width={treeWidth}\n                onNodeSelect={this.onNodeSelect}\n                onToolsMenuChange={this.onToolsMenuChange}\n                onTreeUpdate={this.onTreeUpdate}\n                newModel={() => this.handleNewModelWarningOpen()}\n                onLetterDown={() => this.setFocus('menu')}\n                onFocus={() => this.setFocus('tree')}\n                onUndo={this.onUndo}\n              />\n            </>\n          ) : (\n            <>\n              <Tree\n                {...this.props}\n                animated\n                data={data}\n                modelId={modelId}\n                currentNode={currentNode}\n                isFocus={focus === 'tree'}\n                width={treeWidth}\n                onNodeSelect={this.onNodeSelect}\n                onToolsMenuChange={this.onToolsMenuChange}\n                onTreeUpdate={this.onTreeUpdate}\n                newModel={() => this.handleNewModelWarningOpen()}\n                onLetterDown={() => this.setFocus('menu')}\n                onFocus={() => this.setFocus('tree')}\n                onUndo={this.onUndo}\n              />\n            </>\n          )}\n        </div>\n        <Slide\n          direction=\"left\"\n          in={isLivePreviewOpen}\n          mountOnEnter\n          unmountOnExit\n        >\n          {preview}\n        </Slide>\n        {!isLivePreviewOpen && (\n          <IconButton\n            id=\"previewShowButton\"\n            color=\"primary\"\n            onClick={() => this.onPreviewClick()}\n            className={classes.showIcon}\n          >\n            <VisibilityIcon />\n          </IconButton>\n        )}\n        {!isEditMenuOpen && (\n          <IconButton\n            id=\"editShowButton\"\n            color=\"primary\"\n            onClick={() => this.onEditClick()}\n            className={classes.showIconEdit}\n          >\n            <VisibilityIcon />\n          </IconButton>\n        )}\n      </div>\n    ) : null;\n  }\n}\n\nexport default withRouter(withStyles(styles)(MindmapView));\n","import BaseAPI from './BaseAPI';\n\nexport default class ModelAPI extends BaseAPI {\n  static getModelNames(teamId) {\n    const params = teamId ? { params: { teamId } } : {};\n    return this.execute('get', 'users/me/modelsList', params);\n  }\n\n  static getModels(params) {\n    return this.execute('get', `users/me/models`, { params }, true);\n  }\n\n  static getModelSwaggerAsFile(modelId, fileType) {\n    return this.execute('get', `models/${modelId}/swagger?type=${fileType}`);\n  }\n\n  static createModel(teamId, model) {\n    return this.execute('post', `/models/`, {\n      data: { model, teamId }\n    });\n  }\n\n  static getModel(modelId) {\n    return this.execute('get', `/models/${modelId}`);\n  }\n\n  static setModelLock(modelId, isLock) {\n    if (isLock) {\n      return this.execute('put', `/models/${modelId}/lock`);\n    }\n\n    return this.execute('delete', `/models/${modelId}/lock`);\n  }\n\n  static saveModel(modelId, model, isLocked) {\n    return this.execute('put', `/models/${modelId}?isLocked=${isLocked}`, {\n      data: model\n    });\n  }\n\n  static freezeModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=freeze`);\n  }\n\n  static revertModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=revert`);\n  }\n\n  static duplicateModel(modelId) {\n    return this.execute('post', `/models/${modelId}?action=duplicate`);\n  }\n\n  static deleteModel(modelId) {\n    return this.execute('delete', `/models/${modelId}`);\n  }\n\n  static renameModel(modelId, name) {\n    return this.execute('patch', `/models/${modelId}`, { data: { name } });\n  }\n\n  static publishToApiManager(modelId) {\n    return this.execute('post', `/models/${modelId}/gravitee`);\n  }\n\n  static changeOrganizationModel(modelId, tags, name, organizationId) {\n    return this.execute('patch', `/models/${modelId}`, {\n      data: { tags, name, organizationId }\n    });\n  }\n\n  static getModelRules(modelId) {\n    return this.execute('get', `/models/${modelId}/refinerRules`);\n  }\n\n  static testModelRule(modelId, rules) {\n    return this.execute(\n      'post',\n      `/models/${modelId}/refinerRules?testOnly=true`,\n      {\n        data: rules\n      }\n    );\n  }\n\n  static createModelRule(modelId, rules) {\n    return this.execute('put', `/models/${modelId}/refinerRules`, {\n      data: rules\n    });\n  }\n\n  static updateModelRule(modelId, ruleId, rule) {\n    return this.execute('put', `/models/${modelId}/refinerRules/${ruleId}`, {\n      data: rule\n    });\n  }\n\n  static deleteModelRule(modelId, ruleId) {\n    return this.execute('delete', `/models/${modelId}/refinerRules/${ruleId}`);\n  }\n}\n","import uniqid from 'uniqid';\n\nexport function searchTreeByKey(key, startnode) {\n  const stack = [startnode];\n  while (stack.length) {\n    const node = stack.pop();\n    if (node.nodeKey === key) return node;\n    stack.push(...node.children);\n  }\n  return stack.pop() || null;\n}\n\nexport function hasAncestorWithPost(node, root) {\n  if (node.type === 'operation') return true;\n  if (node.isSubPath === true) {\n    return node.verbs.includes('POST');\n  }\n  if (!node.parent) return node.verbs.includes('POST');\n\n  const parentNode = searchTreeByKey(node.parent, root);\n  if (!parentNode) return false;\n  return hasAncestorWithPost(parentNode, root);\n}\n\nexport function hasOperationAncestor(node, root) {\n  if (node.type === 'operation') return true;\n  if (node.isSubPath === true) return false;\n  if (!node.parent) return false;\n\n  const parentNode = searchTreeByKey(node.parent, root);\n  if (!parentNode) return false;\n  return hasOperationAncestor(parentNode, root);\n}\n\nexport function isAncestorOf(nodeKey, ofNodeKey, root) {\n  let ofNode = searchTreeByKey(ofNodeKey, root);\n\n  while (ofNode.nodeKey !== nodeKey && ofNode.parent) {\n    ofNode = searchTreeByKey(ofNode.parent, root);\n  }\n\n  return ofNode.nodeKey === nodeKey;\n}\n\nexport function cloneTree(node, parentNodeKey, generateId = true) {\n  return {\n    ...node,\n    nodeKey: generateId ? uniqid() : node.nodeKey,\n    parent: parentNodeKey,\n    children: node.children.map(child => {\n      return cloneTree(child, node.nodeKey, generateId);\n    }),\n  };\n}\n\nexport function addNewChildNode(root, selectedNodeKey, direction) {\n  if (!selectedNodeKey) {\n    return {};\n  }\n  const allData = cloneTree(root, null, false);\n  const nodeWhereToAdd = searchTreeByKey(selectedNodeKey, allData);\n  const newNodeKey = uniqid();\n  const newNode = {\n    name: '',\n    direction: direction || nodeWhereToAdd.direction,\n    parent: nodeWhereToAdd.nodeKey,\n    children: [],\n    nodeKey: newNodeKey,\n    type: 'string',\n    referenceId: '',\n    isArray: false,\n    example: '',\n    abstract: true,\n    description: '',\n    queryable: false,\n    paginable: false,\n    isInPostResponse: false,\n    patchable: false,\n    notImplemented: false,\n    isSubPath: false,\n    verbs: [],\n    calculated: false,\n    queryParams: '',\n    branchColor: nodeWhereToAdd.branchColor,\n  };\n  nodeWhereToAdd.children.push(newNode);\n  switch (nodeWhereToAdd.type) {\n    case 'array':\n      nodeWhereToAdd.type = 'array';\n      break;\n    case 'operation':\n      nodeWhereToAdd.type = 'operation';\n      break;\n    default:\n      nodeWhereToAdd.type = 'object';\n      break;\n  }\n\n  return {\n    data: allData,\n    selectedNodeKey: newNodeKey,\n    node: newNode,\n  };\n}\n\nexport function newTree(swaggerName) {\n  const parentId = uniqid();\n  return {\n    name: swaggerName,\n    direction: 'right',\n    nodeKey: parentId,\n    parent: null,\n    description: '',\n    example: '',\n    type: 'string',\n    referenceId: '',\n    isArray: false,\n    abstract: true,\n    queryable: false,\n    paginable: false,\n    isInPostResponse: false,\n    patchable: false,\n    notImplemented: false,\n    isSubPath: false,\n    calculated: false,\n    queryParams: '',\n    verbs: ['SEARCH', 'POST', 'GET', 'PUT', 'DELETE'],\n    children: [\n      {\n        name: 'id',\n        direction: 'right',\n        description: '',\n        type: 'integer',\n        referenceId: '',\n        isArray: false,\n        abstract: true,\n        queryable: false,\n        paginable: false,\n        patchable: false,\n        notImplemented: false,\n        isInPostResponse: false,\n        isSubPath: false,\n        calculated: true,\n        example: '',\n        parent: parentId,\n        nodeKey: uniqid(),\n        children: [],\n      },\n      {\n        name: 'an attribute',\n        direction: 'right',\n        description: '',\n        type: 'integer',\n        referenceId: '',\n        isArray: false,\n        abstract: true,\n        queryable: false,\n        paginable: false,\n        patchable: false,\n        notImplemented: false,\n        isInPostResponse: false,\n        isSubPath: false,\n        calculated: true,\n        example: '',\n        parent: parentId,\n        nodeKey: uniqid(),\n        children: [],\n      },\n    ],\n  };\n}\n\nfunction updateSubNodes(parentNodeToUpdate, changeFunction) {\n  changeFunction(parentNodeToUpdate);\n\n  if (parentNodeToUpdate.children && parentNodeToUpdate.children.length > 0) {\n    parentNodeToUpdate.children.map(child =>\n      updateSubNodes(child, changeFunction)\n    );\n  }\n}\n\nfunction updateParentNodes(\n  root,\n  childNode,\n  changeFunction,\n  changeFunctionParam\n) {\n  changeFunction(childNode, changeFunctionParam);\n  if (childNode.parent) {\n    const parent = searchTreeByKey(childNode.parent, root);\n\n    if (parent) {\n      updateParentNodes(root, parent, changeFunction, changeFunctionParam);\n    }\n  }\n}\n\nexport function updateTree(root, node) {\n  const data = cloneTree(root, null, false);\n  const nodeToUpdate = searchTreeByKey(node.nodeKey, data);\n  nodeToUpdate.name = node.name;\n  nodeToUpdate.description = node.description;\n  nodeToUpdate.xDescription = node.xDescription;\n  nodeToUpdate.example = node.example;\n  nodeToUpdate.type = node.type;\n  nodeToUpdate.referenceId = node.referenceId;\n  nodeToUpdate.isArray = node.isArray;\n\n  nodeToUpdate.queryable = node.queryable;\n  nodeToUpdate.isSubPath = node.isSubPath;\n  nodeToUpdate.calculated = node.calculated;\n  nodeToUpdate.isInPostResponse = node.isInPostResponse;\n  nodeToUpdate.paginable = node.paginable;\n  nodeToUpdate.patchable = node.patchable;\n\n  nodeToUpdate.queryParams = node.queryParams;\n  nodeToUpdate.verbs = node.verbs;\n  nodeToUpdate.parent = node.parent;\n\n  if (nodeToUpdate.type === 'reference') {\n    nodeToUpdate.children = node.children;\n  }\n\n  if (node.branchColor !== nodeToUpdate.branchColor) {\n    updateSubNodes(nodeToUpdate, tmpNode => {\n      tmpNode.branchColor = node.branchColor; // eslint-disable-line no-param-reassign\n    });\n  }\n\n  if (nodeToUpdate.notImplemented !== node.notImplemented) {\n    if (node.notImplemented) {\n      // Mark all subnodes as not implemented\n      updateSubNodes(nodeToUpdate, tmpNode => {\n        tmpNode.notImplemented = true; // eslint-disable-line no-param-reassign\n      });\n    } else {\n      // Mark all parent nodes as implemented\n      updateParentNodes(data, nodeToUpdate, tmpNode => {\n        tmpNode.notImplemented = false; // eslint-disable-line no-param-reassign\n      });\n    }\n  }\n\n  if (nodeToUpdate.abstract !== node.abstract) {\n    if (node.abstract) {\n      // Add the parent to abstract\n      updateParentNodes(data, nodeToUpdate, tmpNode => {\n        tmpNode.abstract = true; // eslint-disable-line no-param-reassign\n      });\n    } else {\n      // remove only this from abstract\n      nodeToUpdate.abstract = node.abstract; // eslint-disable-line no-param-reassign\n    }\n  }\n\n  return data;\n}\n","import BaseAPI from './BaseAPI';\n\nexport default class SwaggerAPI extends BaseAPI {\n  static getResourcesFromUploaded(data) {\n    return this.execute('post', '/swaggerUpload/resources', {\n      data: { jsonstring: data }\n    });\n  }\n\n  static getModelsFromResources(data) {\n    return this.execute('post', '/swaggerUpload/models', {\n      data\n    });\n  }\n\n  static requestPreview(data) {\n    return this.execute('post', '/swaggerPreviews', { data });\n  }\n\n  static requestLivePreview(data, organizationId) {\n    return this.execute(\n      'post',\n      `/swaggerLivePreviews?organizationId=${organizationId}`,\n      { data }\n    );\n  }\n}\n","/* eslint-disable react/forbid-prop-types */\n/* eslint-disable no-bitwise */\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\n\nconst propTypes = {\n  x1: PropTypes.number.isRequired,\n  x2: PropTypes.number.isRequired,\n  y1: PropTypes.number.isRequired,\n  y2: PropTypes.number.isRequired,\n  pathProps: PropTypes.object.isRequired\n};\n\nfunction diagonal(x1, y1, x2, y2) {\n  return `M${y1},${x1}C${(y1 + y2) / 2},${x1} ${(y1 + y2) /\n    2},${x2} ${y2},${x2}`;\n}\n\nexport default class Link extends PureComponent {\n  render() {\n    const d = diagonal(\n      this.props.x1,\n      this.props.y1,\n      this.props.x2,\n      this.props.y2\n    );\n\n    const colorScheme = this.props.colorScheme & 31;\n    const red = 245 + colorScheme / 3;\n    const green = 166 + colorScheme;\n    const blue = 35 + colorScheme;\n    const color = this.props.branchColor || `rgb(${red}, ${green}, ${blue})`;\n    return (\n      <path\n        style={{ stroke: color }}\n        {...this.props.pathProps}\n        {...(this.props.isDottedLine && { 'stroke-dasharray': '5, 5' })}\n        d={d}\n      />\n    );\n  }\n}\n\nLink.propTypes = propTypes;\n","const styles = () => {\n  return {\n    svgContainer: {\n      flexGrow: 3,\n      display: 'flex',\n      flexFlow: 'row nowrap',\n      backgroundColor: '#ececec',\n      height: 'calc(100% - 64.237px)',\n    },\n    treeContainer: {\n      position: 'relative'\n    },\n    previewButton: {\n      marginLeft: '50%',\n      backgroundColor: 'transparent',\n      position: 'fixed'\n    },\n    sideBarContainer: {\n      display: 'contents'\n    },\n    editButton: {\n      backgroundColor: '#324157',\n      borderRadius: '0'\n    },\n    toggleContainer: {},\n    tabButton: {\n      width: 'fit-content',\n      height: '40px'\n    },\n    optionMenu: {\n      width: '250px',\n      backgroundColor: '#e0e0e0',\n      position: 'absolute',\n      zIndex: 0,\n      height: '100%'\n    },\n    headband: {\n      display: 'flex',\n      position: 'absolute',\n      width: '-webkit-fill-available',\n      color: 'whitesmoke',\n      padding: '0.5rem 1rem'\n    },\n    headbandFrozen: {\n      backgroundColor: '#2a8dff',\n    },\n    headbandReadOnly: {\n      backgroundColor: '#f2a436',\n    },\n    exportMenu: {\n      width: '250px',\n      backgroundColor: '#e0e0e0',\n      position: 'absolute',\n      zIndex: 0,\n      height: '100%'\n    },\n    editIcon: {\n      color: 'white'\n    },\n    modalContainer: {\n      backgroundColor: '#e0e0e0',\n      width: 'fit-content',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      padding: '20px',\n      transform: 'translateY(-50%) translateX(-50%)',\n      borderRadius: '10px',\n      border: 'solid 1px black',\n      textAlign: 'center'\n    },\n    formControl: {\n      minWidth: '120px'\n    },\n    buttonSaveTeam: {\n      margin: '10px'\n    },\n    customHandle: {\n      cursor: 'ew-resize',\n      width: '5px',\n      height: '100px',\n      margin: '0px -5px',\n      background: '#324157',\n      borderRadius: '2px',\n      textAlign: 'center',\n      zIndex: '999',\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    customResizeBorder: {\n      cursor: 'ew-resize',\n      width: '10px',\n      background: 'white',\n      border: '1px solid #80808066',\n      display: 'flex',\n      zIndex: '999',\n      alignItems: 'center',\n      alignContent: 'center',\n      justifyContent: 'center',\n      overflow: 'visible'\n    },\n    customFrozenMindmapZoom: {\n      // width: '115%'\n      height: '94vh'\n    },\n    showIcon: {\n      top: '0',\n      right: '0',\n      position: 'absolute',\n      marginTop: '80px',\n      marginRight: '20px',\n      color: '#2b8dff'\n    },\n    showIconFrozenTree: {\n      top: '0',\n      right: '0',\n      position: 'absolute',\n      marginTop: '6rem',\n      marginRight: '20px',\n      color: '#2b8dff',\n      zIndex: 999\n    },\n    showIconEdit: {\n      top: '0',\n      left: '0',\n      position: 'absolute',\n      marginTop: '80px',\n      marginLeft: '20px',\n      color: '#2b8dff'\n    }\n  };\n};\n\nexport default styles;\n","import React, { useState } from 'react';\nimport { usePromiseTracker } from 'react-promise-tracker';\nimport { withStyles } from '@material-ui/core/styles';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst styles = () => {\n  return {\n    loaderContainer: {\n      width: '-webkit-fill-available',\n      maxWidth: '50%%',\n      height: '100%',\n      display: 'flex',\n      backgroundColor: '#ffffff85',\n      position: 'fixed',\n      zIndex: '10'\n    },\n    swaggerSpinner: {\n      margin: 'auto'\n    }\n  };\n};\n\nconst Spinner = props => {\n  // Can pass { delay: 500 } to avoid flickering on high connection\n  const { promiseInProgress } = usePromiseTracker();\n  const [promise, setPromise] = useState('');\n  const { classes } = props;\n\n  if (promiseInProgress === true) {\n    setTimeout(() => {\n      setPromise(true);\n    }, 0);\n  }\n\n  if (promiseInProgress === false) {\n    setTimeout(() => {\n      setPromise(false);\n    }, 2000);\n  }\n\n  return (\n    promise && (\n      <div className={classes.loaderContainer}>\n        <Loader\n          className={classes.swaggerSpinner}\n          type=\"TailSpin\"\n          color=\"#324157\"\n          height={100}\n          width={100}\n          timeout={60000}\n        />\n      </div>\n    )\n  );\n};\n\nexport default withStyles(styles)(Spinner);\n","const styles = () => {\n  return {\n    spinner: {\n      position: 'absolute',\n      margin: 'auto',\n      width: 'fit-content',\n      height: 'fit-content'\n    },\n    hideIcon: {\n      top: '0',\n      left: '0',\n      position: 'absolute',\n      margin: '20px',\n      color: '#324157'\n    }\n  };\n};\n\nexport default styles;\n","import React, { PureComponent } from 'react';\nimport SwaggerUI from 'swagger-ui-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport 'swagger-ui-react/swagger-ui.css';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Spinner from './LoaderIndicator';\nimport styles from '../../styles/LivePreview.css';\n\nclass LivePreview extends PureComponent {\n  render() {\n    const { classes, swagger, id, onPreviewClick } = this.props;\n    return (\n      <div id={id} className=\"right-tree\">\n        {swagger && (\n          <>\n            <Spinner className={classes.spinner} />\n            <IconButton\n              id=\"previewHideButton\"\n              onClick={onPreviewClick}\n              className={classes.hideIcon}\n            >\n              <VisibilityOffIcon />\n            </IconButton>\n\n            <SwaggerUI\n              spec={swagger}\n              docExpansion=\"list\"\n              showExtensions=\"true\"\n            />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(LivePreview);\n"],"sourceRoot":""}